[{"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\reportWebVitals.js":"2","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\App.js":"3","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Drugs.js":"4","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\HomePage.js":"5","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\LoginPage.js":"6","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\RegistrationPage.js":"7","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\AdminStaffComplains.js":"8","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies.js":"9","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\AdminPharmacyComplains.js":"10","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\activateAccount.js":"11","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\QrCode.js":"12","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\UserProfile.js":"13","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\qrPharmacieswithDrugs.js":"14","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies\\PatientsSubscribedPharmacies.js":"15","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\HomePageForDermatologistAppointments.js":"16","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\PharmaciesAppointmentStartPage.js":"17","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\FutureDermatologistAppointmentsForPatient.js":"18","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\DermatologistFreeAppointment.js":"19","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\HistoryDermatologistAppointmentsForPatient.js":"20","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\FuturePharmaciesConsultationsForPatient.js":"21","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\PatientsProccessedDrugsEReceipts.js":"22","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\FutureDrugsReservationsForPatient.js":"23","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\registerStaff.js":"24","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\PatientsEReceipts.js":"25","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\RegisterDrug.js":"26","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\RegisterPharmacies.js":"27","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\SupplierPages\\OrdersPage.js":"28","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\LoyalityProgram\\LoyalityProgram.js":"29","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\SupplierPages\\OfferPage.js":"30","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Header.js":"31","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\DrugSpecification.js":"32","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\TopBar.js":"33","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies\\PharmaciesWithDrugAndPrice.js":"34","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\ModalDialog.js":"35","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\CreateComplaintModal.js":"36","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\SupplierPages\\OfferModal.js":"37","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\SupplierPages\\EditOfferModal.js":"38","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Funciton\\GetAuthorisation.js":"39","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\ReservationDrugsModal.js":"40","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Alerts\\UnsuccessfulAlert.js":"41","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\ChangePasswordModal.js":"42","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Alerts\\SuccessfulAlert.js":"43","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\EreceiptDrugsModal.js":"44","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\FirstGradeModal.js":"45","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Consultations\\HistoryPharmacistConsultation.js":"46","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Reservations\\HistoryDrugsReservations.js":"47","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\DrugsEReceiptsModal.js":"48","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\ReservedConsultationModal.js":"49","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies\\FoundPharmaciesForDateRange.js":"50","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\AllergensModal.js":"51","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies\\FoundPharmacistForPharmacyForDateRange.js":"52"},{"size":625,"mtime":1629151781637,"results":"53","hashOfConfig":"54"},{"size":375,"mtime":1629151781639,"results":"55","hashOfConfig":"54"},{"size":5298,"mtime":1629151781554,"results":"56","hashOfConfig":"54"},{"size":21005,"mtime":1629151781566,"results":"57","hashOfConfig":"54"},{"size":2755,"mtime":1629151781568,"results":"58","hashOfConfig":"54"},{"size":10509,"mtime":1629151781569,"results":"59","hashOfConfig":"54"},{"size":7944,"mtime":1629151781588,"results":"60","hashOfConfig":"54"},{"size":5604,"mtime":1629151781558,"results":"61","hashOfConfig":"54"},{"size":29088,"mtime":1629151781581,"results":"62","hashOfConfig":"54"},{"size":5584,"mtime":1629151781556,"results":"63","hashOfConfig":"54"},{"size":1323,"mtime":1629151781597,"results":"64","hashOfConfig":"54"},{"size":4188,"mtime":1629151781587,"results":"65","hashOfConfig":"54"},{"size":33726,"mtime":1629297763759,"results":"66","hashOfConfig":"54"},{"size":10941,"mtime":1629151781605,"results":"67","hashOfConfig":"54"},{"size":9162,"mtime":1629151781585,"results":"68","hashOfConfig":"54"},{"size":9238,"mtime":1629151781632,"results":"69","hashOfConfig":"54"},{"size":23316,"mtime":1629151781635,"results":"70","hashOfConfig":"54"},{"size":8307,"mtime":1629151781626,"results":"71","hashOfConfig":"54"},{"size":10190,"mtime":1629151781624,"results":"72","hashOfConfig":"54"},{"size":18691,"mtime":1629151781631,"results":"73","hashOfConfig":"54"},{"size":19536,"mtime":1629151781630,"results":"74","hashOfConfig":"54"},{"size":5499,"mtime":1629151781634,"results":"75","hashOfConfig":"54"},{"size":11282,"mtime":1629151781628,"results":"76","hashOfConfig":"54"},{"size":13787,"mtime":1629151781605,"results":"77","hashOfConfig":"54"},{"size":10668,"mtime":1629151781632,"results":"78","hashOfConfig":"54"},{"size":22880,"mtime":1629151781600,"results":"79","hashOfConfig":"54"},{"size":8345,"mtime":1629151781601,"results":"80","hashOfConfig":"54"},{"size":6726,"mtime":1629151781595,"results":"81","hashOfConfig":"54"},{"size":19610,"mtime":1629151781570,"results":"82","hashOfConfig":"54"},{"size":8817,"mtime":1629151781594,"results":"83","hashOfConfig":"54"},{"size":8002,"mtime":1629298000219,"results":"84","hashOfConfig":"54"},{"size":2836,"mtime":1629151781564,"results":"85","hashOfConfig":"54"},{"size":1244,"mtime":1629151781596,"results":"86","hashOfConfig":"54"},{"size":4318,"mtime":1629151781587,"results":"87","hashOfConfig":"54"},{"size":884,"mtime":1629151781580,"results":"88","hashOfConfig":"54"},{"size":996,"mtime":1629151781563,"results":"89","hashOfConfig":"54"},{"size":1723,"mtime":1629151781592,"results":"90","hashOfConfig":"54"},{"size":1665,"mtime":1629151781591,"results":"91","hashOfConfig":"54"},{"size":318,"mtime":1629151781609,"results":"92","hashOfConfig":"54"},{"size":3693,"mtime":1629151781578,"results":"93","hashOfConfig":"54"},{"size":540,"mtime":1629151781561,"results":"94","hashOfConfig":"54"},{"size":3434,"mtime":1629151781573,"results":"95","hashOfConfig":"54"},{"size":537,"mtime":1629151781560,"results":"96","hashOfConfig":"54"},{"size":1718,"mtime":1629151781576,"results":"97","hashOfConfig":"54"},{"size":3383,"mtime":1629151781577,"results":"98","hashOfConfig":"54"},{"size":7467,"mtime":1629151781563,"results":"99","hashOfConfig":"54"},{"size":4213,"mtime":1629151781590,"results":"100","hashOfConfig":"54"},{"size":2593,"mtime":1629151781575,"results":"101","hashOfConfig":"54"},{"size":1472,"mtime":1629151781579,"results":"102","hashOfConfig":"54"},{"size":5631,"mtime":1629151781583,"results":"103","hashOfConfig":"54"},{"size":3168,"mtime":1629151781572,"results":"104","hashOfConfig":"54"},{"size":4849,"mtime":1629151781583,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},"1c1etbz",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"109"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"109"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"109"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"109"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"130","usedDeprecatedRules":"109"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"109"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"109"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"146","usedDeprecatedRules":"109"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"149","usedDeprecatedRules":"109"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"109"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"109"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"109"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"109"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"109"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"109"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"109"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"109"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"109"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"109"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"109"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"109"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"109"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"109"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"109"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"109"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"109"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"109"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"109"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"109"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"109"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"109"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"109"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"109"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"109"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"109"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"109"},"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\index.js",["250","251"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["252","253"],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\reportWebVitals.js",[],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\App.js",["254","255"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport HomePage from \"./Components/HomePage\"\r\nimport Drugs from \"./Components/Drugs\"\r\nimport Pharmacies from \"./Components/Pharmacies\"\r\nimport RegisterPage from \"./Components/RegistrationPage\"\r\nimport LoginPage from \"./Components/LoginPage\"\r\nimport UserProfilePage from \"./Pages/UserProfile\"\r\nimport registerStaff from \"./Components/adminRegistration/registerStaff\"\r\nimport RegisterDrug from './Components/adminRegistration/RegisterDrug';\r\n\r\n\r\n\r\nimport LoyalityProgram from \"./Components/LoyalityProgram/LoyalityProgram\"\r\nimport RegisterPharmacies from './Components/adminRegistration/RegisterPharmacies';\r\nimport OrdersPage from './Components/SupplierPages/OrdersPage';\r\n\r\nimport HomePageForDermatologistAppointments from \"./Pages/HomePageForDermatologistAppointments\"\r\nimport DermatologistFreeAppointment from \"./Pages/DermatologistFreeAppointment\"\r\nimport FutureDermatologistAppointmentsForPatient from \"./Pages/FutureDermatologistAppointmentsForPatient\"\r\nimport HistoryDermatologistAppointmentsForPatient from \"./Pages/HistoryDermatologistAppointmentsForPatient\"\r\nimport PharmaciesAppointmentStartPage from \"./Pages/PharmaciesAppointmentStartPage\"\r\nimport FuturePharmaciesConsultationsForPatient from \"./Pages/FuturePharmaciesConsultationsForPatient\"\r\nimport OfferPage from './Components/SupplierPages/OfferPage';\r\nimport PatientsSubscribedPharmacies from './Components/Pharmacies/PatientsSubscribedPharmacies'\r\nimport AdminStaffComplains from './Components/AdminStaffComplains';\r\nimport AdminPharmacyComplains from './Components/AdminPharmacyComplains';\r\nimport QrCode from './Components/QrCode';\r\nimport FutureDrugsReservationsForPatients from \"./Pages/FutureDrugsReservationsForPatient\"\r\nimport qrPharmacieswithDrugs from './Components/qrPharmacieswithDrugs';\r\nimport PatientsEReceipts from \"./Pages/PatientsEReceipts\"\r\nimport PatientsProccessedDrugsEReceipts from \"./Pages/PatientsProccessedDrugsEReceipts\"\r\nimport activateAccount from './Components/activateAccount';\r\n\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    \r\n    \r\n    <Router>\r\n      \r\n        <Switch>\r\n        <Route exact to =\"/\"  path =\"/\" component={HomePage}/>\r\n        <Route  to =\"/drugs\" path =\"/drugs\"  component={Drugs}/>\r\n        <Route  to =\"/pharmacies\" path =\"/pharmacies\"  component={Pharmacies}/>       \r\n        <Route  to =\"/registration\" path =\"/registration\"  component={RegisterPage}/>\r\n        <Route  to =\"/login\" path =\"/login\"  component={LoginPage}/>\r\n        <Route  to =\"/userProfile\" path =\"/userProfile\"  component={UserProfilePage}/>\r\n        \r\n        <Route  to =\"/registerStaff\" path =\"/registerStaff\"  component={registerStaff}/>\r\n        <Route  to =\"/registerPharmacies\" path =\"/registerPharmacies\"  component={RegisterPharmacies}/>\r\n        <Route  to =\"/dermatologistAppointment\" path =\"/dermatologistAppointment\"  component={HomePageForDermatologistAppointments}/>\r\n        <Route path=\"/dermatologistFreeAppointment/:id\" children={<DermatologistFreeAppointment />} />\r\n        <Route  to =\"/futureDermatologistAppointmentsForPatient\" path =\"/futureDermatologistAppointmentsForPatient\"  component={FutureDermatologistAppointmentsForPatient}/>\r\n        <Route  to =\"/historyDermatologistAppointmentsForPatient\" path =\"/historyDermatologistAppointmentsForPatient\"  component={HistoryDermatologistAppointmentsForPatient}/>\r\n        <Route  to =\"/registerDrug\" path =\"/registerDrug\"  component={RegisterDrug}/>\r\n        \r\n        \r\n\r\n        <Route  to =\"/pharmacistAppointment\" path =\"/pharmacistAppointment\"  component={PharmaciesAppointmentStartPage}/>\r\n        <Route  to =\"/loyalityProgram\" path =\"/loyalityProgram\"  component={LoyalityProgram}/>\r\n        <Route  to =\"/orders\" path =\"/orders\"  component={OrdersPage}/>\r\n        <Route  to =\"/futurePharmaciesConsultationsForPatient\" path =\"/futurePharmaciesConsultationsForPatient\"  component={FuturePharmaciesConsultationsForPatient}/>\r\n        <Route  to =\"/offers\" path =\"/offers\"  component={OfferPage}/>\r\n        <Route  to =\"/patientsSubscribedPharmacies\" path =\"/patientsSubscribedPharmacies\"  component={PatientsSubscribedPharmacies}/>\r\n        <Route  to =\"/staffComplains\" path =\"/staffComplains\"  component={AdminStaffComplains}/>\r\n        <Route  to =\"/pharmacyComplains\" path =\"/pharmacyComplains\"  component={AdminPharmacyComplains}/>\r\n        <Route  to =\"/qrCode\" path =\"/qrCode\"  component={QrCode}/>\r\n        <Route  to =\"/futureDrugsReservationForPatient\" path =\"/futureDrugsReservationForPatient\"  component={FutureDrugsReservationsForPatients}/>     \r\n        <Route to=\"/qrPharmacieswithDrugs/:id\" path =\"/qrPharmacieswithDrugs/:id\"  component={qrPharmacieswithDrugs}/>\r\n        <Route  to =\"/allPatients-E-receipts\" path =\"/allPatients-E-receipts\"  component={PatientsEReceipts}/>\r\n        <Route  to =\"/allPatients-processed-drugs-e-receipts\" path =\"/allPatients-processed-drugs-e-receipts\"  component={PatientsProccessedDrugsEReceipts}/>\r\n\r\n        <Route to=\"/activeAccount/:id\" path =\"/activeAccount/:id\"  component={activateAccount}/>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Switch>\r\n    </Router>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Drugs.js",["256","257","258","259"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from './Header';\r\nimport MedicamentPicture from \"../Images/medicament.jpg\" ;\r\nimport DrugSpecificationModal from \"./DrugSpecification\";\r\nimport GetAuthorisation from \"../../src/Funciton/GetAuthorisation\"\r\nimport PharmaciesWithDrugAndPrice from '../Components/Pharmacies/PharmaciesWithDrugAndPrice';\r\nimport ReservationDrugModal from \"./Modal/ReservationDrugsModal\";\r\nimport FirstGradeModal from \"../Components/Modal/FirstGradeModal\";\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass Drugs extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n      drugs: [],\r\n      specificationModalShow: false,\r\n      ingredients: [],\r\n      replacingDrugs: [],\r\n      drugGrades: [],\r\n      newGrades: [],\r\n      drugAmount: \"\",\r\n      drugQuantity: \"\",\r\n      drugManufacturer: \"\",\r\n      drugName: \"\",\r\n      onReciept: false,\r\n      drugKind: \"\",\r\n      drugFormat: \"\",\r\n      sideEffects: \"\",\r\n      points: \"\",\r\n      formShowed: false,\r\n      searchName: \"\",\r\n      searchGradeFrom: \"\",\r\n      searchGradeTo: \"\",\r\n      drugKinds: [],\r\n      showFeedbackModal: false,\r\n      showModifyFeedbackModal: false,\r\n      selectedDrugId: \"\",\r\n      drugNameModal: \"\",\r\n      grade: 1,\r\n      hiddenFailAlert: true,\r\n      failHeader: \"\",\r\n      failMessage: \"\",\r\n      hiddenSuccessAlert: true,\r\n      successHeader: \"\",\r\n      successMessage: \"\",\r\n      loggedPatient: false,\r\n      unauthorizedRedirect: false,\r\n\t  pharmacies: [],\r\n\t  showPharmaciesPage : false,\r\n\t\t\r\n\t  showReservationDialog : false,\r\n\t  pharmacyId : \"\",\r\n\t  maxCount : \"\",\r\n\t  price : 0 ,\r\n\t  drugId : \"\",\t\r\n\t  hiddenErrorAlert: true,\r\n\t  errorHeader : \"\",\r\n\t  errorMessage : \"\",\r\n\r\n\t  hiddenSuccessfulAlert : true,\r\n\t  SuccessfulHeader : \"\",\r\n\t  SuccessfulMessage : \"\",\r\n\t  hiddenUnsuccessfulAlert: true,\r\n      UnsuccessfulHeader: \"\",\r\n      UnsuccessfulMessage: \"\",\t\r\n\r\n\t  selectedDrug : [],\r\n\t\tdrugIdForGrade : \"\",\r\n\t\tdrugGrade : 0,\r\n\t\tdrugName : \"\",\r\n\t\tshowGradeModal: false,\r\n\t\tshowFirstGrade : false,\r\n\t\tshowModifyGrade : false,\r\n\t\tmaxGrade : 5\r\n\t  \r\n\r\n\r\n  };\r\n\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n\t\t\r\n\r\n\t\tthis.state.loggedPatient= this.hasRole(\"ROLE_PATIENT\");\r\n\r\n\r\n\r\n\t\tAxios.get(\"http://localhost:8080/drug/getDrugsWithGrade\")\r\n\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ drugs: res.data });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\t\tAxios.get(\"http://localhost:8080/drug/drugkind\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tdrugKinds: res.data,\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n         \r\n\t}\r\n\r\n\r\n\r\n\thasRole = (requestRole) => {\r\n\t\tlet currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\t\r\n\t\tif (currentRoles === null) return false;\r\n\t\r\n\t\r\n\t\tfor (let currentRole of currentRoles) {\r\n\t\t  if (currentRole === requestRole) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t  };\r\n\r\n  handleDrugKindChange = (event) => {\r\n\t\tthis.setState({ drugKind: event.target.value });\r\n\t};\r\n\r\n\thangleFormToogle = () => {\r\n\t\tthis.setState({ formShowed: !this.state.formShowed });\r\n\t};\r\n\r\n\thandleNameChange = (event) => {\r\n\t\tthis.setState({ searchName: event.target.value });\r\n\t};\r\n\r\n\thandleGradeFromChange = (event) => {\r\n\t\tthis.setState({ searchGradeFrom: event.target.value });\r\n\t};\r\n\r\n\thandleGradeToChange = (event) => {\r\n\t\tthis.setState({ searchGradeTo: event.target.value });\r\n\t};\r\n\r\n  handleResetSearch = () => {\r\n\t\tAxios.get(\"http://localhost:8080/drug/getDrugsWithGrade\")\r\n\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tdrugs: res.data,\r\n\t\t\t\t\tformShowed: false,\r\n\t\t\t\t\tshowingSearched: false,\r\n\t\t\t\t\tsearchName: \"\",\r\n\t\t\t\t\tsearchGradeFrom: \"\",\r\n\t\t\t\t\tsearchGradeTo: \"\",\r\n\t\t\t\t\tdrugKind: \"\",\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\t\tAxios.get(\"http://localhost:8080/drug/drugkind\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tdrugKinds: res.data,\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n  handleSearchClick = () => {\r\n\t\t{\r\n\t\t\tlet gradeFrom = this.state.searchGradeFrom;\r\n\t\t\tlet gradeTo = this.state.searchGradeTo;\r\n\t\t\tlet name = this.state.searchName;\r\n\t\t\tlet drugKind = this.state.drugKind;\r\n\r\n\t\t\tif (gradeFrom === \"\") gradeFrom = -1;\r\n\t\t\tif (gradeTo === \"\") gradeTo = -1;\r\n\t\t\tif (name === \"\") name = \"\";\r\n\t\t\tif (drugKind === \"\") drugKind = \"\";\r\n\r\n\t\t\tAxios.get(\"http://localhost:8080/drug/searchDrugs\", {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tgradeFrom: gradeFrom,\r\n\t\t\t\t\tgradeTo: gradeTo,\r\n\t\t\t\t\tdrugKind: drugKind,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tdrugs: res.data,\r\n\t\t\t\t\t\tformShowed: false,\r\n\t\t\t\t\t\tshowingSearched: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\r\n \r\n\r\n  handleModalClose = () => {\r\n\t\tthis.setState({ specificationModalShow: false });\r\n\t};\r\n\r\n  handleCloseAlertFail = () => {\r\n\t\tthis.setState({ hiddenFailAlert: true });\r\n\t};\r\n\r\n\thandleCloseAlertSuccess = () => {\r\n\t\tthis.setState({ hiddenSuccessAlert: true });\r\n\t};\r\n\r\n\thandleClickIcon = (grade) => {\r\n\t\tthis.setState({ grade });\r\n\t};\r\n\r\n\thandleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\t\r\n\r\n\thandleDrugClick = (drug) => {\r\n\t\tconsole.log(drug);\r\n\t\tthis.setState({\r\n\t\t\tdrugAmount: drug.EntityDTO.recommendedAmount,\r\n\t\t\tdrugQuantity: drug.EntityDTO.quantity,\r\n\t\t\tdrugManufacturer: drug.EntityDTO.manufacturer.EntityDTO.name,\r\n\t\t\tdrugName: drug.EntityDTO.name,\r\n\t\t\tdrugKind: drug.EntityDTO.drugKind,\r\n\t\t\tdrugFormat: drug.EntityDTO.drugFormat,\r\n\t\t\tsideEffects: drug.EntityDTO.sideEffects,\r\n\t\t\tonReciept: drug.EntityDTO.onReciept,\r\n\t\t\tpoints: drug.EntityDTO.loyalityPoints,\r\n\t\t\tingredients: drug.EntityDTO.ingredients,\r\n\t\t\treplacingDrugs: drug.EntityDTO.replacingDrugs,\r\n\t\t\tspecificationModalShow: true,\r\n\t\t});\r\n\t};\r\n\t\r\n\r\n\thandleOnDrugSelect = (selectedDrugId) => {\r\n\t\t\r\n\t\tif (this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\t\r\n\t\tconsole.log(\"idemoo\")\r\n\t\t\r\n\t\tthis.setState({ drugId: selectedDrugId });\r\n\r\n\r\n\t\tAxios.get(API_URL + \"/pharmacy/findPharmaciesByDrugIdWithDrugPrice/\" + selectedDrugId,{\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\t\r\n                if (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n                }else{\r\n                    this.setState({ pharmacies: res.data,\r\n\t\t\t\t\t\t\t\t\tshowPharmaciesPage : true});\r\n                }\r\n\r\n\t\t\t\tthis.refreshPharmacies();\r\n\r\n\t\t\t\tconsole.log(this.state.pharmacies);\r\n                \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n\t}\r\n\r\n\t};\r\n\r\n\r\n\tbackToDrugsPage = () => {\r\n\t\tthis.setState({ showPharmaciesPage : false,\r\n\t\t\t\t\t\tpharmacies : [] });\r\n\t};\r\n\r\n\r\n\r\n\topenReservationDialog = (pharmacy) => {\r\n\t\t\r\n\t\tthis.setState({ showReservationDialog : true,\r\n\t\t\t\t\t\tpharmacyId : pharmacy.Id,\r\n\t\t\t\t\t\tmaxCount : pharmacy.availableDrugCount,\r\n\t\t\t\t\t\tprice : pharmacy.drugPrice});\r\n\r\n\r\n\t\t\tconsole.log(pharmacy.Id + \"id \" +pharmacy.availableDrugCount+ \"kolicina \" + pharmacy.drugPrice + \"cena \" );\r\n\r\n\t};\r\n\t\r\n\tcloseReservationDrugModal = () => {\r\n\t\tthis.setState({ showReservationDialog : false,\r\n\t\t\thiddenErrorAlert : true,\r\n\t\t\terrorHeader\t: \"\",\r\n\t\t\terrorMessage : \"\" });\r\n\t};\r\n\t\r\n\thandleCloseErrorAlert = () => {\r\n\t\tthis.setState({hiddenErrorAlert : true,\r\n\t\t\terrorHeader\t: \"\",\r\n\t\t\terrorMessage : \"\"\t\t\t\r\n\t\t\t\t\t\t});\r\n\t};\r\n\t\r\n\r\n\treserveDrugs = (drugCount, endDate, forwardedPrice) => {\r\n\t\tthis.setState({hiddenErrorAlert : true,\r\n\t\t\terrorHeader\t: \"\",\r\n\t\t\terrorMessage : \"\"\t\t\t\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\r\n\t\tlet DrugReservationDTO = {\r\n\t\t\tdrugId: this.state.drugId,\r\n\t\t\tpharmacyId: this.state.pharmacyId,\r\n\t\t\tdrugsCount: drugCount,\r\n\t\t\tpriceForOneDrug: forwardedPrice,\r\n\t\t\tendDate: endDate,\r\n\t\t};\r\n\r\n\t\t\r\n\r\n\t\tconsole.log(DrugReservationDTO)\r\n\r\n\t\tAxios.post(API_URL + \"/drug/reserveDrug\", DrugReservationDTO, \r\n\t\t{ validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\tthis.setState({ hiddenErrorAlert: false, errorHeader: \"Bad request\", errorMessage: res.data });\r\n\t\t\t\t}else if (res.status === 401) {\r\n\t\t\t\t\t\tthis.props.history.push('/login');\t\r\n\t\t\t\t} else if (res.status === 500) {\r\n\t\t\t\t\tthis.setState({ hiddenErrorAlert: false, errorHeader: \"Internal server error\", errorMessage: \"Server error.\" });\r\n\t\t\t\t} else if (res.status === 201) {\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\tthis.setState({ showReservationDialog: false,\r\n\t\t\t\t\t\thiddenSuccessfulAlert : false,\r\n\t\t\t\t\t\tSuccessfulHeader : \"Successful reservation \",\r\n\t\t\t\t\t\tSuccessfulMessage : \"You reserved drugs \" });\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t\tthis.handleOnDrugSelect(this.state.drugId)\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tthis.setState({ hiddenErrorAlert: false, errorHeader: \"Internal server error\", errorMessage: \"Some error\" });\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\t\t\t\r\n\t};\r\n\r\n\t\r\n\t\trefreshPharmacies () {\r\n\r\n\t\t\tlet newPharmaciesList= [];\r\n\t\t\tfor (let pharmacy of this.state.pharmacies) {\r\n\t\t\t  if (pharmacy.availableDrugCount !== 0) \r\n\t\t\t  \t\tnewPharmaciesList.push(pharmacy)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tpharmacies : newPharmaciesList,\r\n\t\t\t});\r\n\t\t\r\n\t\t  }\r\n\t\r\n\r\n\r\n\r\n\r\n\t\thandleGetGradeClick = (drug) => {\r\n\t\t\tconsole.log(drug);\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\t\tAxios.get(API_URL + \"/grade/drug/\" + drug.Id , {\r\n\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\tthis.props.history.push('/login');\r\n\t\t\t\t\t} else if(res.status === 404){\r\n\t\r\n\t\r\n\t\t\t\t\t\tconsole.log(\"Nema ocenu\");\r\n\t\r\n\t\t\t\t\t\tlet entityDTO = {\r\n\t\t\t\t\t\t\tshowGradeModal : true,\r\n\t\t\t\t\t\t\t\tshowFirstGrade : true,\t\r\n\t\t\t\t\t\t\t\tdrugId : drug.Id,\r\n\t\t\t\t\t\t\t\tdrugGrade : drug.EntityDTO.avgGrade,\r\n\t\t\t\t\t\t\t\tdrugName : drug.EntityDTO.name,\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\r\n\t\t\t\t\t\tthis.setState({ showGradeModal : true,\r\n\t\t\t\t\t\t\t\tshowFirstGrade : true,\t\r\n\t\t\t\t\t\t\t\tdrugIdForGrade : drug.Id,\r\n\t\t\t\t\t\t\tdrugGrade : drug.EntityDTO.avgGrade,\r\n\t\t\t\t\t\t\tdrugName : drug.EntityDTO.name\r\n\t\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t\t\tconsole.log(drug.Id);\r\n\t\t\t\t\t\t\tconsole.log(entityDTO);\r\n\t\r\n\t\t\t\t\t}else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\t\t\tthis.setState({ showGradeModal : true,\r\n\t\t\t\t\t\t\tshowModifyGrade : true,\t\r\n\t\t\t\t\t\t\tdrugIdForGrade : drug.Id,\r\n\t\t\t\t\t\t\tdrugGrade : res.data.grade,\r\n\t\t\t\t\t\t\tdrugName : drug.EntityDTO.name\r\n\t\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t\t\tconsole.log(res.data.grade);\r\n\t\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\t\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\tsetFirstGrade = (grade) => {\r\n\t\t\t\r\n\t\t\tconsole.log(\"sou\")\r\n\t\t\tconsole.log(this.state.drugIdForGrade )\r\n\t\r\n\t\t\tlet entityDTO = {\r\n\t\t\t\tdrugId: this.state.drugIdForGrade ,\r\n\t\t\t\tgrade: grade\r\n\t\t\t};\r\n\t\r\n\t\t\tconsole.log(entityDTO);\r\n\t\r\n\t\t\tAxios.post(API_URL + \"/grade/drug/createGrade\",entityDTO , {\r\n\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\tthis.props.history.push('/login');\r\n\t\t\t\t\t} else if(res.status === 404){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Bad request\", UnsuccessfulMessage : res.data,\r\n\t\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t\tshowModifyGrade : false});\r\n\t\r\n\t\t\t\t\t}else if(res.status === 500){\r\n\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Error\", UnsuccessfulMessage : \"internal server error! \",\r\n\t\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t\t showModifyGrade : false  });\r\n\t\r\n\t\t\t\t\t}else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState({ hiddenSuccessfulAlert:  false, successfulHeader:   \"Successful\", successfulMessage:  \"You successful created grade for drug! \",\r\n\t\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t\t showModifyGrade : false   });\r\n\t\r\n\t\t\t\t\t\tthis.componentDidMount();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\t};\r\n\t\r\n\t\tsetModifyGrade = (grade) => {\r\n\t\t\t\r\n\t\t\tconsole.log(\"sou\")\r\n\t\r\n\t\t\tlet entityDTO = {\r\n\t\t\t\tdrugId: this.state.drugIdForGrade ,\r\n\t\t\t\tgrade: grade,\r\n\t\t\t};\r\n\t\r\n\t\t\tconsole.log(entityDTO);\r\n\t\r\n\t\r\n\t\t\tAxios.post(API_URL + \"/grade/drug/updateGrade\",entityDTO , {\r\n\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\tthis.props.history.push('/login');\r\n\t\t\t\t\t} else if(res.status === 404){\r\n\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Bad request\", UnsuccessfulMessage : res.data,\r\n\t\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t\tshowModifyGrade : false});\r\n\t\r\n\t\t\t\t\t}else if(res.status === 500){\r\n\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Error\", UnsuccessfulMessage : \"internal server error! \",\r\n\t\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t\t showModifyGrade : false  });\r\n\t\r\n\t\t\t\t\t}else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState({ hiddenSuccessfulAlert:  false, successfulHeader:   \"Successful\", successfulMessage:  \"You successful update grade for drug! \",\r\n\t\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t\t showModifyGrade : false   });\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t this.componentDidMount();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\t\r\n\t\r\n\t\r\n\t\t};\r\n\t\t\r\n\t\tcloseFirstGradeModal = () => {\r\n\t\r\n\t\t\tthis.setState({ showFirstGrade : false,\r\n\t\t\t\tshowModifyGrade : false,\r\n\t\t\t\tshowGradeModal : false});\r\n\t\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n      <div id=\"allDrugs\" hidden={this.state.showPharmaciesPage}>\r\n\r\n\t\t\t<div className=\"container\" style={{ marginTop: \"1em\" }} >\r\n\t\t\t<SuccessfulAlert\r\n\t\t\t\t\t\thidden={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\t\t\theader={this.state.successfulHeader}\r\n\t\t\t\t\t\tmessage={this.state.successfulMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n\t\t\t\t/>\r\n\t\t\t\t<UnsuccessfulAlert\r\n\t\t\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n           \r\n           \r\n            <div style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }} width=\"100%\">\r\n\r\n            <h5 className=\" text-center mb-0 mt-2 text-uppercase\">Drugs</h5>\r\n\t\t\t\t\t<button className=\"btn btn-outline-primary btn-xl\" type=\"button\" onClick={this.hangleFormToogle}>\r\n\t\t\t\t\t\t<i className=\"icofont-rounded-down mr-1\"></i>\r\n\t\t\t\t\t\tSearch drugs\r\n\t\t\t\t\t</button>\r\n\r\n            <form className={this.state.formShowed ? \"form-inline mt-3\" : \"form-inline mt-3 collapse\"} width=\"100%\" id=\"formCollapse\">\r\n\t\t\t\t\t\t<div className=\"form-group mb-2\" width=\"100%\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control mr-3\"\r\n\t\t\t\t\t\t\t\tstyle={{ width: \"9em\" }}\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchName}\r\n\t\t\t\t\t\t\t/>\r\n              <select\r\n\t\t\t\t\t\t\t\tplaceholder=\"Drug kind\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleDrugKindChange}\r\n\t\t\t\t\t\t\t\tstyle={{ width: \"9em\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"form-control mr-3\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=\"\" selected disabled>\r\n\t\t\t\t\t\t\t\t\tDrug Kind\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t{this.state.drugKinds.map((kind) => (\r\n\t\t\t\t\t\t\t\t\t<option value={kind.EntityDTO.type}>{kind.EntityDTO.type}</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Grade from\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control mr-3\"\r\n\t\t\t\t\t\t\t\tstyle={{ width: \"9em\" }}\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\t\tmax=\"5\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleGradeFromChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchGradeFrom}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Grade to\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control mr-3\"\r\n\t\t\t\t\t\t\t\tstyle={{ width: \"9em\" }}\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\t\tmax=\"5\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleGradeToChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchGradeTo}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tstyle={{ background: \"#1977cc\" }}\r\n\t\t\t\t\t\t\t\tonClick={this.handleSearchClick}\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-x2\"\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className=\"icofont-search mr-1\"></i>\r\n\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\r\n          <div className={this.state.showingSearched ? \"form-group mt-2\" : \"form-group mt-2 collapse\"}>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-secondary\" onClick={this.handleResetSearch}>\r\n\t\t\t\t\t\t\t<i className=\"icofont-close-line mr-1\"></i>Reset\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\r\n\r\n\t\t\r\n\t\t\t<div hidden={!this.hasRole(\"ROLE_PATIENT\")} style={{  marginTop: \"3em\" }} >\r\n\t\t\t\t<b><g1 >Click on drug to reserve it!</g1></b>\r\n\t\t\t</div>\r\n\t\t\t\r\n\r\n\r\n          <table className={this.state.loggedPatient === true ? \"table table-hover\" : \"table\"} style={{ width: \"100%\", marginTop: \"3rem\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.drugs.map((drug) => (\r\n\t\t\t\t\t\t\t\t<tr id={drug.Id} key={drug.Id} style={this.state.loggedPatient === true ? { cursor: \"pointer\" } : {}}>\r\n\t\t\t\t\t\t\t\t\t<td width=\"130em\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={MedicamentPicture} width=\"70em\" />\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td  onClick={() => this.handleOnDrugSelect(drug.Id)}>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Name:</b> {drug.EntityDTO.drugInstanceName}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Kind:</b> {drug.EntityDTO.drugKind}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Grade:</b> {drug.EntityDTO.avgGrade}\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"align-middle\">\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginLeft: \"55%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleDrugClick(drug)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-secondary btn-block\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSpecification\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginLeft: \"55%\",marginTop: \"1em\"  }}>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleGetGradeClick(drug)}\r\n\t\t\t\t\t\t\t\t\t\t\thidden={!this.hasRole(\"ROLE_PATIENT\")}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tDrug grade\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n             \r\n\r\n\t\t\t\t\t\r\n\r\n          \r\n          </div>\r\n\r\n\r\n\r\n\r\n        \r\n        </div>\r\n        <DrugSpecificationModal\r\n\t\t\t\t\t\tonCloseModal={this.handleModalClose}\r\n\t\t\t\t\t\tdrugAmount={this.state.drugAmount}\r\n\t\t\t\t\t\theader=\"Drug specification\"\r\n\t\t\t\t\t\tshow={this.state.specificationModalShow}\r\n\t\t\t\t\t\tdrugQuantity={this.state.drugQuantity}\r\n\t\t\t\t\t\tdrugKind={this.state.drugKind}\r\n\t\t\t\t\t\tdrugFormat={this.state.drugFormat}\r\n\t\t\t\t\t\tdrugManufacturer={this.state.drugManufacturer}\r\n\t\t\t\t\t\tdrugName={this.state.drugName}\r\n\t\t\t\t\t\tonReciept={this.state.onReciept}\r\n\t\t\t\t\t\tsideEffects={this.state.sideEffects}\r\n\t\t\t\t\t\tpoints={this.state.points}\r\n\t\t\t\t\t\tingredients={this.state.ingredients}\r\n\t\t\t\t\t\treplacingDrugs={this.state.replacingDrugs}\r\n\t\t\t\t\t/>\r\n       \r\n\t   \r\n\t   \t<PharmaciesWithDrugAndPrice\r\n\r\n\r\n\t\t\t\t\tpharmacies= {this.state.pharmacies}\r\n\t\t\t\t\tshow={this.state.showPharmaciesPage}\t\t\t\r\n\t\t\t\t\tback={this.backToDrugsPage}\t\r\n\t\t\t\t\topenReservationDialog={this.openReservationDialog}\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\thiddenSuccessfulAlert={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\t\tSuccessfulHeader={this.state.SuccessfulHeader}\r\n\t\t\t\t\tSuccessfulMessage={this.state.SuccessfulMessage}\r\n\t\t\t\t\thandleCloseSuccessfulAlert={this.handleCloseSuccessfulAlert}\t\t\t\r\n\r\n\t\t   />\r\n\r\n\t\t\t<ReservationDrugModal\r\n\r\n\r\n\t\t\t\r\n\t\t\tshow={this.state.showReservationDialog}\t\t\t\r\n\t\t\tmaxCount={this.state.maxCount}\r\n\t\t\tdrugPrice={this.state.price}\t\t\r\n\t\t\tcloseModal={this.closeReservationDrugModal}\t\t\t\t\t\r\n\t\t\treserveDrugs= {this.reserveDrugs}\t\t\t\t\t\r\n\t\t\thiddenErrorAlert={this.state.hiddenErrorAlert}\t\t\t\t\t\t\r\n\t\t\terrorHeader={this.state.errorHeader}\t\r\n\t\t\terrorMessage={this.state.errorMessage}\t\r\n\t\t\thandleCloseErrorAlert={this.handleCloseErrorAlert}\t\t\t\t\t\t\r\n\r\n\t\t\t/>\t\t\t\t\t\r\n\r\n\r\n\t\t<FirstGradeModal \r\n\r\n\t\t\t\tshow={this.state.showGradeModal}\r\n\t\t\t\tshowFirstGrade={this.state.showFirstGrade}\r\n\t\t\t\tshowModifyGrade={this.state.showModifyGrade}\r\n\t\t\t\temployeeGrade={this.state.drugGrade}\t\t\t\t\t\t\t\r\n\t\t\t\tmaxGrade={this.state.maxGrade}\r\n\t\t\t\temployeeName={this.state.drugName }\r\n\t\t\t\temployeeSurname={\"\"}\r\n\t\t\t\theader={\"Grade\"}\r\n\t\t\t\tbuttonFirstGradeName={\"Grade\"}\r\n\t\t\t\tbuttonModifyGradeName={\" Update grade\"}\t\t\t\t\t\t\t\t\r\n\t\t\t\tsetFirstGrade={this.setFirstGrade}\t\r\n\t\t\t\tsetModifyGrade={this.setModifyGrade}\r\n\t\t\t\tonCloseModal={this.closeFirstGradeModal}\t\t\t\t\t\t\r\n\r\n\t\t/>\t\t\t\t\t\t\t\t\t\r\n   \r\n\t   \r\n\t    </React.Fragment>\r\n        \r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Drugs;\r\n","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\HomePage.js",["260","261"],"import React from 'react';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport Header from './Header';\r\nimport TopBar from './TopBar';\r\nimport { Link } from \"react-router-dom\";\r\nimport GetAuthorisation from \"../../src/Funciton/GetAuthorisation\"\r\nimport Axios from \"axios\";\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\n\r\nclass HomePage extends React.Component {\r\n\r\n\r\n\r\n  componentDidMount(){\r\n\r\n        //if(this.hasSpecificRole(\"ROLE_PATIENT\")){\r\n         // this.checkPatientPenalty();\r\n          //this.checkPatientsDrugsReservations()\r\n      //  }\r\n\r\n\r\n  }\r\n\r\n\r\n    checkPatientPenalty(){\r\n\r\n      Axios.get(API_URL + \"/users/refreshPatientPenalty\", {\r\n        validateStatus: () => true,\r\n        headers: { Authorization: GetAuthorisation() },\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 401) {\r\n            this.props.history.push('/login');\r\n          }\r\n           \r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    checkPatientsDrugsReservations(){\r\n\r\n      Axios.get(API_URL + \"/drug/refreshPatientDrugsReservations\", {\r\n        validateStatus: () => true,\r\n        headers: { Authorization: GetAuthorisation() },\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 401) {\r\n            this.props.history.push('/login');\r\n          }\r\n           \r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n      hasSpecificRole = (reqRole) => {\r\n      let roles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n      if (roles === null) return false;\r\n\r\n      for (let role of roles) {\r\n        if (role === reqRole) return true;\r\n      }\r\n      return false;\r\n      };\r\n\r\n      hasAnyRole = (reqRole) => {\r\n        let roles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n  \r\n        if (roles === null) return false;\r\n\r\n        return true;\r\n        };\r\n\r\n    \r\n\r\n\r\n\r\n    \r\n    render() {\r\n      console.log(`Bearer ${localStorage.getItem(\"keyToken\")}`);\r\n    return (\r\n      \r\n      <React.Fragment>\r\n     \r\n          <Header/>\r\n          <div >\r\n\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          <section id=\"homePageSection\" className=\"d-flex \">\r\n\t\t\t\t\t<div className=\"container\" style={{textAlign: \"center\"}}>\r\n\t\t\t\t\t\t<h1>Welcome to Health Clinic </h1>\r\n\r\n            <Link  to=\"/login\" hidden={this.hasAnyRole()} className=\"btn-Login-Register\">\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<Link  to=\"/registration\" hidden={this.hasAnyRole()} className=\"btn-Login-Register\">\r\n\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t</Link>\r\n      \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t  </section>\r\n\r\n             \r\n        \r\n          </div>\r\n          \r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n  \r\n  export default HomePage;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\LoginPage.js",[],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\RegistrationPage.js",[],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\AdminStaffComplains.js",["262"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from './Header';\r\nimport ReportImage from \"../Images/report.png\" ;\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport CreateComplaintModal from \"../Components/CreateComplaintModal\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass AdminStaffComplains extends Component {\r\n\r\n\r\n\r\n  state = {\r\n    complaints : [],\r\n    date : new Date(),\r\n    text : \"\",\r\n    staffName : \"\",\r\n    staffSurname : \"\",\r\n    profession : \"\",\r\n    reply : \"\",\r\n    email : \"\",\r\n    complaintId : \"\",\r\n    showComplaintModal : false,\r\n  \r\n\r\n\r\n};\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    Axios.get(\"http://localhost:8080/complaint/getStaffComplaints\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n          this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ complaints: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  handleReplyClick = (complaint) => {\r\n\t\tconsole.log(complaint);\r\n\t\tthis.setState({\r\n\t\t\tdate : complaint.EntityDTO.date,\r\n      text : complaint.EntityDTO.text,\r\n      staffName : complaint.EntityDTO.staffName,\r\n      staffSurname : complaint.EntityDTO.staffSurname,\r\n      profession : complaint.EntityDTO.profession,\r\n      reply : complaint.EntityDTO.reply,\r\n      email : complaint.EntityDTO.email,\r\n      complaintId : complaint.Id,\r\n\t\t\tshowComplaintModal: true,\r\n\t\t});\r\n\t};\r\n\r\n  handleComplaintChange = (event) => {\r\n\t\tthis.setState({ reply: event.target.value });\r\n\t};\r\n  handleComplaintModalClose = () => {\r\n\t\tthis.setState({ showComplaintModal: false });\r\n\t};\r\n\r\n  handleReplyComaplaint = () => {\r\n\t\tlet ComplaintStaffDTO = {\r\n\t\t\treply : this.state.reply,\r\n      complaintId : this.state.complaintId\r\n\t\t};\r\n\r\n\t\tAxios.post(\"http://localhost:8080/complaint/replyToStaffComplaint\", ComplaintStaffDTO, { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t.then((resp) => {\r\n\t\t\t\tif (resp.status === 500) {\r\n\t\t\t\t\tthis.setState({ hiddenFailAlert: false, failHeader: \"Internal server error\", failMessage: \"Server error.\" });\r\n\t\t\t\t} else if (resp.status === 201) {\r\n\t\t\t\t\t\r\n\r\n          Axios.get(\"http://localhost:8080/complaint/getStaffComplaints\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n          this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ complaints: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({ showComplaintModal: false });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n\r\n\r\n    render() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n\r\n      <h5 className=\" text-center  mb-0 text-uppercase\" style={{ marginTop: \"2rem\" }}>\r\n\t\t\t\t\t\tStaff complaints\r\n\t\t\t\t</h5>\r\n\r\n\r\n        <table className=\"table\" style={{ width: \"50%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.complaints.map((complaint) => (\r\n\t\t\t\t\t\t\t\t<tr id={complaint.Id} key={complaint.Id} >\r\n\t\t\t\t\t\t\t\t\t<td width=\"130em\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={ReportImage} width=\"70em\" />\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                  <td>\r\n                                        \r\n                                        <div>  \r\n                                        <b>Patient's email: </b>{complaint.EntityDTO.email}\r\n                        \r\n                                        </div>\r\n                                        <div>  \r\n                                        <b>Employee's name: </b>{complaint.EntityDTO.staffName + \"  \" + complaint.EntityDTO.staffSurname}\r\n                        \r\n                                        </div> \r\n                                        <div>  \r\n                                        <b>Complaint: </b>{complaint.EntityDTO.text}\r\n                        \r\n                                        </div>  \r\n\r\n                                        \r\n\r\n                                      </td>\r\n\r\n                                      <td className=\"align-middle\">\r\n                                      <div style={{ marginLeft: \"55%\" }}>\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          onClick={() => this.handleReplyClick(complaint)}\r\n                                          className=\"btn btn-outline-secondary btn-block\"\r\n                                        >\r\n                                          Reply\r\n                                        </button>\r\n                                      </div>\r\n                                      \r\n                                    </td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\r\n          <CreateComplaintModal\r\n\t\t\t\t\tbuttonName=\"Send reply\"\r\n\t\t\t\t\theader=\"Reply to complaint\"\r\n\t\t\t\t\thandleComplaintChange={this.handleComplaintChange}\r\n\t\t\t\t\tshow={this.state.showComplaintModal}\r\n\t\t\t\t\tonCloseModal={this.handleComplaintModalClose}\r\n\t\t\t\t\tgiveFeedback={this.handleReplyComaplaint}\r\n\t\t\t\t\tname={this.state.staffName + \" \" + this.state.staffSurname}\r\n\t\t\t\t\tforWho=\"consultant\"\r\n\t\t\t\t\thandleClickIcon={this.handleClickIcon}\r\n\t\t\t\t\tcomplaint={this.state.complaint}\r\n\t\t\t\t/>\r\n      </React.Fragment>\r\n        \r\n\t\t);\r\n        }\r\n\r\n}\r\nexport default AdminStaffComplains;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies.js",["263","264","265","266"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from './Header';\r\nimport PharmacyLogoPicture from \"../Images/pharmacyLogo.jpg\" ;\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport FirstGradeModal from \"../Components/Modal/FirstGradeModal\";\r\nimport CreateComplaintModal from \"../Components/CreateComplaintModal\";\r\nimport ModalDialog from './ModalDialog';\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass Pharmacies extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n\t\r\n        allPharmacies: [],\r\n        subscribedPharmacies: [],\r\n        pharmacySearchName: \"\",\r\n        searchCountryName: \"\",\r\n        searchStreetName: \"\",\r\n        searchCityName: \"\",\r\n        showSearchedForm: false,\r\n        showResetSearced: false,\r\n        inputError : \"none\",\r\n        pharmacyID : \"\",\r\n        text : \"\",\r\n        pharmacyName:\"\",\r\n        patientEmail:\"\",\r\n        showComplaintModal:false,\r\n        openModal:false,\r\n        \r\n      \r\n\t\t\r\n        selectedPharmacy : [],\r\n        pharmacyId : \"\",\r\n        pharmacyGrade : 0,\r\n        pharmacyName : \"\",\r\n        showGradeModal: false,\r\n        showFirstGrade : false,\r\n        showModifyGrade : false,\r\n        maxGrade : 5,\r\n\r\n\r\n        hiddenSuccessfulAlert : true,\r\n        SuccessfulHeader : \"\",\r\n        SuccessfulMessage : \"\",\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n\r\n  };\r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n\r\n    \r\n\t\t\r\n\r\n\t\tAxios.get(API_URL + \"/pharmacy/allPharmacies\")\r\n\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ allPharmacies: res.data });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n  if(this.hasRole(\"ROLE_PATIENT\")){\r\n    Axios.get(\"http://localhost:8080/pharmacy/allPatientsSubscribedPharmacies\", {\r\n    \r\n     \r\n    validateStatus: () => true, headers: { Authorization: GetAuthorisation() }\r\n     })\r\n\r\n     .then((res) => {\r\n      this.setState({ subscribedPharmacies: res.data });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  Axios.get(\"http://localhost:8080/users/patient\", { validateStatus: () => true, headers: { Authorization : GetAuthorisation()} })\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(res.data);\r\n              this.setState({\r\n              patientEmail: res.data.EntityDTO.email,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t});\r\n\r\n\r\n  \r\n         \r\n\t}\r\n\r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n   handleSearchForm = () => {    \r\n   \r\n    if(this.state.inputError=== \"initial\")\r\n      this.setState({inputError :\"none\"});\r\n      \r\n   \r\n    this.setState({showSearchedForm : !this.state.showSearchedForm,\r\n                    showResetSearced: false});\r\n          \r\n                    if(this.state.showSearchedForm===false){\r\n\r\n                      this.setState({\r\n    \r\n                        showResetSearced: true,\r\n                        pharmacySearchName: \"\",\r\n                        searchCountryName: \"\",\r\n                        searchStreetName: \"\",\r\n                        searchCityName: \"\",\r\n                        inputError : \"none\"     \r\n                      \r\n                      });\r\n\r\n                    }\r\n\r\n                    \r\n   }\r\n\r\n   handlePharmacySearchNameChange = (event) => {\r\n\t\tthis.setState({ pharmacySearchName: event.target.value });\r\n\t};\r\n\r\n  handleSearchCountryNameChange= (event) => {\r\n\t\tthis.setState({ searchCountryName: event.target.value });\r\n\t};\r\n\r\n  handleSearchStreetNameChange= (event) => {\r\n\t\tthis.setState({ searchStreetName: event.target.value });\r\n\t};\r\n\r\n  \r\n  handleSearchCityNameChange= (event) => {\r\n\t\tthis.setState({ searchCityName: event.target.value });\r\n\t};\r\n\r\n\r\n\r\n    SearchPharmacies = () => {\r\n\r\n\r\n    if (this.state.pharmacySearchName === \"\" && this.state.searchCityName === \"\" \r\n          &&  this.state.searchCountryName=== \"\" &&  this.state.searchStreetName=== \"\" ) {\r\n          this.setState({ inputError : \"initial\" });\r\n             return false;\r\n    } \r\n  \r\n    this.setState({ inputError : \"none\" });\r\n  \r\n      const searchDTO = {\r\n  \r\n        name : this.state.pharmacySearchName,\r\n        street : this.state.searchStreetName,\r\n        city: this.state.searchCityName,\r\n        country : this.state.searchCountryName,\r\n  \r\n  \r\n       };\r\n\r\n      \r\n\r\n      Axios.post(API_URL + \"/pharmacy/searchPharmacies\", searchDTO)\r\n  \r\n      .then((res) => {\r\n        this.setState({\r\n          allPharmacies: res.data,\r\n          showResetSearced : true,\r\n          showSearchedForm : false,      \r\n        \r\n        });\r\n       \r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        \r\n      });\r\n  \r\n      \r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    resetSearch = () => {\r\n\r\n   \r\n    this.setState({\r\n    \r\n     showResetSearced : false,\r\n     showSearchedForm : false, \r\n     pharmacySearchName: \"\",\r\n     searchCountryName: \"\",\r\n     searchStreetName: \"\",\r\n     searchCityName: \"\",\r\n     inputError : \"none\"     \r\n   \r\n   });\r\n\r\n          \r\n    Axios.get(API_URL + \"/pharmacy/allPharmacies\")\r\n\r\n    .then((res) => {\r\n      this.setState({ allPharmacies\r\n        : res.data });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n\r\n\t\t\r\n\t};\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n  }\r\n\r\n\r\n\r\n  handleSubscribe = (pharmacy) => {\r\n\t\tconsole.log(pharmacy);\r\n    \r\n\t\t\r\n\r\n    Axios.get(\"http://localhost:8080/users/subscribeToPharmacy/\", {\r\n    \r\n      params: {\r\n        pharmacyId: pharmacy.Id\r\n    },\r\n    validateStatus: () => true, headers: { Authorization: GetAuthorisation() }\r\n     })\r\n    .then((res) => {\r\n        \r\n      Axios.get(\"http://localhost:8080/pharmacy/allPatientsSubscribedPharmacies\", {\r\n    \r\n     \r\n              validateStatus: () => true, headers: { Authorization: GetAuthorisation() }\r\n              })\r\n\r\n              .then((res) => {\r\n                this.setState({ subscribedPharmacies: res.data });\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n        \r\n    })\r\n\r\n\t};\r\n\r\n\r\n  handleUnsubscribe = (pharmacy) => {\r\n\t\tconsole.log(pharmacy);\r\n    \r\n\t\t\r\n\r\n    Axios.get(\"http://localhost:8080/users/unsubscribeFromPharmacy/\", {\r\n    \r\n      params: {\r\n        pharmacyId: pharmacy.Id\r\n    },\r\n    validateStatus: () => true, headers: { Authorization: GetAuthorisation() }\r\n     })\r\n    .then((res) => {\r\n\r\n      Axios.get(\"http://localhost:8080/pharmacy/allPatientsSubscribedPharmacies\", {\r\n    \r\n     \r\n          validateStatus: () => true, headers: { Authorization: GetAuthorisation() }\r\n          })\r\n\r\n          .then((res) => {\r\n            this.setState({ subscribedPharmacies: res.data });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        \r\n        \r\n        \r\n    })\r\n\r\n\t};\r\n\r\n  \r\n\r\n  isSubscribed = (pharmacy) => {\r\n\t\tconsole.log(pharmacy);\r\n    \r\n\t\tfor (const [index, value] of this.state.subscribedPharmacies.entries()) {\r\n\r\n      if(this.state.subscribedPharmacies[index].Id===pharmacy.Id){\r\n        console.log(\"usao\");\r\n        return true;\r\n      }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n     \r\n\r\n\t};\r\n\r\n  handleComplaintClick = (pharmacy) => {\r\n\t\tconsole.log(pharmacy);\r\n\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tpharmacyID: pharmacy.Id,\r\n            pharmacyName: pharmacy.EntityDTO.name,\r\n            showComplaintModal: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t};\r\n\r\n  handleComplaintChange = (event) => {\r\n\t\tthis.setState({ text: event.target.value });\r\n\t};\r\n\r\n  handleComplaintModalClose = () => {\r\n\t\tthis.setState({ showComplaintModal: false });\r\n\t};\r\n\r\n  handleComaplaint = () => {\r\n\t\tlet ComplaintPharmacyDTO = {\r\n\t\t\tpharmacyId: this.state.pharmacyID,\r\n\t\t\tpatientEmail: this.state.patientEmail,\r\n\t\t\tDate: new Date(),\r\n\t\t\ttext: this.state.text,\r\n\t\t\treply: \"\",\r\n\t\t};\r\n\r\n\t\tAxios.post(\"http://localhost:8080/complaint/pharmacy\", ComplaintPharmacyDTO, { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t.then((resp) => {\r\n\t\t\t\tif (resp.status === 500) {\r\n          this.setState({ hiddenFailAlert: false, failHeader: \"Internal server error\", failMessage: \"Server error.\" });\r\n        }else if(resp.status === 403){\r\n\r\n          this.setState({\r\n            openModal: true,\r\n          });\r\n\t\t\t\t\t\r\n\t\t\t\t} else if (resp.status === 201) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({ showComplaintModal: false });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n  handleModalCloseCantUse= () => {\r\n\t\tthis.setState({ \r\n\t\t\topenModal: false,\r\n            \r\n\t\t});\r\n\r\n\t};\r\n\r\n\r\n\thandleCloseUnsuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n  handleGetGradeClick = (pharmacy) => {\r\n    console.log(pharmacy);\r\n\r\n\r\n    \r\n\t\r\n\t\t\tAxios.get(API_URL + \"/grade/pharmacy/\" + pharmacy.Id , {\r\n\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\tthis.props.history.push('/login');\r\n\t\t\t\t\t} else if(res.status === 404){\r\n\t\r\n\t\r\n\t\t\t\t\t\tconsole.log(\"Nema ocenu\");\r\n\t\r\n\t\t\t\t\t\tlet entityDTO = {\r\n\t\t\t\t\t\t\tshowGradeModal : true,\r\n\t\t\t\t\t\t\t\tshowFirstGrade : true,\t\r\n\t\t\t\t\t\t\t\tpharmacyId  : pharmacy.Id,\r\n\t\t\t\t\t\t\t\tpharmacyGrade  : pharmacy.EntityDTO.grade,\r\n\t\t\t\t\t\t\t\tpharmacyName  : pharmacy.EntityDTO.name,\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\r\n\t\t\t\t\t\tthis.setState({ showGradeModal : true,\r\n\t\t\t\t\t\t\t\tshowFirstGrade : true,\t\r\n\t\t\t\t\t\t\t\tpharmacyId  : pharmacy.Id,\r\n\t\t\t\t\t\t\t\tpharmacyGrade  : pharmacy.EntityDTO.grade,\r\n\t\t\t\t\t\t\t\tpharmacyName  : pharmacy.EntityDTO.name,\r\n\t\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t\t\tconsole.log(pharmacy.Id);\r\n\t\t\t\t\t\t\tconsole.log(entityDTO);\r\n\t\r\n\t\t\t\t\t}else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\t\t\tthis.setState({ showGradeModal : true,\r\n\t\t\t\t\t\t\tshowModifyGrade : true,\t\r\n\t\t\t\t\t\t\tpharmacyId : pharmacy.Id,\r\n\t\t\t\t\t\t\tpharmacyGrade : res.data.grade,\r\n\t\t\t\t\t\t\tpharmacyName : pharmacy.EntityDTO.name\r\n\t\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t\t\tconsole.log(res.data.grade);\r\n\t\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\r\n    \r\n\r\n\r\n  };\r\n\r\n \r\n  setFirstGrade = (grade) => {\r\n\t\t\r\n    console.log(\"sou\")\r\n    \r\n\r\n    let entityDTO = {\r\n      pharmacyId : this.state.pharmacyId  ,\r\n      grade: grade,\r\n    };\r\n\r\n    console.log(entityDTO);\r\n\r\n    Axios.post(API_URL + \"/grade/pharmacy/createGrade\",entityDTO , {\r\n      validateStatus: () => true,\r\n      headers: { Authorization: GetAuthorisation() },\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          this.props.history.push('/login');\r\n        } else if(res.status === 404){\r\n          console.log(res)\r\n          this.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Bad request\", UnsuccessfulMessage : res.data,\r\n           showGradeModal :false,\r\n           showFirstGrade : false,\r\n          showModifyGrade : false});\r\n\r\n        }else if(res.status === 500){\r\n          this.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Error\", UnsuccessfulMessage : \"internal server error! \",\r\n           showGradeModal :false,\r\n           showFirstGrade : false,\r\n           showModifyGrade : false  });\r\n\r\n        }else {\r\n            \r\n          this.setState({ hiddenSuccessfulAlert:  false, successfulHeader:   \"Successful\", successfulMessage:  \"You successful created grade for pharmacy! \",\r\n           showGradeModal :false,\r\n           showFirstGrade : false,\r\n           showModifyGrade : false   });\r\n\r\n          this.componentDidMount();\r\n          \r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  setModifyGrade = (grade) => {\r\n    \r\n    console.log(\"sou\")\r\n\t\r\n    let entityDTO = {\r\n      pharmacyId : this.state.pharmacyId  ,\r\n      grade: grade,\r\n    };\r\n\r\n    console.log(entityDTO);\r\n\r\n\r\n    Axios.post(API_URL + \"/grade/pharmacy/updateGrade\",entityDTO , {\r\n      validateStatus: () => true,\r\n      headers: { Authorization: GetAuthorisation() },\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          this.props.history.push('/login');\r\n        } else if(res.status === 404){\r\n          this.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Bad request\", UnsuccessfulMessage : res.data,\r\n           showGradeModal :false,\r\n           showFirstGrade : false,\r\n          showModifyGrade : false});\r\n\r\n        }else if(res.status === 500){\r\n          this.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Error\", UnsuccessfulMessage : \"internal server error! \",\r\n           showGradeModal :false,\r\n           showFirstGrade : false,\r\n           showModifyGrade : false  });\r\n\r\n        }else {\r\n            \r\n          this.setState({ hiddenSuccessfulAlert:  false, successfulHeader:   \"Successful\", successfulMessage:  \"You successful update grade for pharmacy! \",\r\n           showGradeModal :false,\r\n           showFirstGrade : false,\r\n           showModifyGrade : false   });\r\n          \r\n           this.componentDidMount();\r\n          \r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n    closeFirstGradeModal = () => {\r\n    \r\n      this.setState({ showFirstGrade : false,\r\n        showModifyGrade : false,\r\n        showGradeModal : false});\r\n\r\n    }\r\n\r\n\r\n    \r\n    handleSortByNameAscending = () => {\r\n    \r\n      \r\n\r\n      Axios.get(API_URL + \"/pharmacy/allPharmacies/sortByNameAscending\", {\r\n        validateStatus: () => true,\r\n        headers: { Authorization: GetAuthorisation() },\r\n      })\r\n        .then((res) => {\r\n          this.setState({ allPharmacies: res.data });\r\n          console.log(res.data );\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    handleSortByNameDescending = () => {\r\n    \r\n      \r\n\r\n      Axios.get(API_URL + \"/pharmacy/allPharmacies/sortByNameDescending\", {\r\n        validateStatus: () => true,\r\n        headers: { Authorization: GetAuthorisation() },\r\n      })\r\n        .then((res) => {\r\n          this.setState({ allPharmacies: res.data });\r\n          console.log(res.data );\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    handleSortByCityAscending = () => {\r\n    \r\n      \r\n\r\n      Axios.get(API_URL + \"/pharmacy/allPharmacies/sortByCityAscending\", {\r\n        validateStatus: () => true,\r\n        headers: { Authorization: GetAuthorisation() },\r\n      })\r\n        .then((res) => {\r\n          this.setState({ allPharmacies: res.data });\r\n          console.log(res.data );\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    handleSortByCityDescending = () => {\r\n    \r\n      \r\n\r\n      Axios.get(API_URL + \"/pharmacy/allPharmacies/sortByCityDescending\", {\r\n        validateStatus: () => true,\r\n        headers: { Authorization: GetAuthorisation() },\r\n      })\r\n        .then((res) => {\r\n          this.setState({ allPharmacies: res.data });\r\n          console.log(res.data );\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    handleSortByGradeAscending = () => {\r\n    \r\n      \r\n\r\n      Axios.get(API_URL + \"/pharmacy/allPharmacies/sortByGradeAscending\", {\r\n        validateStatus: () => true,\r\n        headers: { Authorization: GetAuthorisation() },\r\n      })\r\n        .then((res) => {\r\n          this.setState({ allPharmacies: res.data });\r\n          console.log(res.data );\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    handleSortByGradeDescending = () => {\r\n    \r\n      \r\n\r\n      Axios.get(API_URL + \"/pharmacy/allPharmacies/sortByGradeDescending\", {\r\n        validateStatus: () => true,\r\n        headers: { Authorization: GetAuthorisation() },\r\n      })\r\n        .then((res) => {\r\n          this.setState({ allPharmacies: res.data });\r\n          console.log(res.data );\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n      <div id=\"allPharmacies\">\r\n\r\n            <div className=\"container\" style={{ marginTop: \"1em\" }} >\r\n                <SuccessfulAlert\r\n                      hidden={this.state.hiddenSuccessfulAlert}\r\n                      header={this.state.successfulHeader}\r\n                      message={this.state.successfulMessage}\r\n                      handleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n                  />\r\n                  <UnsuccessfulAlert\r\n                      hidden={this.state.hiddenUnsuccessfulAlert}\r\n                      header={this.state.UnsuccessfulHeader}\r\n                      message={this.state.UnsuccessfulMessage}\r\n                      handleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n                  />\r\n            </div>\r\n           \r\n           \r\n            <div className=\"container\"  style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }} width=\"100%\">\r\n\r\n            <div className=\"inline\" >\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg mr-3\" onClick={this.handleSearchForm}>\r\n               \r\n                {this.state.showSearchedForm ? \"Close search\" : \"Open search\"}\r\n                                \r\n            </button>\r\n\r\n            <button hidden={!this.state.showResetSearced} type=\"button\" class=\"btn btn-outline-primary btn-lg mr-3\" onClick={this.resetSearch}>\r\n               \r\n               Reset search\r\n                               \r\n           </button>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <form hidden={!this.state.showSearchedForm} className=\"form-inline\" width=\"100%\" id=\"searchForm\">\r\n\t\t\t\t\t\t\r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Pharmacy name\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handlePharmacySearchNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.pharmacySearchName}\r\n\t\t\t\t\t\t\t/>             \r\n              \r\n             \r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Street\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchStreetNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchStreetName}\r\n\t\t\t\t\t\t\t/>\r\n\r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"City\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchCityNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchCityName}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t  \t\r\n\r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Country\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this. handleSearchCountryNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchCountryName}\r\n\t\t\t\t\t\t\t/>\r\n              \r\n              \r\n\t\t\t\t\t\t\t<button\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonClick={this.SearchPharmacies}\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-lg \"\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n                \r\n\t\t\t\t\t\t\t>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t</button>\r\n             \r\n\r\n\t\t\t\t\t</form>\r\n\r\n          <div className=\"text-danger\" style={{ display: this.state.inputError, fontSize: \"17px\"}}>\r\n\t\t\t\t\t\t\t\t\t\tEnter something in field!\r\n\t\t\t\t\t</div>\r\n        \r\n        \r\n        \r\n        \r\n             <div style={{  marginTop: \"1em\" }} hidden={!this.hasRole(\"ROLE_PATIENT\")}>\r\n\r\n                <div className=\"dropdown\">\r\n                  <button className=\"btn btn-primary btn-lg dropdown-toggle\"\r\n                    type=\"button\" id=\"dropdownMenu2\"\r\n                    data-toggle=\"dropdown\" \r\n                    aria-haspopup=\"true\" \r\n                    aria-expanded=\"false\">\r\n                    Sort\r\n                  </button>\r\n                  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n                      <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByNameAscending} >Sort by name ascending</button>\r\n                      <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByNameDescending} >Sort by name descending</button>\r\n                      <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByCityAscending} >Sort by city ascending</button>\r\n                      <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByCityDescending} >Sort by city descending</button>\r\n                      <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByGradeAscending} >Sort by grade ascending</button>\r\n                      <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByGradeDescending} >Sort by grade descending</button>\r\n                  </div>\r\n                </div>\r\n\r\n            </div>    \r\n                \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        </div>\r\n\r\n         \r\n\r\n\r\n        <div className=\"container\">\r\n                    <h1 >All pharmacies</h1>\r\n                    <table className=\"table\" style={{ width: \"100%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n                        \r\n                        <tbody>\r\n                            {\r\n                                this.state.allPharmacies.map((pharmacy) => (\r\n                                  \r\n                                    <tr key={pharmacy.Id} id={pharmacy.Id} >\r\n\r\n                                      \r\n                                       \r\n\r\n                                      <td width=\"100px\">  \r\n                                       \r\n                                        <img src={PharmacyLogoPicture} width=\"70px\"></img>                                 \r\n                                     \r\n                                      </td>\r\n\r\n\r\n                                      <td>\r\n                                        \r\n                                        <div>  \r\n                                        <b>Name: </b>{pharmacy.EntityDTO.name}\r\n                                        </div>  \r\n\r\n                                        <div>  \r\n                                        <b>Location: </b> {pharmacy.EntityDTO.address.street}, {\" \"} {pharmacy.EntityDTO.address.city},{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t                                      {pharmacy.EntityDTO.address.country}\r\n                                        </div> \r\n\r\n                                        <div>  \r\n                                        <b>Description: </b>{pharmacy.EntityDTO.description}\r\n                                        </div>\r\n\r\n\r\n                                        <div>\r\n                                        <b>Pharmacy grade: </b> {pharmacy.EntityDTO.grade} {\" \"} \r\n                                        <i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                                        \r\n\t\t\t\t\t\t\t\t\t\t                    </div>\r\n\r\n\r\n\r\n                                      </td>\r\n                                    \r\n                                      <td className=\"align-middle\"hidden={this.isSubscribed(pharmacy) || !this.hasRole(\"ROLE_PATIENT\")}>\r\n                                         \r\n                                          <div style={{ marginLeft: \"35%\" }}>\r\n                                            <button\r\n                                              style={{ background: \"#24a0ed\" }}\r\n                                              type=\"button\"\r\n                                              onClick={() => this.handleSubscribe(pharmacy)}\r\n                                              className=\"btn btn-outline-secondary btn-block\"\r\n                                            >\r\n                                              Subscribe\r\n                                            </button>\r\n                                          </div>\r\n                                      \r\n                                    </td>\r\n\r\n\r\n                                    <td className=\"align-middle\"hidden={!this.isSubscribed(pharmacy) || !this.hasRole(\"ROLE_PATIENT\")}>\r\n                                          <div style={{ marginLeft: \"25%\" }}>\r\n                                            <button\r\n                                              style={{ background: \"#24a0ed\" }}\r\n                                              \r\n                                              type=\"button\"\r\n                                              onClick={() => this.handleUnsubscribe(pharmacy)}\r\n                                              className=\"btn btn-outline-secondary btn-block\"\r\n                                            >\r\n                                              Unsubscribe\r\n                                            </button>\r\n                                          </div>\r\n                                      \r\n                                    </td>\r\n\r\n\r\n                                    <td className=\"align-middle\">\r\n\r\n                                      <div style={{ marginLeft: \"5%\"  }}>\r\n                                          <button\r\n                                            type=\"button\"\r\n                                            style={{ background: \"#24a0ed\" }}\r\n                                            onClick={() => this.handleGetGradeClick(pharmacy)}\r\n                                            hidden={!this.hasRole(\"ROLE_PATIENT\")}\r\n                                            className=\"btn btn-outline-secondary \"\r\n                                          >\r\n                                            Pharmacy grade\r\n                                          </button>\r\n                                      </div>\t                                     \r\n\r\n\r\n                                    </td>\r\n\r\n\r\n                                    <td className=\"align-middle\" hidden={!this.hasRole(\"ROLE_PATIENT\")}>\r\n                                          <div >\r\n                                            <button\r\n                                              style={{ background: \"#781616\" }}\r\n                                              \r\n                                              type=\"button\"\r\n                                              onClick={() => this.handleComplaintClick(pharmacy)}\r\n                                              className=\"btn btn-outline-secondary btn-block\"\r\n                                            >\r\n                                              Report\r\n                                            </button>\r\n                                          </div>\r\n                                      \r\n                                    </td>\r\n                                     \r\n                                      \r\n\r\n\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n              <FirstGradeModal \r\n\r\n                show={this.state.showGradeModal}\r\n                showFirstGrade={this.state.showFirstGrade}\r\n                showModifyGrade={this.state.showModifyGrade}\r\n                employeeGrade={this.state.pharmacyGrade }\t\t\t\t\t\t\t\r\n                maxGrade={this.state.maxGrade}\r\n                employeeName={this.state.pharmacyName  }\r\n                employeeSurname={\"\"}\r\n                header={\"Grade\"}\r\n                buttonFirstGradeName={\"Grade\"}\r\n                buttonModifyGradeName={\" Update grade\"}\t\t\t\t\t\t\t\t\r\n                setFirstGrade={this.setFirstGrade}\t\r\n                setModifyGrade={this.setModifyGrade}\r\n                onCloseModal={this.closeFirstGradeModal}\t\t\t\t\t\t\r\n\r\n              />\r\n\r\n\r\n\r\n\r\n\r\n        <CreateComplaintModal\r\n\t\t\t\t\tbuttonName=\"Send complaint\"\r\n\t\t\t\t\theader=\"Give complaint\"\r\n\t\t\t\t\thandleComplaintChange={this.handleComplaintChange}\r\n\t\t\t\t\tshow={this.state.showComplaintModal}\r\n\t\t\t\t\tonCloseModal={this.handleComplaintModalClose}\r\n\t\t\t\t\tgiveFeedback={this.handleComaplaint}\r\n\t\t\t\t\tname={this.state.StaffName + \" \" + this.state.StaffSurame}\r\n\t\t\t\t\tforWho=\"consultant\"\r\n\t\t\t\t\thandleClickIcon={this.handleClickIcon}\r\n\t\t\t\t\tcomplaint={this.state.complaint}\r\n\t\t\t\t/>\r\n        <ModalDialog\r\n\t\t\t\tshow={this.state.openModal}\r\n\t\t\t\tonCloseModal={this.handleModalCloseCantUse}\r\n\t\t\t\theader=\"Error\"\r\n\t\t\t\ttext=\"You can't make a complaint on this pharmacy because you never interacted with it.\"\r\n\t\t\t/>\r\n\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default Pharmacies;\r\n","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\AdminPharmacyComplains.js",["267"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from './Header';\r\nimport ReportImage from \"../Images/report.png\" ;\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport CreateComplaintModal from \"../Components/CreateComplaintModal\";\r\n\r\n\r\n\r\nclass AdminPharmacyComplains extends Component {\r\n\r\n\r\n\r\n    state = {\r\n        complaints : [],\r\n        date : new Date(),\r\n        text : \"\",\r\n        staffName : \"\",\r\n        staffSurname : \"\",\r\n        profession : \"\",\r\n        reply : \"\",\r\n        email : \"\",\r\n        complaintId : \"\",\r\n        showComplaintModal : false,\r\n      \r\n    \r\n    \r\n    };\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        Axios.get(\"http://localhost:8080/complaint/getPharmacyComplaints\", {\r\n                validateStatus: () => true,\r\n                headers: { Authorization: GetAuthorisation() },\r\n            })\r\n                .then((res) => {\r\n                    if (res.status === 401) {\r\n              this.props.history.push('/login');\r\n                    } else {\r\n                        this.setState({ complaints: res.data });\r\n                        console.log(res.data);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n    \r\n    \r\n    \r\n      }\r\n\r\n      handleReplyClick = (complaint) => {\r\n\t\tconsole.log(complaint);\r\n\t\tthis.setState({\r\n\t\t\t\r\n            text : complaint.EntityDTO.text,\r\n            \r\n            \r\n            reply : complaint.EntityDTO.reply,\r\n            email : complaint.EntityDTO.patientEmail,\r\n            complaintId : complaint.Id,\r\n\t\t\tshowComplaintModal: true,\r\n\t\t});\r\n\t};\r\n\r\n  handleComplaintChange = (event) => {\r\n\t\tthis.setState({ reply: event.target.value });\r\n\t};\r\n  handleComplaintModalClose = () => {\r\n\t\tthis.setState({ showComplaintModal: false });\r\n\t};\r\n\r\n  handleReplyComaplaint = () => {\r\n\t\tlet ComplaintStaffDTO = {\r\n\t\t\treply : this.state.reply,\r\n            pharmacyId : this.state.complaintId\r\n\t\t};\r\n\r\n\t\tAxios.post(\"http://localhost:8080/complaint/replyToPharmacyComplaint\", ComplaintStaffDTO, { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t.then((resp) => {\r\n\t\t\t\tif (resp.status === 500) {\r\n\t\t\t\t\tthis.setState({ hiddenFailAlert: false, failHeader: \"Internal server error\", failMessage: \"Server error.\" });\r\n\t\t\t\t} else if (resp.status === 201) {\r\n\t\t\t\t\t\r\n\r\n          Axios.get(\"http://localhost:8080/complaint/getPharmacyComplaints\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n          this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ complaints: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({ showComplaintModal: false });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n    render() {\r\n\t\r\n\r\n\t\treturn (\r\n            <React.Fragment>\r\n                <Header/>\r\n                    <h5 className=\" text-center  mb-0 text-uppercase\" style={{ marginTop: \"2rem\" }}>\r\n\t\t\t\t\t\tPharmacy complaints\r\n\t\t\t\t    </h5>\r\n\r\n                    <table className=\"table\" style={{ width: \"50%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.complaints.map((complaint) => (\r\n\t\t\t\t\t\t\t\t<tr id={complaint.Id} key={complaint.Id} >\r\n\t\t\t\t\t\t\t\t\t<td width=\"130em\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={ReportImage} width=\"70em\" />\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                  <td>\r\n                                        \r\n                                        <div>  \r\n                                        <b>Patient's email: </b>{complaint.EntityDTO.patientEmail}\r\n                        \r\n                                        </div>\r\n                                        \r\n                                        <div>  \r\n                                        <b>Complaint: </b>{complaint.EntityDTO.text}\r\n                        \r\n                                        </div>  \r\n\r\n                                        \r\n\r\n                                      </td>\r\n\r\n                                      <td className=\"align-middle\">\r\n                                      <div style={{ marginLeft: \"55%\" }}>\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          onClick={() => this.handleReplyClick(complaint)}\r\n                                          className=\"btn btn-outline-secondary btn-block\"\r\n                                        >\r\n                                          Reply\r\n                                        </button>\r\n                                      </div>\r\n                                      \r\n                                    </td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\r\n                    <CreateComplaintModal\r\n\t\t\t\t\tbuttonName=\"Send reply\"\r\n\t\t\t\t\theader=\"Reply to complaint\"\r\n\t\t\t\t\thandleComplaintChange={this.handleComplaintChange}\r\n\t\t\t\t\tshow={this.state.showComplaintModal}\r\n\t\t\t\t\tonCloseModal={this.handleComplaintModalClose}\r\n\t\t\t\t\tgiveFeedback={this.handleReplyComaplaint}\r\n\t\t\t\t\tname={this.state.staffName + \" \" + this.state.staffSurname}\r\n\t\t\t\t\tforWho=\"consultant\"\r\n\t\t\t\t\thandleClickIcon={this.handleClickIcon}\r\n\t\t\t\t\tcomplaint={this.state.complaint}\r\n\t\t\t\t/>\r\n\r\n            </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\n}\r\nexport default AdminPharmacyComplains;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\activateAccount.js",[],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\QrCode.js",[],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\UserProfile.js",["268","269","270","271","272","273"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport PharmacyLogoPicture from \"../Images/pharmacyLogo.jpg\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport ChangePasswordModal from \"../Components/Modal/ChangePasswordModal\";\r\nimport AllergensModal from \"../Components/Modal/AllergensModal\";\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass UserProfile extends Component {\r\n\r\n    state = {\r\n\t\tid: \"\",\r\n\t\temail: \"\",\r\n        name: \"\",\r\n\t\tsurname: \"\",\r\n\t\tpassword: \"\",\r\n\t\taddress: \"\",\r\n\t\tphoneNumber: \"\",\r\n\t\tnameError: \"none\",\r\n\t\tsurnameError: \"none\",\r\n\t\taddressError: \"none\",\r\n\t\tphoneError: \"none\",\r\n\t\tphoneValidateError: \"none\",\r\n\t\thiddenEditInfo: true,\r\n        redirect: false,\r\n\t\thiddenSuccessfulAlert: true,\r\n\t\tsuccessfulHeader: \"\",\r\n\t\tsuccessfulMessage: \"\",\r\n\t\thiddenUnsuccessfulAlert: true,\r\n\t\tUnsuccessfulHeader: \"\",\r\n\t\tUnsuccessfulMessage: \"\",\r\n\t\tisPasswordModalOpened: false,\r\n\t\thiddenPasswordErrorAlert: true,\r\n\t\terrorPasswordHeader: \"\",\r\n\t\terrorPasswordMessage: \"\",\r\n\t\temptyOldPasswordError: \"none\",\r\n\t\temptyNewPasswordError: \"none\",\r\n\t\temptyNewPasswordRepeatedError: \"none\",\r\n\t\tnewPasswordAndRepeatedNotSameError: \"none\",\r\n\r\n\t\t\r\n\t\tuserAllergens: [],\r\n\t\thiddenAllergenSuccessfulAlert: true,\r\n\t\tsuccessfulAllergenHeader: \"\",\r\n\t\tsuccessfulAllergenMessage: \"\",\r\n\t\thiddenAllergenErrorAlert: true,\r\n\t\terrorAllergenHeader: \"\",\r\n\t\terrorAllergenMessage: \"\",\r\n\t\topenAllergenModal: false,\r\n\t\tpatientPoints : \"\",\r\n\t\tpatientPenalties : \"\",\r\n\t\tpatientLoyaltyCategory : \"\",\r\n\t\texaminationDiscount : \"\",\r\n\t\tconsultationDiscount : \"\",\r\n\t\tdrugDiscount : \"\",\r\n\t\tshowAnotherInformation: false,\r\n\t\thideButtonForAnotherInformation : false\r\n\r\n\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n    hasRole = (requestRole) => {\r\n        let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n  \r\n        if (currentRoles === null) return false;\r\n  \r\n  \r\n        for (let currentRole of currentRoles) {\r\n          if (currentRole === requestRole) return true;\r\n        }\r\n        return false;\r\n      };\r\n\r\n\t\r\n    handleEmailChange = (event) => {\r\n\t\tthis.setState({ email: event.target.value });\r\n\t};\r\n\r\n\thandleNameChange = (event) => {\r\n\t\tthis.setState({ name: event.target.value });\r\n\t};\r\n\r\n\thandleSurnameChange = (event) => {\r\n\t\tthis.setState({ surname: event.target.value });\r\n\t};\r\n\r\n\thandlePhoneNumberChange = (event) => {\r\n\t\tthis.setState({ phoneNumber: event.target.value });\r\n\t};\r\n\r\n\thandleAddressChange = (event) => {\r\n\t\tthis.setState({ address: event.target.value });\r\n\t};\r\n\r\n\thandleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\thandleChangePasswordModalOpen = () => {\r\n\t\tthis.setState({ hiddenEditInfo: true, \r\n\t\t\tisPasswordModalOpened: true });\r\n\t};\r\n\r\n\thandleChangePasswordModalClose = () => {\r\n\t\tthis.setState({ isPasswordModalOpened: false });\r\n\t};\r\n\r\n\thandleCloseAlertPassword = () => {\r\n\t\tthis.setState({ hiddenPasswordErrorAlert: true });\r\n\t};\r\n\r\n\thandleAllergenModal = () => {\r\n\t\tthis.setState({ hiddenEditInfo: true, openAllergenModal: true });\r\n\t};\r\n\r\n\r\n\t\r\n\thandleAllergensModalClose = () => {\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\thiddenAllergenSuccessfulAlert: true,\r\n\t\t\tsuccessfulAllergenHeader: \"\",\r\n\t\t\tsuccessfulAllergenMessage: \"\",\r\n\t\t\thiddenAllergenErrorAlert: true,\r\n\t\t\terrorAllergenHeader: \"\",\r\n\t\t\terrorAllergenMessage: \"\",\r\n\t\t\topenAllergenModal: false,\r\n\t\t});\r\n\t};\r\n\r\n\thandleCloseAllergenAlertError = () => {\r\n\t\tthis.setState({ hiddenAllergenErrorAlert: true });\r\n\t};\r\n\r\n\thandleCloseAllergenAlertSuccessful = () => {\r\n\t\tthis.setState({ hiddenAllergenSuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!this.hasRole(\"ROLE_PHARMACIST\") && !this.hasRole(\"ROLE_DERMATHOLOGIST\") && !this.hasRole(\"ROLE_PATIENT\") && !this.hasRole(\"ROLE_SUPPLIER\") && !this.hasRole(\"ROLE_PHARMACYADMIN\")) {\r\n\t\t\tthis.setState({ redirect: true });\r\n\t\t\tthis.props.history.push('/login')\r\n\t\t\r\n        } else {\r\n\r\n\r\n\t\t\tconsole.log(GetAuthorisation());\r\n\t\t\tconsole.log(localStorage.getItem(\"keyRole\"));\r\n\t\t\t\r\n\t\t\tif(this.hasRole(\"ROLE_PATIENT\")){\r\n\t\t\tAxios.get(API_URL + \"/users/patient\", { validateStatus: () => true, headers: { Authorization : GetAuthorisation()} })\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\tif (res.status === 401) {                       \r\n                        this.setState({ redirect: true });\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.log(res.data.EntityDTO.email)\r\n\t\t\t\t\t\tconsole.log(res.data.EntityDTO.name)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n                        this.setState({\r\n\t\t\t\t\t\t\tid: res.data.Id,\r\n\t\t\t\t\t\t\temail: res.data.EntityDTO.email,\r\n\t\t\t\t\t\t\tname: res.data.EntityDTO.name,\r\n\t\t\t\t\t\t\tsurname: res.data.EntityDTO.surname,\r\n\t\t\t\t\t\t\taddress: res.data.EntityDTO.address,\r\n\t\t\t\t\t\t\tphoneNumber: res.data.EntityDTO.phoneNumber,\r\n\t\t\t\t\t\t\tuserAllergens: res.data.EntityDTO.allergens,\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tpatientPoints : res.data.EntityDTO.points,\r\n\t\t\t\t\t\t\tpatientPenalties : res.data.EntityDTO.penalty,\r\n\t\t\t\t\t\t\tpatientLoyaltyCategory :  res.data.EntityDTO.loyalityProgramForPatientDTO.loyalityCategory,\r\n\t\t\t\t\t\t\texaminationDiscount : res.data.EntityDTO.loyalityProgramForPatientDTO.examinationDiscount,\r\n\t\t\t\t\t\t\tconsultationDiscount : res.data.EntityDTO.loyalityProgramForPatientDTO.consultationDiscount,\r\n\t\t\t\t\t\t\tdrugDiscount : res.data.EntityDTO.loyalityProgramForPatientDTO.drugDiscount,\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\tconsole.log(this.state.userAllergens)\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tconsole.log(\"ovaj eror je u pitanju\");\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}else if(this.hasRole(\"ROLE_SUPPLIER\")){\r\n\r\n\t\t\t\tconsole.log(\"usao u supplera 2\");\r\n\r\n\t\t\t\tAxios.get(API_URL + \"/users/supplier\", { validateStatus: () => true, headers: { Authorization : GetAuthorisation()} })\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\tif (res.status === 401) {                       \r\n                        this.setState({ redirect: true });\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t//console.log(res.data.EntityDTO.email)\r\n\t\t\t\t\t\t//console.log(res.data.EntityDTO.name)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n                        this.setState({\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\temail: res.data.email,\r\n\t\t\t\t\t\t\tname: res.data.name,\r\n\t\t\t\t\t\t\tsurname: res.data.surname,\r\n\t\t\t\t\t\t\taddress: res.data.address,\r\n\t\t\t\t\t\t\tphoneNumber: res.data.phoneNumber,\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tconsole.log(\"ovaj eror je u pitanju\");\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}else if(this.hasRole(\"ROLE_PHARMACYADMIN\")){\r\n\r\n\t\t\t\tconsole.log(\"usao admina apoteke\");\r\n\t\t\t\tAxios.get(API_URL + \"/users/phadmin\", { validateStatus: () => true, headers: { Authorization : GetAuthorisation()} })\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\tif (res.status === 401) {                       \r\n                        this.setState({ redirect: true });\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\r\n                        this.setState({\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\temail: res.data.email,\r\n\t\t\t\t\t\t\tname: res.data.name,\r\n\t\t\t\t\t\t\tsurname: res.data.surname,\r\n\t\t\t\t\t\t\taddress: res.data.address,\r\n\t\t\t\t\t\t\tphoneNumber: res.data.phoneNumber,\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\r\n\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tconsole.log(\"erradminapoteke\");\r\n\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t}else if(this.hasRole(\"ROLE_DERMATHOLOGIST\")){\r\n\r\n\t\t\t\tconsole.log(\"usao u dermatologa\");\r\n\r\n\t\t\t\tAxios.get(API_URL + \"/users/dermathologist\", { validateStatus: () => true, headers: { Authorization : GetAuthorisation()} })\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\tif (res.status === 401) {                       \r\n                        this.setState({ redirect: true });\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t//console.log(res.data.EntityDTO.email)\r\n\t\t\t\t\t\t//console.log(res.data.EntityDTO.name)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n                        this.setState({\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\temail: res.data.email,\r\n\t\t\t\t\t\t\tname: res.data.name,\r\n\t\t\t\t\t\t\tsurname: res.data.surname,\r\n\t\t\t\t\t\t\taddress: res.data.address,\r\n\t\t\t\t\t\t\tphoneNumber: res.data.phoneNumber,\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tconsole.log(\"ovaj eror je u pitanju\");\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\r\n\thandleChangeInfo = () => {\r\n\t\t\r\n\r\n\r\n\t\tlet userDTO = {\r\n\t\t\tname: this.state.name,\r\n\t\t\tsurname: this.state.surname,\r\n\t\t\taddress: this.state.address,\r\n\t\t\tphoneNumber: this.state.phoneNumber,\r\n\t\t};\r\n\r\n\r\n\r\n\t\tif (this.validateForm(userDTO)){\r\n\r\n\t\t\tconsole.log(userDTO.name  )\r\n\r\n\t\t\tif(this.hasRole(\"ROLE_PATIENT\")){\r\n\t\t\tAxios.put(API_URL + \"/users/patient\", userDTO, {\r\n\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\t\t\tUnsuccessfulHeader: \"Bad request\", \r\n\t\t\t\t\t\t\tUnsuccessfulMessage: \"Invalid argument.\" });\r\n\r\n\t\t\t\t\t} else if (res.status === 500) {\r\n\r\n\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\t\t\tUnsuccessfulHeader: \"Internal server error\", \r\n\t\t\t\t\t\t\tUnsuccessfulMessage: \"Server error.\" });\r\n\r\n\t\t\t\t\t} else if (res.status === 204) {\r\n\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\thiddenSuccessfulAlert: false,\r\n\t\t\t\t\t\t\tsuccessfulHeader: \"Success\",\r\n\t\t\t\t\t\t\tsuccessfulMessage: \"You updated your information.\",\r\n\t\t\t\t\t\t\thiddenEditInfo: true,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\t\tUnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t\t\t\r\n\t\t\t\t});\r\n\r\n\t\t\t}else if(this.hasRole(\"ROLE_SUPPLIER\")){\r\n\r\n\t\t\t\tAxios.put(API_URL + \"/users/supplier\", userDTO, {\r\n\t\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\t\t\t\tUnsuccessfulHeader: \"Bad request\", \r\n\t\t\t\t\t\t\t\tUnsuccessfulMessage: \"Invalid argument.\" });\r\n\t\r\n\t\t\t\t\t\t} else if (res.status === 500) {\r\n\t\r\n\t\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\t\t\t\tUnsuccessfulHeader: \"Internal server error\", \r\n\t\t\t\t\t\t\t\tUnsuccessfulMessage: \"Server error.\" });\r\n\t\r\n\t\t\t\t\t\t} else if (res.status === 204) {\r\n\t\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\thiddenSuccessfulAlert: false,\r\n\t\t\t\t\t\t\t\tsuccessfulHeader: \"Success\",\r\n\t\t\t\t\t\t\t\tsuccessfulMessage: \"You updated your information.\",\r\n\t\t\t\t\t\t\t\thiddenEditInfo: true,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\t\t\tUnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\r\n\t\t\t}else if(this.hasRole(\"ROLE_PHARMACYADMIN\")){\r\n\r\n\t\t\t\tAxios.put(API_URL + \"/users/phadmin\", userDTO, {\r\n\t\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\t\t\t\tUnsuccessfulHeader: \"Bad request\", \r\n\t\t\t\t\t\t\t\tUnsuccessfulMessage: \"Invalid argument.\" });\r\n\t\r\n\t\t\t\t\t\t} else if (res.status === 500) {\r\n\t\r\n\t\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\t\t\t\tUnsuccessfulHeader: \"Internal server error\", \r\n\t\t\t\t\t\t\t\tUnsuccessfulMessage: \"Server error.\" });\r\n\t\r\n\t\t\t\t\t\t} else if (res.status === 204) {\r\n\t\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\thiddenSuccessfulAlert: false,\r\n\t\t\t\t\t\t\t\tsuccessfulHeader: \"Success\",\r\n\t\t\t\t\t\t\t\tsuccessfulMessage: \"You updated your information.\",\r\n\t\t\t\t\t\t\t\thiddenEditInfo: true,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\t\t\tUnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\r\n\t\t\t}else if(this.hasRole(\"ROLE_DERMATHOLOGIST\")){\r\n\r\n\t\t\t\tAxios.put(API_URL + \"/users/dermathologist\", userDTO, {\r\n\t\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\t\t\t\tUnsuccessfulHeader: \"Bad request\", \r\n\t\t\t\t\t\t\t\tUnsuccessfulMessage: \"Invalid argument.\" });\r\n\t\r\n\t\t\t\t\t\t} else if (res.status === 500) {\r\n\t\r\n\t\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\t\t\t\tUnsuccessfulHeader: \"Internal server error\", \r\n\t\t\t\t\t\t\t\tUnsuccessfulMessage: \"Server error.\" });\r\n\t\r\n\t\t\t\t\t\t} else if (res.status === 204) {\r\n\t\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\thiddenSuccessfulAlert: false,\r\n\t\t\t\t\t\t\t\tsuccessfulHeader: \"Success\",\r\n\t\t\t\t\t\t\t\tsuccessfulMessage: \"You updated your information.\",\r\n\t\t\t\t\t\t\t\thiddenEditInfo: true,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\t\t\tUnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t\t\t\t\r\n\t\t\t\t\t});\r\n                }\r\n\r\n\t\t}\r\n\r\n\t\t\r\n\t};\r\n\r\n\r\n\thandleEditInfoClick= () => {\r\n\t\tthis.setState({\r\n\t\t\thiddenEditInfo: false\r\n\t\t});\r\n\r\n\t\t\r\n\t};\r\n\r\n\tvalidateForm = (userDTO) => {\r\n\t\r\n\t\tthis.setState({\r\n\t\t\tnameError: \"none\",\r\n\t\t\tsurnameError: \"none\",\r\n\t\t\taddressError: \"none\",\r\n\t\t\tphoneError: \"none\",\r\n\t\t\tphoneValidateError: \"none\",\r\n\t\t});\r\n\r\n\t\tconst regexPhone = /^([+]?[0-9]{3,6}[-]?[\\/]?[0-9]{3,5}[-]?[\\/]?[0-9]*)$/;\r\n\t\tconsole.log(regexPhone.test(userDTO.phoneNumber));\r\n\t\tif (userDTO.name === \"\") {\r\n\t\t\tthis.setState({ nameError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.surname === \"\") {\r\n\t\t\tthis.setState({ surnameError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.address=== \"\") {\r\n\t\t\tthis.setState({ addressError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.phoneNumber === \"\") {\r\n\t\t\tthis.setState({ phoneError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (regexPhone.test(userDTO.phoneNumber) === false) {\r\n\t\t\tthis.setState({ phoneValidateError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\r\n\r\n\r\n\tchangePassword = (oldPassword, newPassword, newPasswordRepeated) => {\r\n\t\tconsole.log(oldPassword, newPassword, newPasswordRepeated);\r\n\r\n\t\tthis.setState({\r\n\t\t\thiddenEditInfo: true,\r\n\t\t\thiddenPasswordErrorAlert: true,\r\n\t\t\terrorPasswordHeader: \"\",\r\n\t\t\terrorPasswordMessage: \"\",\r\n\t\t\temptyOldPasswordError: \"none\",\r\n\t\t\temptyNewPasswordError: \"none\",\r\n\t\t\temptyNewPasswordRepeatedError: \"none\",\r\n\t\t\tnewPasswordAndRepeatedNotSameError: \"none\",\r\n\t\t\thiddenSuccessAlert: true,\r\n\t\t\tsuccessHeader: \"\",\r\n\t\t\tsuccessMessage: \"\",\r\n\r\n\r\n\t\t});\r\n\r\n\t\tif (oldPassword === \"\") {\r\n\t\t\tthis.setState({ emptyOldPasswordError: \"initial\" });\r\n\t\t} else if (newPassword === \"\") {\r\n\t\t\tthis.setState({ emptyNewPasswordError: \"initial\" });\r\n\t\t} else if (newPasswordRepeated === \"\") {\r\n\t\t\tthis.setState({ emptyNewPasswordRepeatedError: \"initial\" });\r\n\t\t} else if (newPasswordRepeated !== newPassword) {\r\n\t\t\tthis.setState({ newPasswordAndRepeatedNotSameError: \"initial\" });\r\n\t\t} else {\r\n\t\t\tlet newPasswordDTO= { oldPassword, newPassword };\r\n\t\t\tAxios.post(API_URL + \"/users/changePassword\", newPasswordDTO, {\r\n\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 400) {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\thiddenPasswordErrorAlert: false,\r\n\t\t\t\t\t\t\terrorPasswordHeader: \"Invalid new password\",\r\n\t\t\t\t\t\t\terrorPasswordMessage: \"Invalid new password.\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (res.status === 403) {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\thiddenPasswordErrorAlert: false,\r\n\t\t\t\t\t\t\terrorPasswordHeader: \"Bad credentials\",\r\n\t\t\t\t\t\t\terrorPasswordMessage: \"You entered wrong old password.\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (res.status === 500) {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\thiddenPasswordErrorAlert: false,\r\n\t\t\t\t\t\t\terrorPasswordHeader: \"Internal server error\",\r\n\t\t\t\t\t\t\terrorPasswordMessage: \"Server error.\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (res.status === 204) {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\thiddenSuccessfulAlert: false,\r\n\t\t\t\t\t\t\tsuccessfulHeader: \"Success\",\r\n\t\t\t\t\t\t\tsuccessfulMessage: \"Your password was changed!\",\r\n\t\t\t\t\t\t\tisPasswordModalOpened: false,\r\n\t\t\t\t\t\t\thiddenEditInfo: true,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\t\tUnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\r\n\thandleAddAllergen = (allergenName) => {\r\n\t\tthis.setState({\r\n\t\t\thiddenAllergenSuccessfulAlert: true,\r\n\t\t\tsuccessfulAllergenHeader: \"\",\r\n\t\t\tsuccessfulAllergenMessage: \"\",\r\n\t\t\thiddenAllergenErrorAlert: true,\r\n\t\t\terrorAllergenHeader: \"\",\r\n\t\t\terrorAllergenMessage: \"\",\r\n\t\t});\r\n\t\tconsole.log(allergenName);\r\n\t\tlet patientsAllergenDTO = { allergenName: allergenName, patientId: this.state.id };\r\n\t\tconsole.log(patientsAllergenDTO);\r\n\t\t\r\n\t\tAxios.post(API_URL + \"/users/addPatientsAllergen\", patientsAllergenDTO, {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\thiddenAllergenErrorAlert: false,\r\n\t\t\t\t\t\terrorAllergenHeader: \"Bad request\",\r\n\t\t\t\t\t\terrorAllergenMessage: \"Bad request when adding allergen.\",\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (res.status === 500) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\thiddenAllergenErrorAlert: false,\r\n\t\t\t\t\t\terrorAllergenHeader: \"Internal server error\",\r\n\t\t\t\t\t\terrorAllergenMessage: \"Server error.\",\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (res.status === 200) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thiddenAllergenSuccessfulAlert: false,\r\n\t\t\t\t\t\tsuccessfulAllergenHeader: \"Successful\",\r\n\t\t\t\t\t\tsuccessfulAllergenMessage: \"Allergen added.\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.componentDidMount()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\tUnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t\t});\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\thandleRemoveAllergen = (allergenName) => {\r\n\t\tthis.setState({\r\n\t\t\thiddenAllergenSuccessfulAlert: true,\r\n\t\t\tsuccessfulAllergenHeader: \"\",\r\n\t\t\tsuccessfulAllergenMessage: \"\",\r\n\t\t\thiddenAllergenErrorAlert: true,\r\n\t\t\terrorAllergenHeader: \"\",\r\n\t\t\terrorAllergenMessage: \"\",\r\n\t\t});\r\n\t\tconsole.log(allergenName);\r\n\t\tlet patientsAllergenDTO = { allergenName: allergenName, patientId: this.state.id };\r\n\t\tconsole.log(patientsAllergenDTO);\r\n\r\n\t\tAxios.put(API_URL + \"/users/removePatientsAllergen\", patientsAllergenDTO, {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\thiddenAllergenErrorAlert: false,\r\n\t\t\t\t\t\terrorAllergenHeader: \"Bad request\",\r\n\t\t\t\t\t\terrorAllergenMessage: \"Bad request when removing allergen.\",\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (res.status === 500) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\thiddenAllergenErrorAlert: false,\r\n\t\t\t\t\t\terrorAllergenHeader: \"Internal server error\",\r\n\t\t\t\t\t\terrorAllergenMessage: \"Server error.\",\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (res.status === 200) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thiddenAllergenSuccessfulAlert: false,\r\n\t\t\t\t\t\tsuccessfulAllergenHeader: \"Successful\",\r\n\t\t\t\t\t\tsuccessfulAllergenMessage: \"Allergen removed.\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.componentDidMount()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\tUnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n\r\n\thandleClickAnotherInformation= () => {\r\n\t\tthis.setState({\r\n\t\t\tshowAnotherInformation: true,\r\n\t\t\thideButtonForAnotherInformation : true\r\n\t\t});\r\n\r\n\t\t\r\n\t};\r\n\r\n\r\n\thandleClickAnotherInformationClose= () => {\r\n\t\tthis.setState({\r\n\t\t\tshowAnotherInformation: false,\r\n\t\t\thideButtonForAnotherInformation : false\r\n\t\t});\r\n\r\n\t\t\r\n\t};\r\n\r\n\r\n\r\n\trender() {\r\n\r\n        \r\n\t\treturn(\r\n\r\n            <React.Fragment>\r\n\r\n            <Header/>  \r\n\r\n            <div id=\"userProfilePage\" className=\"container\">\r\n\r\n\r\n\t\t\t\t\t<SuccessfulAlert\r\n\t\t\t\t\t\thidden={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\t\t\theader={this.state.successfulHeader}\r\n\t\t\t\t\t\tmessage={this.state.successfulMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<UnsuccessfulAlert\r\n\t\t\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t<button type=\"button\" class=\"btn btn-outline-primary \"\r\n         onClick={() => this.handleClickAnotherInformation()}\r\n\t\t hidden={this.state.hideButtonForAnotherInformation} hidden={this.hasRole(\"ROLE_DERMATHOLOGIST\")}\r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n         >\r\n\r\n\t\t Show another information\r\n        \r\n        </button>\r\n\r\n\r\n\r\n\t\t<button type=\"button\" class=\"btn btn-outline-primary \"\r\n         onClick={() => this.handleClickAnotherInformationClose()}\r\n\t\t hidden={!this.state.hideButtonForAnotherInformation}\r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n         >\r\n\r\n\t\tClose another information\r\n        </button>\r\n\t\t\t\r\n\r\n\r\n            <h4 className=\" text-center  mb-0 text-uppercase\" style={{ marginTop: \"2rem\" }}>\r\n\t\t\t\t\t\tUser profile\r\n\t\t\t</h4>\r\n\r\n            <div className=\"row mt-5 \">\r\n\r\n\t\t\t\t\t<div className=\"col  container  offset-1 shadow p-3  bg-white \">\r\n                        <h5 className=\" text-center text-uppercase\">Personal Information</h5>\r\n                        \r\n\r\n\t\t\t\t\t\t<form id=\"informationForm\" >\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" >\r\n\t\t\t\t\t\t\t\t\t\t<b>Email address:</b>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email address\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control-plaintext\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleEmailChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.email}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" >\r\n\t\t\t\t\t\t\t\t\t\t<b>Name:</b>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly={this.state.hiddenEditInfo}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={!this.state.hiddenEditInfo === false ? \"form-control-plaintext\" : \"form-control\"}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleNameChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n\t\t\t\t\t\t\t\t\t\tName must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\">\r\n\t\t\t\t\t\t\t\t\t\t<b>Surname:</b>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly={this.state.hiddenEditInfo}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={!this.state.hiddenEditInfo === false ? \"form-control-plaintext\" : \"form-control\"}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Surname\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleSurnameChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.surname}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.surnameError }}>\r\n\t\t\t\t\t\t\t\t\t\tSurname must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Adress:</b>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\treadOnly={this.state.hiddenEditInfo}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={!this.state.hiddenEditInfo === false ? \"form-control-plaintext\" : \"form-control\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Adress\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleAddressChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.address}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.addressError }}>\r\n\t\t\t\t\t\t\t\t\t\tAddress must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" >\r\n\t\t\t\t\t\t\t\t\t\t<b>Phone number:</b>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Phone number\"\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly={this.state.hiddenEditInfo}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={!this.state.hiddenEditInfo === false ? \"form-control-plaintext\" : \"form-control\"}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handlePhoneNumberChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.phoneNumber}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.phoneError }}>\r\n\t\t\t\t\t\t\t\t\t\tPhone number must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.phoneValidateError }}>\r\n\t\t\t\t\t\t\t\t\t\tIncorect phone number.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group text-center\" hidden={this.state.hiddenEditInfo}>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{  marginTop: \"15px\" }}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleChangeInfo}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-xl\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tChange information\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-row justify-content-center mr-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"mr-2\" hidden={!this.state.hiddenEditInfo}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleEditInfoClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-xl\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit Info\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"mr-2\" hidden={!this.state.hiddenEditInfo}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleChangePasswordModalOpen}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-xl\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tChange password\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"mr-2\" hidden={!this.state.hiddenEditInfo} hidden={this.hasRole(\"ROLE_DERMATHOLOGIST\")} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleAllergenModal}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-xl\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAllergens\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t\r\n\r\n\r\n\r\n\t\t\t\t\t<form>\r\n\t\t\t\t<div class=\"form-group row\">\r\n\t\t\t\t\t<label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Email</label>\r\n\t\t\t\t\t<div class=\"col-sm-10\">\r\n\t\t\t\t\t<input type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticEmail\" value=\"email@example.com\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group row\">\r\n\t\t\t\t\t<label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Password</label>\r\n\t\t\t\t\t<div class=\"col-sm-10\">\r\n\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Password\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<div hidden= {!this.state.showAnotherInformation}>\r\n\t\t\t\t\t<div className=\"col  container  offset-1 shadow p-3  bg-white \">\r\n                        <h5 className=\" text-center text-uppercase\">Another information</h5>\r\n                        \r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className=\"form-row\"  style={{ marginTop : \"2em\"}}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col ml-2\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"1.4em\",\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t<b>Number of penalties: { \" \" } </b> \r\n\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col ml-4 rounded pr-3 pl-3\" \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"1.7em\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"400\"\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}{this.state.patientPenalties} {\" \"}\r\n\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className=\"form-row \"  style={{ marginTop : \"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col  ml-2\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"1.4em\",\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t<b>Number of points: { \" \" } </b> \r\n\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col ml-4 rounded pr-3 pl-3\" \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"green\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"1.4em\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop : \"2px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"400\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}{this.state.patientPoints} {\" \"}\r\n\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className=\"form-row \"  style={{ marginTop : \"30px\"}}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col  ml-2\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"1.4em\",\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t<b>Loyalty category: { \" \" } </b> \r\n\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col ml-4 rounded pr-3 pl-3\" \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"violet\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"1.4em\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop : \"2px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"400\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}{this.state.patientLoyaltyCategory} {\" \"}\r\n\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t<div className=\"form-row \"  style={{ marginTop : \"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col  ml-2\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"1.4em\",\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t<b>Examination discount: { \" \" } </b> \r\n\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col ml-4 rounded pr-3 pl-3\" \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"violet\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"1.4em\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop : \"2px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"400\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}{this.state.examinationDiscount} <b>{\" %\"}</b>\r\n\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"form-row \"  style={{ marginTop : \"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col  ml-2\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"1.4em\",\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t<b>Consultation discount: { \" \" } </b> \r\n\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col ml-4 rounded pr-3 pl-3\" \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"violet\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"1.4em\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop : \"2px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"400\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}{this.state.consultationDiscount} <b>{\" %\"}</b>\r\n\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t\t\t<div className=\"form-row \"  style={{ marginTop : \"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col  ml-2\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"1.4em\",\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t<b>Drugs discount: { \" \" } </b> \r\n\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col ml-4 rounded pr-3 pl-3\" \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"violet\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"1.4em\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop : \"2px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"400\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}{this.state.drugDiscount} <b>{\" %\"}</b>\r\n\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\r\n            </div>\r\n\r\n\r\n            \r\n\r\n            </div>\r\n\r\n\r\n\r\n\t\t\t<ChangePasswordModal\r\n\t\t\t\t\theader=\"Change password\"\r\n\t\t\t\t\thiddenPasswordErrorAlert={this.state.hiddenPasswordErrorAlert}\r\n\t\t\t\t\terrorPasswordHeader={this.state.errorPasswordHeader}\r\n\t\t\t\t\terrorPasswordMessage={this.state.errorPasswordMessage}\r\n\t\t\t\t\temptyOldPasswordError={this.state.emptyOldPasswordError}\r\n\t\t\t\t\temptyNewPasswordError={this.state.emptyNewPasswordError}\r\n\t\t\t\t\temptyNewPasswordRepeatedError={this.state.emptyNewPasswordRepeatedError}\r\n\t\t\t\t\tnewPasswordAndRepeatedNotSameError={this.state.newPasswordAndRepeatedNotSameError}\r\n\t\t\t\t\tshow={this.state.isPasswordModalOpened}\r\n\t\t\t\t\tchangePassword={this.changePassword}\r\n\t\t\t\t\tonCloseModal={this.handleChangePasswordModalClose}\r\n\t\t\t\t\thandleCloseAlertPassword={this.handleCloseAlertPassword}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<AllergensModal\r\n\t\t\t\t\thiddenAllergenSuccessfulAlert={this.state.hiddenAllergenSuccessfulAlert}\r\n\t\t\t\t\tsuccessfulAllergenHeader={this.state.successfulAllergenHeader}\r\n\t\t\t\t\tsuccessfulAllergenMessage={this.state.successfulAllergenMessage}\r\n\t\t\t\t\thandleCloseAllergenAlertSuccessful={this.handleCloseAllergenAlertSuccessful}\r\n\r\n\t\t\t\t\thiddenAllergenErrorAlert={this.state.hiddenAllergenErrorAlert}\r\n\t\t\t\t\terrorAllergenHeader={this.state.errorAllergenHeader}\r\n\t\t\t\t\terrorAllergenMessage={this.state.errorAllergenMessage}\r\n\t\t\t\t\thandleCloseAllergenAlertError={this.handleCloseAllergenAlertError}\r\n\r\n\t\t\t\t\tuserAllergens={this.state.userAllergens}\r\n\t\t\t\t\tshow={this.state.openAllergenModal}\r\n\t\t\t\t\tRemoveAllergen={this.handleRemoveAllergen}\r\n\t\t\t\t\tAddAllergen={this.handleAddAllergen}\r\n\t\t\t\t\tonCloseModal={this.handleAllergensModalClose}\r\n\t\t\t\t\theader=\"Patients allergens\"\r\n\t\t\t\t\tsubheader=\"Remove patients allergens\"\r\n\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n            </React.Fragment>\r\n\r\n\r\n        );\r\n        \r\n\t}\r\n\r\n\r\n}\r\n\r\nexport default UserProfile;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\qrPharmacieswithDrugs.js",["274","275"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from './Header';\r\nimport pharmacyLogo from \"../Images/pharmacyLogo.jpg\"\r\nimport { withRouter } from \"react-router\";\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport ModalDialog from \"./ModalDialog\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\nclass qrPharmacieswithDrugs extends Component {\r\n\r\n    state = {\r\n        eReciptId: \"\",\r\n      pharmacies: [],\r\n      formShowed: false,\r\n      name: \"\",\r\n      city: \"\",\r\n      gradeFrom: \"\",\r\n      gradeTo: \"\",\r\n      openModal: false,\r\n      openModalAllergen: false,\r\n      openModalRefused: false,\r\n      distanceFrom: \"\",\r\n      distanceTo: \"\",\r\n      showingSearched: false,\r\n      showingSorted: false,\r\n      currentLatitude: null,\r\n      currentLongitude: null,\r\n      sortIndicator: 0,\r\n      redirect:false,\r\n      redirectUrl:''\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    const pathParams= window.location.pathname;\r\n    const paramsList= pathParams.split(\"/\");\r\n    const id = paramsList[2];\r\n\r\n    console.log(this.props.match.params.id + \"xaxaax\");\r\n\r\n    \r\n\r\n\r\n    Axios.get(\"http://localhost:8080/pharmacy/qrPharmacieswithDrugs/\" + id, { headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data)\r\n\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n   \r\n        }\r\n\r\n\r\n\r\n        handleDrugClick = (id, price) => {\r\n            let PharmacyERecipeDTO = {\r\n                pharmacyId: id,\r\n                eRecipeId: this.props.match.params.id,\r\n                price: price,\r\n            }\r\n            \r\n            Axios.post(\"http://localhost:8080/pharmacy/buyDrugsWithQr\", PharmacyERecipeDTO , { headers: { Authorization: GetAuthorisation() } })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    this.setState({ openModal: true });\r\n\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n            \r\n            console.log(PharmacyERecipeDTO);\r\n        };\r\n\r\n        handleModalClose = () => {\r\n            this.setState({ openModal: false });\r\n        };\r\n\r\n        handleSortByName = () => {\r\n            \r\n            \r\n            Axios.get(\"http://localhost:8080/pharmacy/qrSort-name/\"  + this.props.match.params.id , { headers: { Authorization: GetAuthorisation() } })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    this.setState({ pharmacies: res.data, showingSorted: true, sortIndicator: 1 });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n\r\n        handleSortByNameReverse = () => {\r\n            \r\n    \r\n            ;\r\n            \r\n            Axios.get(\"http://localhost:8080/pharmacy/qrSort-nameReverse/\"  + this.props.match.params.id , { headers: { Authorization: GetAuthorisation() } })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    this.setState({ pharmacies: res.data, showingSorted: true, sortIndicator: 2 });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n\r\n        handleSortByPrice = () => {\r\n            \r\n            \r\n            Axios.get(\"http://localhost:8080/pharmacy/qrSort-price/\"  + this.props.match.params.id, { headers: { Authorization: GetAuthorisation() } })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    this.setState({ pharmacies: res.data, showingSorted: true, sortIndicator: 1 });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n    \r\n        handleSortByPriceReverse = () => {\r\n            \r\n            \r\n            Axios.get(\"http://localhost:8080/pharmacy/qrSort-priceReverse/\"  + this.props.match.params.id, { headers: { Authorization: GetAuthorisation() } })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    this.setState({ pharmacies: res.data, showingSorted: true, sortIndicator: 2 });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n\r\n        handleSortByGrade = () => {\r\n           \r\n            \r\n            Axios.get(\"http://localhost:8080/pharmacy/qrSort-grade/\"  + this.props.match.params.id, { headers: { Authorization: GetAuthorisation() } })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    this.setState({ pharmacies: res.data, showingSorted: true, sortIndicator: 5 });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n        \r\n        handleSortByGradeReverse = () => {\r\n           \r\n            \r\n            Axios.get(\"http://localhost:8080/pharmacy/qrSort-gradeReverse/\"  + this.props.match.params.id, { headers: { Authorization: GetAuthorisation() } })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    this.setState({ pharmacies: res.data, showingSorted: true, sortIndicator: 6 });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n\r\n        handleSortByCity = () => {\r\n            \r\n            \r\n            Axios.get(\"http://localhost:8080/pharmacy/qrSort-address/\"  + this.props.match.params.id, { headers: { Authorization: GetAuthorisation() } })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    this.setState({ pharmacies: res.data, showingSorted: true, sortIndicator: 3 });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n        \r\n        \r\n        handleSortByCityReverse = () => {\r\n           \r\n            \r\n            Axios.get(\"http://localhost:8080/pharmacy/qrSort-addressReverse/\"  + this.props.match.params.id, { headers: { Authorization: GetAuthorisation() } })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    this.setState({ pharmacies: res.data, showingSorted: true, sortIndicator: 4 });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) return <Redirect push to={this.state.redirectUrl} />;\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                   \r\n                    <Header />\r\n\r\n                    <div className=\"container\" style={{ marginTop: \"2%\" }}>\r\n\t\t\t\t\t    <h5 className=\" text-center mb-0 mt-2 text-uppercase\">Pharmacies to buy eRecipe</h5>\r\n                        <h5 className=\" text-center mb-0 mt-2 text-uppercase\" hidden={this.state.pharmacies.length!==0}>Currently there are no drugs in stock! Come back later.</h5>\r\n\r\n                        <div className=\"form-group \" hidden={this.state.pharmacies.length==0}>\r\n\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\">\r\n\t\t\t\t\t\t\t<div className=\"form-row mt-3\">\r\n\t\t\t\t\t\t\t\t<div className=\"form-col\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"dropdown\" >\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n                                        \r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary dropdown-toggle\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"dropdownMenu2\"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-toggle=\"dropdown\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSort by\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByName}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tName - A to Z\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" hidden={this.state.pharmacies.length!==0} type=\"button\" onClick={this.handleSortByNameReverse}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tName - Z to A\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n                                            <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByPrice}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tPrice - low to high\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByPriceReverse}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tPrice - high to low\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n                                            <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByGrade}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tGrade - low to high\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByGradeReverse}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tGrade - high to low\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n                                            <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByCity}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tAddress - A to Z\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByCityReverse}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tAddress - Z to A\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n                        <table className=\"table\" style={{ width: \"100%\", marginTop: \"3rem\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.pharmacies.map((pharmacy) => (\r\n\t\t\t\t\t\t\t\t<tr id={pharmacy.Id} key={pharmacy.Id} >\r\n\t\t\t\t\t\t\t\t\t<td width=\"130em\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={pharmacyLogo} width=\"70em\" />\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Name: </b> {pharmacy.EntityDTO.pharmacy.EntityDTO.name}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Address: </b> {pharmacy.EntityDTO.pharmacy.EntityDTO.address.street}, {pharmacy.EntityDTO.pharmacy.EntityDTO.address.city},{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{pharmacy.EntityDTO.pharmacy.EntityDTO.address.country}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Grade: </b> {pharmacy.EntityDTO.grade}\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"icofont-star\" style={{ color: \"#1977cc\" }}></i>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price for all drugs: </b> {pharmacy.EntityDTO.price}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"align-middle\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={() => this.handleDrugClick(pharmacy.Id, pharmacy.EntityDTO.price)} className=\"btn btn-outline-secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tBuy drugs\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n                <ModalDialog\r\n\t\t\t\t\tshow={this.state.openModal}\r\n\t\t\t\t\thref=\"/\"\r\n\t\t\t\t\tonCloseModal={this.handleModalClose}\r\n\t\t\t\t\theader=\"Success\"\r\n\t\t\t\t\ttext=\"You have successfully bought drugs.\"\r\n\t\t\t\t/>\r\n                    \r\n\r\n\r\n                    </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(qrPharmacieswithDrugs);","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies\\PatientsSubscribedPharmacies.js",["276","277"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../../Components/Header';\r\nimport PharmacyLogoPicture from \"../../Images/pharmacyLogo.jpg\" ;\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass PatientsSubscribedPharmacies extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n\t\r\n        allPharmacies: [],\r\n        pharmacySearchName: \"\",\r\n        searchCountryName: \"\",\r\n        searchStreetName: \"\",\r\n        searchCityName: \"\",\r\n        showSearchedForm: false,\r\n        showResetSearced: false,\r\n        inputError : \"none\",\r\n      \r\n\t\t\r\n\r\n\r\n  };\r\n\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n\t\t\r\n\r\n            if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n                this.props.history.push('/login');\r\n        }\r\n\r\n\r\n        Axios.get(API_URL + \"/pharmacy/allPatientsSubscribedPharmacies\" ,{\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\t\r\n                if (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n                }else{\r\n                    this.setState({ allPharmacies: res.data });\r\n                }\r\n                \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n  \r\n         \r\n\t}\r\n\r\n    hasRole = (requestRole) => {\r\n        let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n    \r\n        if (currentRoles === null) return false;\r\n    \r\n    \r\n        for (let currentRole of currentRoles) {\r\n          if (currentRole === requestRole) return true;\r\n        }\r\n        return false;\r\n      };\r\n\r\n\r\n   handleSearchForm = () => {    \r\n   \r\n    if(this.state.inputError=== \"initial\")\r\n      this.setState({inputError :\"none\"});\r\n      \r\n   \r\n    this.setState({showSearchedForm : !this.state.showSearchedForm,\r\n                    showResetSearced: false});\r\n          \r\n                    if(this.state.showSearchedForm===false){\r\n\r\n                      this.setState({\r\n    \r\n                        showResetSearced: true,\r\n                        pharmacySearchName: \"\",\r\n                        searchCountryName: \"\",\r\n                        searchStreetName: \"\",\r\n                        searchCityName: \"\",\r\n                        inputError : \"none\"     \r\n                      \r\n                      });\r\n\r\n                    }\r\n\r\n                    \r\n   }\r\n\r\n   handlePharmacySearchNameChange = (event) => {\r\n\t\tthis.setState({ pharmacySearchName: event.target.value });\r\n\t};\r\n\r\n  handleSearchCountryNameChange= (event) => {\r\n\t\tthis.setState({ searchCountryName: event.target.value });\r\n\t};\r\n\r\n  handleSearchStreetNameChange= (event) => {\r\n\t\tthis.setState({ searchStreetName: event.target.value });\r\n\t};\r\n\r\n  \r\n  handleSearchCityNameChange= (event) => {\r\n\t\tthis.setState({ searchCityName: event.target.value });\r\n\t};\r\n\r\n\r\n\r\n    SearchPharmacies = () => {\r\n\r\n\r\n    if (this.state.pharmacySearchName === \"\" && this.state.searchCityName === \"\" \r\n          &&  this.state.searchCountryName=== \"\" &&  this.state.searchStreetName=== \"\" ) {\r\n          this.setState({ inputError : \"initial\" });\r\n             return false;\r\n    } \r\n  \r\n    this.setState({ inputError : \"none\" });\r\n  \r\n      const searchDTO = {\r\n  \r\n        name : this.state.pharmacySearchName,\r\n        street : this.state.searchStreetName,\r\n        city: this.state.searchCityName,\r\n        country : this.state.searchCountryName,\r\n  \r\n  \r\n       };\r\n\r\n      \r\n\r\n      Axios.post(API_URL + \"/pharmacy/searchPharmacies\", searchDTO)\r\n  \r\n      .then((res) => {\r\n        this.setState({\r\n          allPharmacies: res.data,\r\n          showResetSearced : true,\r\n          showSearchedForm : false,      \r\n        \r\n        });\r\n       \r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        \r\n      });\r\n  \r\n      \r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    resetSearch = () => {\r\n\r\n   \r\n    this.setState({\r\n    \r\n     showResetSearced : false,\r\n     showSearchedForm : false, \r\n     pharmacySearchName: \"\",\r\n     searchCountryName: \"\",\r\n     searchStreetName: \"\",\r\n     searchCityName: \"\",\r\n     inputError : \"none\"     \r\n   \r\n   });\r\n\r\n          \r\n    Axios.get(API_URL + \"/pharmacy/allPharmacies\")\r\n\r\n    .then((res) => {\r\n      this.setState({ allPharmacies\r\n        : res.data });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n\r\n\t\t\r\n\t};\r\n\r\n\r\n\r\n   \r\n\r\n \r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n      <div id=\"allPharmacies\">\r\n\r\n            \r\n           \r\n           \r\n            <div style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }} width=\"100%\">\r\n\r\n            <div className=\"inline\" >\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg mr-3\" onClick={this.handleSearchForm}>\r\n               \r\n                {this.state.showSearchedForm ? \"Close search\" : \"Open search\"}\r\n                                \r\n            </button>\r\n\r\n            <button hidden={!this.state.showResetSearced} type=\"button\" class=\"btn btn-outline-primary btn-lg mr-3\" onClick={this.resetSearch}>\r\n               \r\n               Reset search\r\n                               \r\n           </button>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <form hidden={!this.state.showSearchedForm} className=\"form-inline\" width=\"100%\" id=\"searchForm\">\r\n\t\t\t\t\t\t\r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Pharmacy name\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handlePharmacySearchNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.pharmacySearchName}\r\n\t\t\t\t\t\t\t/>             \r\n              \r\n             \r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Street\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchStreetNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchStreetName}\r\n\t\t\t\t\t\t\t/>\r\n\r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"City\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchCityNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchCityName}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t  \t\r\n\r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Country\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this. handleSearchCountryNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchCountryName}\r\n\t\t\t\t\t\t\t/>\r\n              \r\n              \r\n\t\t\t\t\t\t\t<button\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonClick={this.SearchPharmacies}\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-lg \"\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n                \r\n\t\t\t\t\t\t\t>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t</button>\r\n             \r\n\r\n\t\t\t\t\t</form>\r\n\r\n          <div className=\"text-danger\" style={{ display: this.state.inputError, fontSize: \"17px\"}}>\r\n\t\t\t\t\t\t\t\t\t\tEnter something in field!\r\n\t\t\t\t\t</div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n        <div className=\"container\">\r\n                    <h1 >All pharmacies</h1>\r\n                    <table className=\"table\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n                        \r\n                        <tbody>\r\n                            {\r\n                                this.state.allPharmacies.map((pharmacy) => (\r\n                                    <tr key={pharmacy.Id} id={pharmacy.Id} >\r\n                                       \r\n\r\n                                      <td width=\"100px\">  \r\n                                       \r\n                                        <img src={PharmacyLogoPicture} width=\"70px\"></img>                                 \r\n                                     \r\n                                      </td>\r\n\r\n\r\n                                      <td>\r\n                                        \r\n                                        <div>  \r\n                                        <b>Name: </b>{pharmacy.EntityDTO.name}\r\n                                        </div>  \r\n\r\n                                        <div>  \r\n                                        <b>Location: </b> {pharmacy.EntityDTO.address.street}, {\" \"} {pharmacy.EntityDTO.address.city},{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t                                      {pharmacy.EntityDTO.address.country}\r\n                                        </div> \r\n\r\n                                        <div>  \r\n                                        <b>Description: </b>{pharmacy.EntityDTO.description}\r\n                                        </div>\r\n\r\n\r\n                                        <div>\r\n                                        <b>Pharmacy grade: </b> {pharmacy.EntityDTO.grade} {\" \"} \r\n                                        <i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                                        \r\n\t\t\t\t\t\t\t\t\t\t                    </div>\r\n\r\n\r\n\r\n                                      </td>\r\n                                     \r\n\r\n\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PatientsSubscribedPharmacies;\r\n","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\HomePageForDermatologistAppointments.js",["278","279","280","281","282"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport PharmacyLogoPicture from \"../Images/pharmacyLogo.jpg\" ;\r\nimport { Redirect } from \"react-router-dom\";\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass HomePageForDermatologistAppointments extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        allPharmacies: [],\r\n        pharmacySearchName: \"\",\r\n        searchCountryName: \"\",\r\n        searchStreetName: \"\",\r\n        searchCityName: \"\",\r\n        showSearchedForm: false,\r\n        showResetSearced: false,\r\n        inputError : \"none\"\r\n\t\t\r\n\r\n\r\n  };\r\n\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n}\r\n\r\n  componentDidMount() {\r\n\t\t\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n\t\tAxios.get(API_URL + \"/pharmacy/allPharmacies\")\r\n\r\n\t\t\t.then((res) => {\r\n\r\n        if (res.status === 401) {\r\n          this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n          this.setState({ allPharmacies: res.data });\r\n\t\t\t\t}\r\n\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n       \r\n\t\t\t});\r\n\r\n\r\n  \r\n         \r\n\t}\r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n   handleSearchForm = () => {    \r\n   \r\n    if(this.state.inputError=== \"initial\")\r\n      this.setState({inputError :\"none\"});\r\n      \r\n   \r\n    this.setState({showSearchedForm : !this.state.showSearchedForm,\r\n                    showResetSearced: false});\r\n          \r\n                    if(this.state.showSearchedForm===false){\r\n\r\n                      this.setState({\r\n    \r\n                        showResetSearced: true,\r\n                        pharmacySearchName: \"\",\r\n                        searchCountryName: \"\",\r\n                        searchStreetName: \"\",\r\n                        searchCityName: \"\",\r\n                        inputError : \"none\"     \r\n                      \r\n                      });\r\n\r\n                    }\r\n\r\n                    \r\n   }\r\n\r\n   handlePharmacySearchNameChange = (event) => {\r\n\t\tthis.setState({ pharmacySearchName: event.target.value });\r\n\t};\r\n\r\n  handleSearchCountryNameChange= (event) => {\r\n\t\tthis.setState({ searchCountryName: event.target.value });\r\n\t};\r\n\r\n  handleSearchStreetNameChange= (event) => {\r\n\t\tthis.setState({ searchStreetName: event.target.value });\r\n\t};\r\n\r\n  \r\n  handleSearchCityNameChange= (event) => {\r\n\t\tthis.setState({ searchCityName: event.target.value });\r\n\t};\r\n\r\n\r\n\r\n    SearchPharmacies = () => {\r\n\r\n\r\n    if (this.state.pharmacySearchName === \"\" && this.state.searchCityName === \"\" \r\n          &&  this.state.searchCountryName=== \"\" &&  this.state.searchStreetName=== \"\" ) {\r\n          this.setState({ inputError : \"initial\" });\r\n             return false;\r\n    } \r\n  \r\n    this.setState({ inputError : \"none\" });\r\n  \r\n      const searchDTO = {\r\n  \r\n        name : this.state.pharmacySearchName,\r\n        street : this.state.searchStreetName,\r\n        city: this.state.searchCityName,\r\n        country : this.state.searchCountryName,\r\n  \r\n  \r\n       };\r\n\r\n      \r\n\r\n      Axios.post(API_URL + \"/pharmacy/searchPharmacies\", searchDTO)\r\n  \r\n      .then((res) => {\r\n        this.setState({\r\n          allPharmacies: res.data,\r\n          showResetSearced : true,\r\n          showSearchedForm : false,      \r\n        \r\n        });\r\n       \r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        \r\n      });\r\n  \r\n      \r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    resetSearch = () => {\r\n\r\n   \r\n    this.setState({\r\n    \r\n     showResetSearced : false,\r\n     showSearchedForm : false, \r\n     pharmacySearchName: \"\",\r\n     searchCountryName: \"\",\r\n     searchStreetName: \"\",\r\n     searchCityName: \"\",\r\n     inputError : \"none\"     \r\n   \r\n   });\r\n\r\n          \r\n    Axios.get(API_URL + \"/pharmacy/allPharmacies\")\r\n\r\n    .then((res) => {\r\n      this.setState({ allPharmacies\r\n        : res.data });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n\r\n\t\t\r\n\t};\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n    handleClickOnSelectedPharmacy = (pharmacyId) => {\r\n        \r\n        this.props.history.push('/dermatologistFreeAppointment/' + pharmacyId)\r\n\r\n    };\r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n      <div id=\"allPharmacies\">\r\n\r\n            \r\n           \r\n           \r\n            <div style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }} width=\"100%\">\r\n\r\n            <div className=\"inline\" >\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg mr-3\" onClick={this.handleSearchForm}>\r\n               \r\n                {this.state.showSearchedForm ? \"Close search\" : \"Open search\"}\r\n                                \r\n            </button>\r\n\r\n            <button hidden={!this.state.showResetSearced} type=\"button\" class=\"btn btn-outline-primary btn-lg mr-3\" onClick={this.resetSearch}>\r\n               \r\n               Reset search\r\n                               \r\n           </button>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <form hidden={!this.state.showSearchedForm} className=\"form-inline\" width=\"100%\" id=\"searchForm\">\r\n\t\t\t\t\t\t\r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Pharmacy name\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handlePharmacySearchNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.pharmacySearchName}\r\n\t\t\t\t\t\t\t/>             \r\n              \r\n             \r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Street\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchStreetNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchStreetName}\r\n\t\t\t\t\t\t\t/>\r\n\r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"City\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchCityNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchCityName}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t  \t\r\n\r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Country\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this. handleSearchCountryNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchCountryName}\r\n\t\t\t\t\t\t\t/>\r\n              \r\n              \r\n\t\t\t\t\t\t\t<button\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonClick={this.SearchPharmacies}\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-lg \"\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n                \r\n\t\t\t\t\t\t\t>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t</button>\r\n             \r\n\r\n\t\t\t\t\t</form>\r\n\r\n          <div className=\"text-danger\" style={{ display: this.state.inputError, fontSize: \"17px\"}}>\r\n\t\t\t\t\t\t\t\t\t\tEnter something in field!\r\n\t\t\t\t\t</div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n        <div className=\"container\">\r\n                    \r\n                    <p  style={{ marginTop: \"3rem\" }} className=\"text-uppercase\" >Click on pharmacies where you want to shedule examination!</p>\r\n                    <table className=\"table \" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n                        \r\n                        <tbody>\r\n                            {\r\n                                this.state.allPharmacies.map((pharmacy) => (\r\n                                    <tr \r\n                                        key={pharmacy.Id} \r\n                                        id={pharmacy.Id} \r\n                                        style={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t\t    onClick={() => this.handleClickOnSelectedPharmacy(pharmacy.Id)}\r\n                                    \r\n                                    \r\n                                    >\r\n                                       \r\n\r\n                                      <td width=\"100px\">  \r\n                                       \r\n                                        <img src={PharmacyLogoPicture} width=\"70px\"></img>                                 \r\n                                     \r\n                                      </td>\r\n\r\n                                      <td>\r\n                                        \r\n                                        <div>  \r\n                                        <b>Name: </b>{pharmacy.EntityDTO.name}\r\n                                        </div>  \r\n\r\n                                        <div>  \r\n                                        <b>Location: </b> {pharmacy.EntityDTO.address.street}, {\" \"} {pharmacy.EntityDTO.address.city},{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t                                      {pharmacy.EntityDTO.address.country}\r\n                                        </div> \r\n\r\n                                        <div>  \r\n                                        <b>Description: </b>{pharmacy.EntityDTO.description}\r\n                                        </div>\r\n\r\n                                      </td>\r\n\r\n\r\n                                    </tr>\r\n                                )) }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default HomePageForDermatologistAppointments;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\PharmaciesAppointmentStartPage.js",["283","284","285","286","287","288"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport FoundPharmaciesForDateRange from \"../Components/Pharmacies/FoundPharmaciesForDateRange\"\r\nimport FoundPharmacistForPharmacyForDateRange from \"../Components/Pharmacies/FoundPharmacistForPharmacyForDateRange\"\r\nimport ReservedConsultationModal from \"../Components/Modal/ReservedConsultationModal\"\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass PharmaciesAppointmentStartPage extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        consultationDate: new Date(),\r\n\t\tselectedDate: new Date(),\r\n\t\thours: new Date().getHours(),\r\n\t\tminutes: new Date().getMinutes(),\r\n        pharmacies: [],\r\n\t\thiddenPharmacies: true,\r\n\t\tpharmacists : [],\r\n\t\thiddenPharmacists: true,\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n\t\tisPharmaciesEmpty : false,\r\n\t\tshowReservedConsultationModal: false,\r\n\t\terrorMessageForReservation : \"\",\r\n\t\thideSuccessfulModalText : true,\r\n\t\thideSuccessfulModalButton: true,\r\n\t\tmodalTitle: \"\",\r\n\t\tselectedPharmacyId : \"\"\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n  \r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n    handleDateChange = (date) => {\r\n\t\tthis.setState({ selectedDate: date });\r\n\t};\r\n\r\n\thandleMinutesChange = (event) => {\r\n\t\tif (event.target.value < 0) this.setState({ minutes: 0 });\r\n        else if (event.target.value > 59) this.setState({ minutes: 59 });\r\n\t\telse this.setState({ minutes: event.target.value });\r\n\t};\r\n\r\n\thandleHoursChange = (event) => {\r\n        if (event.target.value < 0) this.setState({ hours: 0 });\r\n\t\telse if (event.target.value > 23) this.setState({ hours: 23 });\r\n\t\telse this.setState({ hours: event.target.value });\r\n\t};\r\n    \r\n    \r\n    CheckAvailabilityAppointment = () => {\r\n        \r\n\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t});\r\n\r\n\t\tlet acceptableDate = new Date().getTime() + 3600;\r\n\t\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime();\r\n\r\n\t\t\r\n\t    \r\n             console.log(\"sok\");\r\n\t\t\tAxios.get( API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/\" + consultationDateSelected  , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() }},\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 200) {\r\n\t\t\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\t\t\tif(this.state.pharmacies.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: false, isPharmaciesEmpty: false });\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmaciesEmpty: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t if(res.status === 401){\r\n\t\t\t\t\t\t this.props.history.push(\"/login\");\r\n                        this.setState({ hiddenUnsuccessfulAlert: false, \r\n                            UnsuccessfulHeader: \"Internal server error\", \r\n                            UnsuccessfulMessage: res.data });\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    this.setState({ hiddenUnsuccessfulAlert: false, \r\n                        UnsuccessfulHeader: \"Error\", \r\n                        UnsuccessfulMessage: \"Some error\" });\r\n                    \r\n\t\t\t\t});\r\n\t\t\r\n\t};\r\n\r\n\r\n   \r\n\r\n\tshowPharmacistForPharmacy = (pharmacy) => {\r\n\t\tthis.setState({\r\n\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\tselectedPharmacyId: pharmacy.Id,\r\n\t\t});\r\n\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime(); \r\n\r\n\t\t\tconsole.log(\"idemooo\")\r\n\t\tAxios.get(\r\n\t\t\tAPI_URL +\r\n\t\t\t\t\"/users/freePharmacistsForSelectedPharmacyInDataRange/\" + pharmacy.Id + \"/\"+ consultationDateSelected,\r\n\t\t\t{ validateStatus: () => true, headers: { Authorization: GetAuthorisation() } }\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\tthis.props.history.push(\"/login\");\r\n\r\n\t\t\t\t} else if (res.status === 200) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\t\tthis.setState({ pharmacists: res.data });\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif(this.state.pharmacists.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: true, \r\n\t\t\t\t\t\t\t\tisPharmaciesEmpty: false,\r\n\t\t\t\t\t\t\t\t hiddenPharmacists: false,\r\n\t\t\t\t\t\t\t\t isPharmacistsEmpty: false });\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmacistsEmpty: true,hiddenPharmacists: true, hiddenPharmacies: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\tUnsuccessfulMessage: \"Some error\" });\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n\r\n\t\r\n\thandleClosePharmacistPage = () => {\r\n\t\tthis.setState({ hiddenPharmacists: true, hiddenPharmacies: false});\r\n\t};\r\n\r\n\r\n\thandleClosePharmaciesPage = () => {\r\n\t\tthis.setState({ hiddenPharmacists: true, hiddenPharmacies: true});\r\n\t};\r\n\r\n\r\n\r\n\treserveAppointmentForPharmacist = (pharmacist) => {\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t\terrorMessageForReservation: \"\"\r\n\t\t});\r\n\r\n\t\tconsole.log(this.state.selectedDate);\r\n\r\n\r\n\t\tlet reservationDTO = {\r\n\t\t\tpharmacistId: pharmacist.Id,\r\n\t\t\tstartDate: this.state.consultationDate,\r\n\t\t};\r\n\r\n\t\tAxios.post(\r\n\t\t\tAPI_URL + \"/appointment/reserveConsulationBySelectedPharmacist\", reservationDTO ,\r\n\t\t\t{ validateStatus: () => true, headers: { Authorization: GetAuthorisation() } }\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\tthis.props.history.push(\"/login\");\r\n\t\t\t\r\n\t\t\t\t} else if (res.status === 500) {\r\n\t\t\t\t\tthis.setState({ errorMessageForReservation : res.data,\r\n\t\t\t\t\t\t showReservedConsultationModal: true,\r\n\t\t\t\t\t\t  modalTitle : \"Error\" });\r\n\t\t\t\t } else if (res.status === 400) {\r\n\t\t\t\t\tthis.setState({ errorMessageForReservation : res.data, \r\n\t\t\t\t\t\tshowReservedConsultationModal: true,\r\n\t\t\t\t\t\tmodalTitle : \"Bad request\"});\r\n\t\t\t\t } else if (res.status === 201 ){\r\n\t\t\t\t\t\tconsole.log(\"uspesno zakao termin\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState({ showReservedConsultationModal: true,\r\n\t\t\t\t\t\t\t\t\t errorMessageForReservation : \"\",\r\n\t\t\t\t\t\t\t\t\t hideSuccessfulModalText : false,\r\n\t\t\t\t\t\t\t\t\t hideSuccessfulModalButton: false,\r\n\t\t\t\t\t\t\t\t\t modalTitle : \"Successful reservation\"\r\n\t\t\t\t\t\t\t  });\r\n\t\t\t\t  }\t\r\n\t\t\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ errorMessageForReservation : \"Some error happened\", modalTitle : \"Error\" });\r\n\t\t\t});\r\n\r\n\r\n\r\n\r\n\r\n\t};\r\n\r\n\tcloseReservedConsultationModal = () => {\r\n\t\tthis.setState({ showReservedConsultationModal: false,\r\n\t\t\t\t\t\t errorMessageForReservation : \"\",\r\n\t\t\t\t\t\t hideSuccessfulModalText : true,\r\n\t\t\t\t\t\t hideSuccessfulModalButton: true,\r\n\t\t\t\t\t\t modalTitle : \"\"\r\n\t\t\t\t  });\r\n\t\tthis.props.history.push(\"/\");\r\n\t};\r\n\r\n\tcloseModal= () => {\r\n\t\tthis.setState({ showReservedConsultationModal: false,\r\n\t\t\t\t\t errorMessageForReservation : \"\",\r\n\t\t\t\t\t hideSuccessfulModalText : true,\r\n\t\t\t\t\t hideSuccessfulModalButton: true,\r\n\t\t\t\t\t modalTitle : \"\"\r\n\t\t\t });\r\n\t\t\r\n\t};\r\n\t\r\n\r\n\r\n\thandleSortByPriceAscending = () => {\r\n        \r\n\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t});\r\n\r\n\t\t\r\n\t\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime();\r\n\r\n\t\t\r\n\t    \r\n             console.log(\"sok\");\r\n\t\t\tAxios.get( API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/SortByPriceAscending/\" + consultationDateSelected  , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() }},\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 200) {\r\n\t\t\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\t\t\tif(this.state.pharmacies.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: false, isPharmaciesEmpty: false });\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmaciesEmpty: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t if(res.status === 401){\r\n\t\t\t\t\t\t this.props.history.push(\"/login\");\r\n                        \r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    this.setState({ hiddenUnsuccessfulAlert: false, \r\n                        UnsuccessfulHeader: \"Error\", \r\n                        UnsuccessfulMessage: \"Some error\" });\r\n                    \r\n\t\t\t\t});\r\n\t\t\r\n\t};\r\n\r\n\r\n\r\n\thandleSortByPriceDescending = () => {\r\n        \r\n\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t});\r\n\r\n\t\t\r\n\t\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime();\r\n\r\n\t\t\r\n\t    \r\n             console.log(\"sok\");\r\n\t\t\tAxios.get( API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/SortByPriceDescending/\" + consultationDateSelected  , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() }},\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 200) {\r\n\t\t\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\t\t\tif(this.state.pharmacies.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: false, isPharmaciesEmpty: false });\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmaciesEmpty: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t if(res.status === 401){\r\n\t\t\t\t\t\t this.props.history.push(\"/login\");\r\n                        \r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    this.setState({ hiddenUnsuccessfulAlert: false, \r\n                        UnsuccessfulHeader: \"Error\", \r\n                        UnsuccessfulMessage: \"Some error\" });\r\n                    \r\n\t\t\t\t});\r\n\t\t\r\n\t};\r\n\r\n\r\n\r\n\thandleSortByPharmacyGradeAscending = () => {\r\n        \r\n\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t});\r\n\r\n\t\t\r\n\t\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime();\r\n\r\n\t\t\r\n\t    \r\n             console.log(\"sok\");\r\n\t\t\tAxios.get( API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/SortByPharmacyGradeAscending/\" + consultationDateSelected  , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() }},\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 200) {\r\n\t\t\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\t\t\tif(this.state.pharmacies.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: false, isPharmaciesEmpty: false });\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmaciesEmpty: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t if(res.status === 401){\r\n\t\t\t\t\t\t this.props.history.push(\"/login\");\r\n                        \r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    this.setState({ hiddenUnsuccessfulAlert: false, \r\n                        UnsuccessfulHeader: \"Error\", \r\n                        UnsuccessfulMessage: \"Some error\" });\r\n                    \r\n\t\t\t\t});\r\n\t\t\r\n\t};\r\n\r\n\r\n\thandleSortByPharmacyGradeDescending = () => {\r\n        \r\n\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t});\r\n\r\n\t\t\r\n\t\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime();\r\n\r\n\t\t\r\n\t    \r\n             console.log(\"sok\");\r\n\t\t\tAxios.get( API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/SortByPharmacyGradeDescending/\" + consultationDateSelected  , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() }},\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 200) {\r\n\t\t\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\t\t\tif(this.state.pharmacies.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: false, isPharmaciesEmpty: false });\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmaciesEmpty: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t if(res.status === 401){\r\n\t\t\t\t\t\t this.props.history.push(\"/login\");\r\n                        \r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    this.setState({ hiddenUnsuccessfulAlert: false, \r\n                        UnsuccessfulHeader: \"Error\", \r\n                        UnsuccessfulMessage: \"Some error\" });\r\n                    \r\n\t\t\t\t});\r\n\t\t\r\n\t};\r\n\r\n\r\n\r\n\r\n\thandleSortByPharmacistGradeAscending = () => {\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\t\t});\r\n\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime(); \r\n\r\n\t\t\tconsole.log(\"idemooo\")\r\n\t\tAxios.get(\r\n\t\t\tAPI_URL +\r\n\t\t\t\t\"/users/freePharmacistsForSelectedPharmacyInDataRange/sortByGradeAscending/\" + this.state.selectedPharmacyId + \"/\"+ consultationDateSelected,\r\n\t\t\t{ validateStatus: () => true, headers: { Authorization: GetAuthorisation() } }\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\tthis.props.history.push(\"/login\");\r\n\r\n\t\t\t\t} else if (res.status === 200) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\t\tthis.setState({ pharmacists: res.data });\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif(this.state.pharmacists.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: true, \r\n\t\t\t\t\t\t\t\tisPharmaciesEmpty: false,\r\n\t\t\t\t\t\t\t\t hiddenPharmacists: false,\r\n\t\t\t\t\t\t\t\t isPharmacistsEmpty: false });\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmacistsEmpty: true,hiddenPharmacists: true, hiddenPharmacies: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\tUnsuccessfulMessage: \"Some error\" });\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n\thandleSortByPharmacistGradeDescending = () => {\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\t\t});\r\n\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime(); \r\n\r\n\t\t\tconsole.log(\"idemooo\")\r\n\t\tAxios.get(\r\n\t\t\tAPI_URL +\r\n\t\t\t\t\"/users/freePharmacistsForSelectedPharmacyInDataRange/sortByGradeDescending/\" + this.state.selectedPharmacyId + \"/\"+ consultationDateSelected,\r\n\t\t\t{ validateStatus: () => true, headers: { Authorization: GetAuthorisation() } }\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\tthis.props.history.push(\"/login\");\r\n\r\n\t\t\t\t} else if (res.status === 200) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\t\tthis.setState({ pharmacists: res.data });\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif(this.state.pharmacists.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: true, \r\n\t\t\t\t\t\t\t\tisPharmaciesEmpty: false,\r\n\t\t\t\t\t\t\t\t hiddenPharmacists: false,\r\n\t\t\t\t\t\t\t\t isPharmacistsEmpty: false });\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmacistsEmpty: true,hiddenPharmacists: true, hiddenPharmacies: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\tUnsuccessfulMessage: \"Some error\" });\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n         <Header/>\r\n      \r\n         <div className=\"container\" hidden={!this.state.hiddenPharmacies || !this.state.hiddenPharmacists} >\r\n\r\n\r\n         <UnsuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t/>\r\n       \r\n\r\n\r\n         <h1  className=\"text-center  mt-3  \" >Please select the desired date for consultations with a pharmacist!</h1>\r\n         \r\n\t\t <h5 className=\" text-center  mt-3  text-danger\" hidden={!this.state.isPharmaciesEmpty}>\r\n\t\t\t\t\t\tWe couldn't find pharmacies with free pharmacists at desired time. Please change date and time.\r\n\t\t</h5>\r\n\r\n         <div className=\"control-group\" style={{ marginTop: \"5em\" }}>\r\n\t\t\t\t\t\t<div className=\"form-row justify-content-center\">\r\n                            <div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n                                    <b>Select date:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tminDate={new Date()}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => this.handleDateChange(date)}\r\n\t\t\t\t\t\t\t\t\tselected={this.state.selectedDate}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n\t\t\t\t\t\t\t\t\t<b>Hours:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input\r\n                                    type=\"number\"\r\n\t\t\t\t\t\t\t\t\tmin=\"00\"\r\n\t\t\t\t\t\t\t\t\tmax=\"23\"\r\n                                    className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleHoursChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.hours}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"12em\" }}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n                                    <b>Minutes:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tmin=\"00\"\r\n                                    max=\"59\"\r\n                                    type=\"number\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleMinutesChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.minutes}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"12em\" }}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col text-center\">\r\n\t\t\t\t\t\t            <button type=\"button\" class=\"btn btn-outline-primary btn-lg \"\r\n                                        onClick={() => this.CheckAvailabilityAppointment()}\r\n                                        style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n                                        >\r\n                                        <b>Check appointment </b>\r\n\r\n                                     </button>\r\n\r\n                                </div>\r\n                             </div>\r\n                        </div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\r\n          \r\n        </div>\r\n\r\n\r\n\t\t<FoundPharmaciesForDateRange\r\n\r\n\t\t\t\thiddenPharmacies= {this.state.hiddenPharmacies}\r\n\t\t\t\tpharmacies={this.state.pharmacies}\r\n\t\t\t\tshowPharmacistForPharmacy={this.showPharmacistForPharmacy}\r\n\t\t\t\tbackToSelectedDateRange= {this.handleClosePharmaciesPage}\r\n\r\n\t\t\t\thandleSortByPriceAscending= {this.handleSortByPriceAscending}\r\n\t\t\t\thandleSortByPriceDescending= {this.handleSortByPriceDescending}\r\n\t\t\t\thandleSortByPharmacyGradeAscending= {this.handleSortByPharmacyGradeAscending}\r\n\t\t\t\thandleSortByPharmacyGradeDescending= {this.handleSortByPharmacyGradeDescending}\r\n\r\n\t\t/>\r\n\r\n\t   <FoundPharmacistForPharmacyForDateRange\r\n\r\n\t\thiddenPharmacist= {this.state.hiddenPharmacists}\r\n\t\tpharmacists= {this.state.pharmacists}\r\n\t\treserveAppointmentForPharmacist={this.reserveAppointmentForPharmacist}\t\r\n\t\tbackToPharmacies= {this.handleClosePharmacistPage}\r\n\t\thandleSortByPharmacistGradeAscending= {this.handleSortByPharmacistGradeAscending}\r\n\t\thandleSortByPharmacistGradeDescending= {this.handleSortByPharmacistGradeDescending}\t\r\n\r\n\t   />\r\n\r\n\r\n\t\t<ReservedConsultationModal\t\r\n\t\t\t\tshow= {this.state.showReservedConsultationModal}\r\n\t\t\t\tcloseModal= {this.closeReservedConsultationModal}\r\n\t\t\t\tonCloseModal={this.closeModal}\r\n\t\t\t\terrorMessageForReservation= {this.state.errorMessageForReservation}\r\n\t\t\t\thideSuccessfulModalText = {this.state.hideSuccessfulModalText}\r\n\t\t\t\thideSuccessfulModalButton= {this.state.hideSuccessfulModalButton}\r\n\t\t\t\tmodalTitle= {this.state.modalTitle}\r\n\r\n\t\t/>\t\r\n\r\n\t\t\r\n\r\n\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PharmaciesAppointmentStartPage;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\FutureDermatologistAppointmentsForPatient.js",["289","290","291","292"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass FutureDermatologistAppointmentsForPatient extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        pharmacyId: \"\",\r\n        appointments : [],\r\n        hiddenSuccessfulAlert: true,\r\n        successfulHeader: \"\",\r\n        successfulMessage: \"\",\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n\r\n\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n    \r\n    Axios.get(API_URL + \"/appointment/dermatologist/findAllFuturePatientsAppointmets\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\r\n\r\n    handleCancelAppointment = (appointmentId) => {\r\n  \r\n    let appointmentIdObject = { id: appointmentId};\r\n\r\n    Axios.post(API_URL + \"/appointment/dermatologist/cancelAppointment\",appointmentIdObject , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n      .then((res) => {\r\n        if (res.status === 400) {\r\n          this.setState({ hiddenUnsuccessfulAlert: false,\r\n            UnsuccessfulHeader: \"Bad request\", \r\n            UnsuccessfulMessage: res.data });\r\n\r\n        } else if (res.status === 500) {\r\n\r\n          this.setState({ hiddenUnsuccessfulAlert: false, \r\n            UnsuccessfulHeader: \"Internal server error\", \r\n            UnsuccessfulMessage: \"Server error.\" });\r\n\r\n        } \r\n        else if (res.status === 404) {\r\n\r\n            this.setState({ hiddenUnsuccessfulAlert: false, \r\n              UnsuccessfulHeader: \"Internal server error\", \r\n              UnsuccessfulMessage: res.data });\r\n  \r\n        } else if (res.status === 200) {\r\n          console.log(\"Success\");\r\n          this.setState({\r\n            hiddenSuccessfulAlert: false,\r\n            successfulHeader: \"Success\",\r\n            successfulMessage: \"You have successfully canceled the desired appointment! \",\r\n            hiddenEditInfo: true,\r\n          });\r\n\r\n          this.refreshAppointments(appointmentId);\r\n\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({ hiddenUnsuccessfulAlert: false,\r\n          UnsuccessfulHeader: \"Error\", \r\n          UnsuccessfulMessage: \"Something was wrong\" });\r\n      \r\n      });\r\n\r\n\r\n\r\n  }\r\n\r\n  refreshAppointments (appointmentId) {\r\n\r\n    let newAppointmentsList= [];\r\n    for (let appointment of this.state.appointments) {\r\n      if (appointment.Id !== appointmentId) \r\n          newAppointmentsList.push(appointment)\r\n    }\r\n\r\n    this.setState({\r\n     appointments : newAppointmentsList,\r\n    });\r\n\r\n  }\r\n\r\n\r\n  \r\n  \r\n\r\n    isAvailableToCanceled =(date) => {\r\n\r\n        var appointmentDate= new Date(date);\r\n        appointmentDate.setDate(appointmentDate.getDate() -1);\r\n\r\n        if(appointmentDate <= new Date()){\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n \r\n    moveToExaminationHistory =() => {\r\n\r\n       this.props.history.push(\"/historyDermatologistAppointmentsForPatient\");\r\n    }\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n         <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\r\n         onClick={() => this.moveToExaminationHistory()}\r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n          >\r\n         Examination history\r\n         </button>\r\n\r\n         <h1 hidden={this.state.appointments.length === 0} className=\"text-center  mt-3  \" >Your future appointments!</h1>\r\n         <h1 hidden={this.state.appointments.length !== 0} className=\"text-center  mt-3 text-danger\"  >You don't have future appointments!</h1>\r\n\r\n\r\n\r\n         <SuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\theader={this.state.successfulHeader}\r\n\t\t\t\tmessage={this.state.successfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n\t\t/>\r\n\t\t<UnsuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t/>\r\n\r\n        \r\n    \r\n        <div className=\"container\">\r\n                    \r\n          <table className=\"table table-hover\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.appointments.map((appointment) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tkey={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\r\n                   <td width=\"100px\">  \r\n                     <img  src={DermatologistAppointmentPicture} style={{ width: \"85px\", marginTop: \"15px\" }}></img>                                 \r\n                                    \r\n                    </td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Start time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.endDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price:</b>{\" \"}\r\n                                         {appointment.EntityDTO.price }\r\n                                             <b>  din</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                  \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Dermatologist: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{appointment.EntityDTO.employee.EntityDTO.name + \" \" + appointment.EntityDTO.employee.EntityDTO.surname}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                         <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Dermatologist grade: </b> {appointment.EntityDTO.employee.EntityDTO.grade} {\" \"} \r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                      \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                                    <td>\r\n                                    <button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n                                            className=\"btn btn-outline-danger\"\r\n\t\t\t\t\t\t\t\t\t\t\thidden={this.isAvailableToCanceled(new Date(appointment.EntityDTO.startDateTime))}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleCancelAppointment(appointment.Id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n                                    </td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n                </div>\r\n\r\n\r\n\r\n          \r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FutureDermatologistAppointmentsForPatient;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\DermatologistFreeAppointment.js",["293","294"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport { withRouter } from \"react-router\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport FreeDermatologistAppointmentPicture from \"../Images/appointment.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass DermatologistFreeAppointment extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        pharmacyId: \"\",\r\n        appointments : [],\r\n        hiddenSuccessfulAlert: true,\r\n        successfulHeader: \"\",\r\n        successfulMessage: \"\",\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n\r\n\r\n\r\n    };\r\n\r\n  \r\n  \r\n\r\n  setPharmacyIdFromUrl = (id) => {\r\n        \r\n    this.setState({\r\n    \r\n        pharmacyId : id\r\n      });\r\n\r\n\r\n    };\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n\r\n\r\n    const pathParams= window.location.pathname;\r\n    const paramsList= pathParams.split(\"/\");\r\n    const id = paramsList[2];\r\n\r\n    console.log(id);\r\n\r\n    this.setPharmacyIdFromUrl(id);\r\n      \r\n    Axios.get(API_URL + \"/appointment/dermatologist/allAppointmentsForchosenPharmacy/\" + id, {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n          this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\r\n\r\n  scheduleSelectedAppointment = (appointmentId) => {\r\n  \r\n    let appointmentIdObject = { id: appointmentId};\r\n\r\n    Axios.post(API_URL + \"/appointment/dermatologist/reserveFreeDermatologistAppointment\",appointmentIdObject , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n      .then((res) => {\r\n        if (res.status === 400) {\r\n          this.setState({ hiddenUnsuccessfulAlert: false,\r\n            UnsuccessfulHeader: \"Bad request\", \r\n            UnsuccessfulMessage: res.data });\r\n\r\n        } else if (res.status === 500) {\r\n\r\n          this.setState({ hiddenUnsuccessfulAlert: false, \r\n            UnsuccessfulHeader: \"Internal server error\", \r\n            UnsuccessfulMessage: \"Server error.\" });\r\n\r\n        } else if (res.status === 200) {\r\n          console.log(\"Success\");\r\n          this.setState({\r\n            hiddenSuccessfulAlert: false,\r\n            successfulHeader: \"Success\",\r\n            successfulMessage: \"You have successfully scheduled the desired appointment! \",\r\n            hiddenEditInfo: true,\r\n          });\r\n\r\n          this.refreshAppointments(appointmentId);\r\n\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({ hiddenUnsuccessfulAlert: false,\r\n          UnsuccessfulHeader: \"Error\", \r\n          UnsuccessfulMessage: \"Something was wrong\" });\r\n      \r\n      });\r\n\r\n\r\n\r\n  }\r\n\r\n  refreshAppointments (appointmentId) {\r\n\r\n    let newAppointmentsList= [];\r\n    for (let appointment of this.state.appointments) {\r\n      if (appointment.Id !== appointmentId) \r\n          newAppointmentsList.push(appointment)\r\n    }\r\n\r\n    this.setState({\r\n     appointments : newAppointmentsList,\r\n    });\r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n  handleSortByPriceAscending = () => {\r\n    Axios.get(API_URL + \"/appointment/dermatologist/sortByPriceAscending/\" + this.state.pharmacyId, {\r\n      validateStatus: () => true,\t\r\n      headers: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n            this.setState({ appointments: res.data});\r\n            console.log(res.data);\r\n        \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n\r\n\r\n  handleSortByPriceDescending = () => {\r\n\r\n    Axios.get(API_URL + \"/appointment/dermatologist/sortByPriceDescending/\" + this.state.pharmacyId, {\r\n      validateStatus: () => true,\t\r\n      headers: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n            this.setState({ appointments: res.data});\r\n            console.log(res.data);\r\n        \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n  };\r\n\r\n\r\n  handleSortByDermatologistGradeAscending = () =>{\r\n\r\n    Axios.get(API_URL + \"/appointment/dermatologist/sortByDermatologistGradeAscending/\" + this.state.pharmacyId, {\r\n      validateStatus: () => true,\t\r\n      headers: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n            this.setState({ appointments: res.data});\r\n            console.log(res.data);\r\n        \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n  };\r\n\r\n\r\n  handleSortByDermatologistGradeDescending = () => {\r\n\r\n    Axios.get(API_URL + \"/appointment/dermatologist/sortByDermatologistGradeDescending/\" + this.state.pharmacyId, {\r\n      validateStatus: () => true,\t\r\n      headers: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n            this.setState({ appointments: res.data});\r\n            console.log(res.data);\r\n        \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n  };\r\n\r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n         <h1 hidden={this.state.appointments.length === 0} className=\"text-center  mt-3  \" >Please select appointment from the list!</h1>\r\n         <h1 hidden={this.state.appointments.length !== 0} className=\"text-center  mt-3 text-danger\"  >Sorry, we don't have free dermatologist appointments for selected pharmacy!</h1>\r\n\r\n\r\n\r\n         <SuccessfulAlert\r\n\t\t\t\t\t\thidden={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\t\t\theader={this.state.successfulHeader}\r\n\t\t\t\t\t\tmessage={this.state.successfulMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<UnsuccessfulAlert\r\n\t\t\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t\t\t\t/>\r\n\r\n        \r\n\r\n          <div className=\"dropdown\">\r\n            <button className=\"btn btn-primary btn-lg dropdown-toggle\"\r\n             type=\"button\" id=\"dropdownMenu2\"\r\n              data-toggle=\"dropdown\" \r\n              aria-haspopup=\"true\" \r\n              aria-expanded=\"false\">\r\n              Sort\r\n            </button>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n              <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByPriceAscending} >Sort by price ascending</button>\r\n              <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByPriceDescending} >Sort by price descending</button>\r\n              <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByDermatologistGradeAscending} >Sort by dermatologist grade ascending</button>\r\n              <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByDermatologistGradeDescending} >Sort by dermatologist grade descending</button>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n\r\n\r\n\r\n\r\n        <div className=\"container\">\r\n                    \r\n          <table className=\"table table-hover\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.appointments.map((appointment) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tkey={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.scheduleSelectedAppointment(appointment.Id)}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\r\n                   <td width=\"100px\">  \r\n                     <img  src={FreeDermatologistAppointmentPicture} style={{ width: \"85px\", marginTop: \"15px\" }}></img>                                 \r\n                                    \r\n                    </td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Start time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.endDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price:</b>{\" \"}\r\n                      {appointment.EntityDTO.price }\r\n                      <b>  din</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                  \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Dermatologist: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{appointment.EntityDTO.employee.EntityDTO.name + \" \" + appointment.EntityDTO.employee.EntityDTO.surname}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                    <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Dermatologist grade: </b> {appointment.EntityDTO.employee.EntityDTO.grade} {\" \"} \r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                      \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n                </div>\r\n\r\n\r\n\r\n          \r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(DermatologistFreeAppointment);","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\HistoryDermatologistAppointmentsForPatient.js",["295","296","297","298"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\nimport CreateComplaintModal from \"../Components/CreateComplaintModal\";\r\nimport FirstGradeModal from \"../Components/Modal/FirstGradeModal\";\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass HistoryDermatologistAppointmentsForPatient extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        pharmacyId: \"\",\r\n        appointments : [],\r\n        hiddenSuccessfulAlert: true,\r\n        successfulHeader: \"\",\r\n        successfulMessage: \"\",\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n\r\n\t\tshowComplaintModal: false,\r\n\t\tStaffName: \"\",\r\n\t\tStaffSurame: \"\",\r\n\t\tcomplaint: \"\",\r\n\t\tstaffId : \"\",\r\n\t\tDate : new Date(),\r\n\t\ttext : \"\",\r\n\t\tprofession : \"\",\r\n\r\n\t\tselectedEmployee : [],\r\n\t\temployeeId : \"\",\r\n\t\temployeeGrade : 0,\r\n\t\temployeeName : \"\",\r\n\t\temployeeSurname : \"\",\r\n\t\tshowGradeModal: false,\r\n\t\tshowFirstGrade : false,\r\n\t\tshowModifyGrade : false,\r\n\t\tmaxGrade : 5\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n    \r\n    Axios.get(API_URL + \"/appointment/dermatologist/findAllHistoryPatientsAppointmets\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\r\n    moveToFutureExamination =() => {\r\n\r\n       this.props.history.push(\"/futureDermatologistAppointmentsForPatient\");\r\n    }\r\n\r\n\r\n\r\n\thandleSortByPriceAscending =() => {\r\n\r\n\t\tconsole.log(\"sortiranjeee\");\r\n\t\tvar appointmentType= \"EXAMINATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/dermatologist/findAllHistoryPatientsAppointmets/sortByPriceAscending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n        \r\n    }\r\n\r\n\r\n\thandleSortByPriceDescending =() => {\r\n\r\n\t\tvar appointmentType= \"EXAMINATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/dermatologist/findAllHistoryPatientsAppointmets/sortByPriceDescending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n        \r\n    }\r\n\r\n\thandleSortByDateAscending =() => {\r\n\r\n\r\n\t\tconsole.log(\"sortiranjeee\");\r\n\t\tvar appointmentType= \"EXAMINATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/dermatologist/findAllHistoryPatientsAppointmets/sortByDateAscending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n        \r\n    }\r\n\r\n\r\n\thandleSortByDateDescending =() => {\r\n\r\n\t\t\r\n\t\tvar appointmentType= \"EXAMINATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/dermatologist/findAllHistoryPatientsAppointmets/sortByDateDescending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n        \r\n    }\r\n\r\n\r\n\thandleSortByDurationAppointmentAscending =() => {\r\n\r\n\t\tvar appointmentType= \"EXAMINATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/dermatologist/findAllHistoryPatientsAppointmets/sortByDurationAscending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n        \r\n    }\r\n\r\n\t\r\n\thandleSortByDurationAppointmentDescending =() => {\r\n\r\n\t\tvar appointmentType= \"EXAMINATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/dermatologist/findAllHistoryPatientsAppointmets/sortByDurationDescending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n        \r\n    }\r\n\r\n\thandleComplaintClick = (staff) => {\r\n\t\tconsole.log(staff);\r\n\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tselectedStaffId: staff.Id,\r\n\t\t\t\t\t\tshowComplaintModal: true,\r\n\t\t\t\t\t\tStaffName: staff.EntityDTO.name,\r\n\t\t\t\t\t\tStaffSurame: staff.EntityDTO.surname,\r\n\t\t\t\t\t\tprofession : staff.EntityDTO.profession,\r\n\t\t\t\t\t\tgrade: 0,\r\n\t\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t};\r\n\r\n\thandleComaplaint = () => {\r\n\t\tlet ComplaintStaffDTO = {\r\n\t\t\tstaffId: this.state.selectedStaffId,\r\n\t\t\tdate: new Date(),\r\n\t\t\ttext: this.state.text,\r\n\t\t\tstaffName: this.state.StaffName,\r\n\t\t\tstaffSurname: this.state.StaffSurame,\r\n\t\t\tprofession: \"\",\r\n\t\t\treply: \"\",\r\n\t\t\temail: \"\",\r\n\t\t};\r\n\r\n\t\tAxios.post(\"http://localhost:8080/complaint\", ComplaintStaffDTO, { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t.then((resp) => {\r\n\t\t\t\tif (resp.status === 500) {\r\n\t\t\t\t\tthis.setState({ hiddenFailAlert: false, failHeader: \"Internal server error\", failMessage: \"Server error.\" });\r\n\t\t\t\t} else if (resp.status === 201) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({ showComplaintModal: false });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\thandleComplaintChange = (event) => {\r\n\t\tthis.setState({ text: event.target.value });\r\n\t};\r\n\r\n\t\r\n\thandleComplaintModalClose = () => {\r\n\t\tthis.setState({ showComplaintModal: false });\r\n\t};\r\n\r\n\thandleStuffIdChange = (stuffID) => {\r\n\t\tthis.setState({ staffId: stuffID });\r\n\t};\r\n\r\n\r\n\thandleGetGradeClick = (employee) => {\r\n\t\tconsole.log(employee);\r\n\r\n\r\n\r\n\r\n\t\tAxios.get(API_URL + \"/grade/employee/\" + employee.Id , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else if(res.status === 404){\r\n\r\n\r\n\t\t\t\t\tconsole.log(\"Nema ocenu\");\r\n\r\n\t\t\t\t\tlet entityDTO = {\r\n\t\t\t\t\t\tshowGradeModal : true,\r\n\t\t\t\t\t\t\tshowFirstGrade : true,\t\r\n\t\t\t\t\t\temployeeId : employee.EntityDTO.Id,\r\n\t\t\t\t\t\temployeeGrade : employee.EntityDTO.grade,\r\n\t\t\t\t\t\temployeeName : employee.EntityDTO.name,\r\n\t\t\t\t\t\temployeeSurname : employee.EntityDTO.surname\r\n\t\t\t\t\t};\r\n\r\n\r\n\t\t\t\t\tthis.setState({ showGradeModal : true,\r\n\t\t\t\t\t\t\tshowFirstGrade : true,\t\r\n\t\t\t\t\t\temployeeId : employee.Id,\r\n\t\t\t\t\t\temployeeGrade : employee.EntityDTO.grade,\r\n\t\t\t\t\t\temployeeName : employee.EntityDTO.name,\r\n\t\t\t\t\t\temployeeSurname : employee.EntityDTO.surname});\r\n\r\n\t\t\t\t\t\tconsole.log(employee.Id);\r\n\t\t\t\t\t\tconsole.log(entityDTO);\r\n\r\n\t\t\t\t}else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({ showGradeModal : true,\r\n\t\t\t\t\t\tshowModifyGrade : true,\t\r\n\t\t\t\t\t\temployeeId : res.data.employee.id,\r\n\t\t\t\t\t\temployeeGrade : res.data.grade,\r\n\t\t\t\t\t\temployeeName : res.data.employee.name,\r\n\t\t\t\t\t\temployeeSurname : res.data.employee.surname});\r\n\r\n\t\t\t\t\t\tconsole.log(res.data.grade);\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t};\r\n\r\n\tsetFirstGrade = (grade) => {\r\n\t\t\r\n\t\tconsole.log(\"sou\")\r\n\r\n\t\tlet entityDTO = {\r\n\t\t\temployeeId: this.state.employeeId ,\r\n\t\t\tgrade: grade,\r\n\t\t};\r\n\r\n\t\tconsole.log(entityDTO);\r\n\r\n\t\tAxios.post(API_URL + \"/grade/employee/createGrade\",entityDTO , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else if(res.status === 404){\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Bad request\", UnsuccessfulMessage : res.data,\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\tshowModifyGrade : false});\r\n\r\n\t\t\t\t}else if(res.status === 500){\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Error\", UnsuccessfulMessage : \"internal server error! \",\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t showModifyGrade : false  });\r\n\r\n\t\t\t\t}else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({ hiddenSuccessfulAlert:  false, successfulHeader:   \"Successful\", successfulMessage:  \"You successful created grade for employee! \",\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t showModifyGrade : false   });\r\n\r\n\t\t\t\t\tthis.componentDidMount();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t};\r\n\r\n\tsetModifyGrade = (grade) => {\r\n\t\t\r\n\t\tconsole.log(\"sou\")\r\n\r\n\t\tlet entityDTO = {\r\n\t\t\temployeeId: this.state.employeeId ,\r\n\t\t\tgrade: grade,\r\n\t\t};\r\n\r\n\t\tconsole.log(entityDTO);\r\n\r\n\r\n\t\tAxios.post(API_URL + \"/grade/employee/updateGrade\",entityDTO , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else if(res.status === 404){\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Bad request\", UnsuccessfulMessage : res.data,\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\tshowModifyGrade : false});\r\n\r\n\t\t\t\t}else if(res.status === 500){\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Error\", UnsuccessfulMessage : \"internal server error! \",\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t showModifyGrade : false  });\r\n\r\n\t\t\t\t}else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({ hiddenSuccessfulAlert:  false, successfulHeader:   \"Successful\", successfulMessage:  \"You successful update grade for employee! \",\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t showModifyGrade : false   });\r\n\r\n\t\t\t\t\tthis.componentDidMount();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n\r\n\t};\r\n\t\r\n\tcloseFirstGradeModal = () => {\r\n\r\n\t\tthis.setState({ showFirstGrade : false,\r\n\t\t\tshowModifyGrade : false,\r\n\t\t\tshowGradeModal : false});\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n\r\n         <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\r\n         onClick={() => this.moveToFutureExamination()}\r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n         >\r\n         Future Examination\r\n        </button>\r\n\r\n\r\n\t\t<div className=\"container\" style={{  marginTop: \"2em\" }}>\r\n\r\n\t\t<div className=\"dropdown\">\r\n\t\t\t<button className=\"btn btn-primary btn-lg dropdown-toggle\"\r\n\t\t\t\ttype=\"button\" id=\"dropdownMenu2\"\r\n\t\t\t\tdata-toggle=\"dropdown\" \r\n\t\t\t\taria-haspopup=\"true\" \r\n\t\t\t\taria-expanded=\"false\">\r\n\t\t\t\tSort\r\n\t\t\t</button>\r\n\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByPriceAscending} >Sort by price ascending</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByPriceDescending} >Sort by price descending</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByDateAscending} >Sort by date ascending</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByDateDescending} >Sort by date descending</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByDurationAppointmentAscending} >Sort by duration appointment ascending</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByDurationAppointmentDescending} >Sort by duration appointment descending</button>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\t\r\n\r\n\r\n         <h1 hidden={this.state.appointments.length === 0} className=\"text-center  mt-3  \" >Your history appointments!</h1>\r\n         <h1 hidden={this.state.appointments.length !== 0} className=\"text-center  mt-3 text-danger\"  >You don't have future appointments!</h1>\r\n\r\n\r\n\r\n         <SuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\theader={this.state.successfulHeader}\r\n\t\t\t\tmessage={this.state.successfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n\t\t/>\r\n\t\t<UnsuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t/>\r\n\r\n        \r\n   \r\n        <div className=\"container\">\r\n                    \r\n          <table className=\"table table-hover\" style={{ width: \"100%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.appointments.map((appointment) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tkey={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\r\n                   <td width=\"100px\">  \r\n                     <img  src={DermatologistAppointmentPicture} style={{ width: \"85px\", marginTop: \"15px\" }}></img>                                 \r\n                                    \r\n                    </td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Start time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.endDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price:</b>{\" \"}\r\n                                         {appointment.EntityDTO.price }\r\n                                             <b>  din</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                  \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Dermatologist: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{appointment.EntityDTO.employee.EntityDTO.name + \" \" + appointment.EntityDTO.employee.EntityDTO.surname}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                         <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Dermatologist grade: </b> {appointment.EntityDTO.employee.EntityDTO.grade} {\" \"} \r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                      \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<td className=\"align-middle\">\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginLeft: \"55%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleComplaintClick(appointment.EntityDTO.employee)}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tMake complaint\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginLeft: \"55%\",marginTop: \"1em\"  }}>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleGetGradeClick(appointment.EntityDTO.employee)}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tDermatologist grade\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n                                    \r\n                                    \r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n                </div>\r\n\r\n\t\t\t\r\n\t\t\t\t\r\n\r\n          \r\n        </div>\r\n\r\n\t\t<CreateComplaintModal\r\n\t\t\t\t\tbuttonName=\"Send complaint\"\r\n\t\t\t\t\theader=\"Give complaint\"\r\n\t\t\t\t\thandleComplaintChange={this.handleComplaintChange}\r\n\t\t\t\t\tshow={this.state.showComplaintModal}\r\n\t\t\t\t\tonCloseModal={this.handleComplaintModalClose}\r\n\t\t\t\t\tgiveFeedback={this.handleComaplaint}\r\n\t\t\t\t\tname={this.state.StaffName + \" \" + this.state.StaffSurame}\r\n\t\t\t\t\tforWho=\"consultant\"\r\n\t\t\t\t\thandleClickIcon={this.handleClickIcon}\r\n\t\t\t\t\tcomplaint={this.state.complaint}\r\n\t\t\t\t/>\r\n\t\t\r\n\r\n\t\t<FirstGradeModal \r\n\r\n\t\t\t\tshow={this.state.showGradeModal}\r\n\t\t\t\tshowFirstGrade={this.state.showFirstGrade}\r\n\t\t\t\tshowModifyGrade={this.state.showModifyGrade}\r\n\t\t\t\temployeeGrade={this.state.employeeGrade}\t\t\t\t\t\t\t\r\n\t\t\t\tmaxGrade={this.state.maxGrade}\r\n\t\t\t\temployeeName={this.state.employeeName }\r\n\t\t\t\temployeeSurname={this.state.employeeSurname }\r\n\t\t\t\theader={\"Grade\"}\r\n\t\t\t\tbuttonFirstGradeName={\"Grade\"}\r\n\t\t\t\tbuttonModifyGradeName={\"Update grade\"}\t\t\t\t\t\t\t\t\r\n\t\t\t\tsetFirstGrade={this.setFirstGrade}\t\r\n\t\t\t\tsetModifyGrade={this.setModifyGrade}\r\n\t\t\t\tonCloseModal={this.closeFirstGradeModal}\t\t\t\t\t\t\r\n\r\n\t\t/>\r\n\r\n\r\n\r\n\r\n\r\n        </React.Fragment>\r\n    \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default HistoryDermatologistAppointmentsForPatient;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\FuturePharmaciesConsultationsForPatient.js",["299","300","301","302"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport PharmacistAppointmentPicture from \"../Images/pharmacist.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\nimport HistoryPharmacistConsultation from \"../Components/Consultations/HistoryPharmacistConsultation\"\r\nimport FirstGradeModal from \"../Components/Modal/FirstGradeModal\";\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass FuturePharmaciesConsultationsForPatient extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        pharmacyId: \"\",\r\n        appointments : [],\r\n        hiddenSuccessfulAlert: true,\r\n        successfulHeader: \"\",\r\n        successfulMessage: \"\",\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n        hideFutureButton : true,\r\n        hideHistoryButton : false,\r\n        historyConsultations : [],\r\n        hideFutureConsultations : false,\r\n        hideHistoryConsultations : true,\r\n\r\n\r\n\t\tselectedEmployee : [],\r\n\t\temployeeId : \"\",\r\n\t\temployeeGrade : 0,\r\n\t\temployeeName : \"\",\r\n\t\temployeeSurname : \"\",\r\n\t\tshowGradeModal: false,\r\n\t\tshowFirstGrade : false,\r\n\t\tshowModifyGrade : false,\r\n\t\tmaxGrade : 5\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n    \r\n    Axios.get(API_URL + \"/appointment/pharmacist/findAllFuturePatientsAppointmets\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\r\n    \r\n \r\n    moveToHistoryConsultation =() => {\r\n\r\n       \r\n\r\n\t\tthis.setState({ hideFutureButton : false,\r\n\t\t\thideHistoryButton : true,\r\n\t\t\thideFutureConsultations : true,\r\n\t\t\thideHistoryConsultations : false,\r\n\r\n\t\t});\r\n\r\n\r\n\r\n        Axios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data});\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n       \r\n    }\r\n\r\n\r\n    moveToFutureConsultation =() => {\r\n\r\n        this.setState({ hideFutureButton : true,\r\n                        hideHistoryButton : false,\r\n                        hideFutureConsultations : false,\r\n                        hideHistoryConsultations : true,\r\n        \r\n        });\r\n\r\n      this.componentDidMount();\r\n\r\n       \r\n    }\r\n\r\n\thandleCancelAppointment = (appointmentId) => {\r\n  \r\n\t\tlet appointmentIdObject = { id: appointmentId};\r\n\t\r\n\t\tAxios.post(API_URL + \"/appointment/pharmacist/cancelAppointment\",appointmentIdObject , {\r\n\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t})\r\n\t\t  .then((res) => {\r\n\t\t\tif (res.status === 400) {\r\n\t\t\t  this.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\tUnsuccessfulHeader: \"Bad request\", \r\n\t\t\t\tUnsuccessfulMessage: res.data });\r\n\t\r\n\t\t\t} else if (res.status === 500) {\r\n\t\r\n\t\t\t  this.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\tUnsuccessfulHeader: \"Internal server error\", \r\n\t\t\t\tUnsuccessfulMessage: \"Server error.\" });\r\n\t\r\n\t\t\t} \r\n\t\t\telse if (res.status === 404) {\r\n\t\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t  UnsuccessfulHeader: \"Internal server error\", \r\n\t\t\t\t  UnsuccessfulMessage: res.data });\r\n\t  \r\n\t\t\t} else if (res.status === 200) {\r\n\t\t\t  console.log(\"Success\");\r\n\t\t\t  this.setState({\r\n\t\t\t\thiddenSuccessfulAlert: false,\r\n\t\t\t\tsuccessfulHeader: \"Success\",\r\n\t\t\t\tsuccessfulMessage: \"You have successfully canceled the desired appointment! \",\r\n\t\t\t\thiddenEditInfo: true,\r\n\t\t\t  });\r\n\t\r\n\t\t\t  this.refreshAppointments(appointmentId);\r\n\t\r\n\t\t\t}\r\n\t\t  })\r\n\t\t  .catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t  UnsuccessfulHeader: \"Error\", \r\n\t\t\t  UnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t  \r\n\t\t  });\r\n\t\r\n\t\r\n\t\r\n\t  }\r\n\t\r\n\t  refreshAppointments (appointmentId) {\r\n\t\r\n\t\tlet newAppointmentsList= [];\r\n\t\tfor (let appointment of this.state.appointments) {\r\n\t\t  if (appointment.Id !== appointmentId) \r\n\t\t\t  newAppointmentsList.push(appointment)\r\n\t\t}\r\n\t\r\n\t\tthis.setState({\r\n\t\t appointments : newAppointmentsList,\r\n\t\t});\r\n\t\r\n\t  }\r\n\r\n\r\n\t  isAvailableToCanceled =(date) => {\r\n\r\n        var appointmentDate= new Date(date);\r\n        appointmentDate.setDate(appointmentDate.getDate() -1);\r\n\r\n        if(appointmentDate <= new Date()){\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\t\r\n\thandleSortByPriceAscending =() => {\r\n\r\n\t\tconsole.log(\"sortiranjeee\");\r\n\r\n\t\tvar appointmentType= \"CONSULTATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByPriceAscending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n        \r\n    }\r\n\r\n\r\n\thandleSortByPriceDescending =() => {\r\n\r\n\t\tvar appointmentType= \"CONSULTATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByPriceDescending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n        \r\n    }\r\n\r\n\thandleSortByDateAscending =() => {\r\n\r\n\r\n\t\tconsole.log(\"sortiranjeee\");\r\n\t\tvar appointmentType= \"CONSULTATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByDateAscending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n        \r\n    }\r\n\r\n\r\n\thandleSortByDateDescending =() => {\r\n\r\n\t\t\r\n\t\tvar appointmentType= \"CONSULTATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByDateDescending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n        \r\n    }\r\n\r\n\r\n\thandleSortByDurationAppointmentAscending =() => {\r\n\r\n\t\tvar appointmentType= \"CONSULTATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByDurationAscending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n        \r\n    }\r\n\r\n\t\r\n\thandleSortByDurationAppointmentDescending =() => {\r\n\r\n\t\tvar appointmentType= \"CONSULTATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByDurationDescending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n        \r\n    }\r\n\r\n\t\r\n\thandleGetGradeClick = (employee) => {\r\n\t\tconsole.log(employee);\r\n\r\n\r\n\r\n\r\n\t\tAxios.get(API_URL + \"/grade/employee/\" + employee.Id , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else if(res.status === 404){\r\n\r\n\r\n\t\t\t\t\tconsole.log(\"Nema ocenu\");\r\n\r\n\t\t\t\t\tlet entityDTO = {\r\n\t\t\t\t\t\tshowGradeModal : true,\r\n\t\t\t\t\t\t\tshowFirstGrade : true,\t\r\n\t\t\t\t\t\temployeeId : employee.EntityDTO.Id,\r\n\t\t\t\t\t\temployeeGrade : employee.EntityDTO.grade,\r\n\t\t\t\t\t\temployeeName : employee.EntityDTO.name,\r\n\t\t\t\t\t\temployeeSurname : employee.EntityDTO.surname\r\n\t\t\t\t\t};\r\n\r\n\r\n\t\t\t\t\tthis.setState({ showGradeModal : true,\r\n\t\t\t\t\t\t\tshowFirstGrade : true,\t\r\n\t\t\t\t\t\temployeeId : employee.Id,\r\n\t\t\t\t\t\temployeeGrade : employee.EntityDTO.grade,\r\n\t\t\t\t\t\temployeeName : employee.EntityDTO.name,\r\n\t\t\t\t\t\temployeeSurname : employee.EntityDTO.surname});\r\n\r\n\t\t\t\t\t\tconsole.log(employee.Id);\r\n\t\t\t\t\t\tconsole.log(entityDTO);\r\n\r\n\t\t\t\t}else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({ showGradeModal : true,\r\n\t\t\t\t\t\tshowModifyGrade : true,\t\r\n\t\t\t\t\t\temployeeId : res.data.employee.id,\r\n\t\t\t\t\t\temployeeGrade : res.data.grade,\r\n\t\t\t\t\t\temployeeName : res.data.employee.name,\r\n\t\t\t\t\t\temployeeSurname : res.data.employee.surname});\r\n\r\n\t\t\t\t\t\tconsole.log(res.data.grade);\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n\t};\r\n\r\n\r\n\tsetFirstGrade = (grade) => {\r\n\t\t\r\n\t\tconsole.log(\"sou\")\r\n\r\n\t\tlet entityDTO = {\r\n\t\t\temployeeId: this.state.employeeId ,\r\n\t\t\tgrade: grade,\r\n\t\t};\r\n\r\n\t\tconsole.log(entityDTO);\r\n\r\n\t\tAxios.post(API_URL + \"/grade/employee/createGrade\",entityDTO , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else if(res.status === 404){\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Bad request\", UnsuccessfulMessage : res.data,\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\tshowModifyGrade : false});\r\n\r\n\t\t\t\t}else if(res.status === 500){\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Error\", UnsuccessfulMessage : \"internal server error! \",\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t showModifyGrade : false  });\r\n\r\n\t\t\t\t}else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({ hiddenSuccessfulAlert:  false, successfulHeader:   \"Successful\", successfulMessage:  \"You successful created grade for employee! \",\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t showModifyGrade : false   });\r\n\r\n\t\t\t\t\tthis.moveToHistoryConsultation();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t};\r\n\r\n\tsetModifyGrade = (grade) => {\r\n\t\t\r\n\t\tconsole.log(\"sou\")\r\n\r\n\t\tlet entityDTO = {\r\n\t\t\temployeeId: this.state.employeeId ,\r\n\t\t\tgrade: grade,\r\n\t\t};\r\n\r\n\t\tconsole.log(entityDTO);\r\n\r\n\r\n\t\tAxios.post(API_URL + \"/grade/employee/updateGrade\",entityDTO , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else if(res.status === 404){\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Bad request\", UnsuccessfulMessage : res.data,\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\tshowModifyGrade : false});\r\n\r\n\t\t\t\t}else if(res.status === 500){\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Error\", UnsuccessfulMessage : \"internal server error! \",\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t showModifyGrade : false  });\r\n\r\n\t\t\t\t}else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({ hiddenSuccessfulAlert:  false, successfulHeader:   \"Successful\", successfulMessage:  \"You successful update grade for employee! \",\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t showModifyGrade : false   });\r\n\r\n\t\t\t\t\tthis.moveToHistoryConsultation();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n\r\n\t};\r\n\t\r\n\tcloseFirstGradeModal = () => {\r\n\r\n\t\tthis.setState({ showFirstGrade : false,\r\n\t\t\tshowModifyGrade : false,\r\n\t\t\tshowGradeModal : false});\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n\r\n         <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\r\n         onClick={() => this.moveToFutureConsultation()}\r\n         hidden={this.state.hideFutureButton} \r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n         >\r\n         Future consultations\r\n        </button>\r\n\r\n\r\n        <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\r\n         onClick={() => this.moveToHistoryConsultation()}\r\n         hidden={this.state.hideHistoryButton} \r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n         >\r\n         History consultations\r\n        </button>\r\n\r\n\r\n         <h1 hidden={this.state.appointments.length === 0 || this.state.hideFutureConsultations } className=\"text-center  mt-3  \" >Your future pharmacist consultations!</h1>\r\n         <h1 hidden={this.state.appointments.length !== 0 || this.state.hideFutureConsultations} className=\"text-center  mt-3 text-danger\"  >You don't have future pharmacist consultations!</h1>\r\n\r\n\r\n\r\n         <SuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\theader={this.state.successfulHeader}\r\n\t\t\t\tmessage={this.state.successfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n\t\t/>\r\n\t\t<UnsuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t/>\r\n\r\n        \r\n   \r\n        <div className=\"container\" hidden={this.state.hideFutureConsultations }>\r\n                    \r\n          <table className=\"table table-hover\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.appointments.map((appointment) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tkey={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\r\n                   <td width=\"100px\">  \r\n                     <img  src={PharmacistAppointmentPicture} style={{ width: \"85px\", marginTop: \"15px\" }}></img>                                 \r\n                                    \r\n                    </td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Start time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.endDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price:</b>{\" \"}\r\n                                         {appointment.EntityDTO.price }\r\n                                             <b>  din</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                  \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Pharmacist: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{appointment.EntityDTO.employee.EntityDTO.name + \" \" + appointment.EntityDTO.employee.EntityDTO.surname}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                         <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Pharmacist grade: </b> {appointment.EntityDTO.employee.EntityDTO.grade} {\" \"} \r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                      \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                                    \r\n\t\t\t\t\t\t\t\t\t<td>\r\n                                    <button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n                                            className=\"btn btn-outline-danger\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{  marginTop: \"2em\" }}\r\n\t\t\t\t\t\t\t\t\t\t\thidden={this.isAvailableToCanceled(new Date(appointment.EntityDTO.startDateTime))}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleCancelAppointment(appointment.Id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n                                    </td>\t\t\t\r\n\r\n\r\n\r\n                                    \r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n                </div>\r\n\r\n\r\n\r\n          \r\n        </div>\r\n\r\n\r\n\t\t<HistoryPharmacistConsultation\r\n\r\n\t\t\thideHistoryConsultations={this.state.hideHistoryConsultations}\r\n\t\t\tappointments= {this.state.historyConsultations}\r\n\r\n\t\t\thandleSortByPriceAscending={this.handleSortByPriceAscending}\r\n\t\t\thandleSortByPriceDescending={this.handleSortByPriceDescending}\r\n\t\t\thandleSortByDateAscending={this.handleSortByDateAscending}\r\n\t\t\thandleSortByDateDescending={this.handleSortByDateDescending}\r\n\t\t\thandleSortByDurationAppointmentAscending={this.handleSortByDurationAppointmentAscending}\r\n\t\t\thandleSortByDurationAppointmentDescending={this.handleSortByDurationAppointmentDescending}\r\n\t\t\thandleGetGradeClick={this.handleGetGradeClick}\t\t\t\t\t\t\t\t\r\n\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t<FirstGradeModal \r\n\r\n\t\t\t\tshow={this.state.showGradeModal}\r\n\t\t\t\tshowFirstGrade={this.state.showFirstGrade}\r\n\t\t\t\tshowModifyGrade={this.state.showModifyGrade}\r\n\t\t\t\temployeeGrade={this.state.employeeGrade}\t\t\t\t\t\t\t\r\n\t\t\t\tmaxGrade={this.state.maxGrade}\r\n\t\t\t\temployeeName={this.state.employeeName }\r\n\t\t\t\temployeeSurname={this.state.employeeSurname }\r\n\t\t\t\theader={\"Grade\"}\r\n\t\t\t\tbuttonFirstGradeName={\"Grade\"}\r\n\t\t\t\tbuttonModifyGradeName={\" Update grade\"}\t\t\t\t\t\t\t\t\r\n\t\t\t\tsetFirstGrade={this.setFirstGrade}\t\r\n\t\t\t\tsetModifyGrade={this.setModifyGrade}\r\n\t\t\t\tonCloseModal={this.closeFirstGradeModal}\t\t\t\t\t\t\r\n\r\n\t\t/>\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FuturePharmaciesConsultationsForPatient;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\PatientsProccessedDrugsEReceipts.js",["303","304","305","306","307","308"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport drugPicture from \"../Images/medicament.jpg\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\nimport HistoryPharmacistConsultation from \"../Components/Consultations/HistoryPharmacistConsultation\"\r\nimport DrugsEReceiptsModal from \"../Components/Modal/DrugsEReceiptsModal\"\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass PatientsProccessedDrugsEReceipts extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        pharmacyId: \"\",\r\n        processedDrugsList : [],\r\n        \r\n        \r\n        allEReceiptsForSelectedDrug: [] ,\r\n        showEReceiptModal: false,\r\n       \r\n        \r\n    };\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n    \r\n    Axios.get(API_URL + \"/drug/patientsProccessedDrugs-eReceipts\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ processedDrugsList: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  \r\n\r\n\r\n    \r\n \r\n  moveToAllEReceipts =() => {\r\n\r\n        \r\n\tthis.props.history.push('/allPatients-E-receipts')\r\n\r\n       \r\n    }\r\n\r\n\r\n\r\n\thandleSortByDateAscending =() => {\r\n\r\n\r\n\t\tif (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n                 }\r\n\r\n        this.setState({ selectedSort: \"ASCENDING\" ,\r\n        hiddenResetSearch : false});\r\n                        \r\n    \r\n         Axios.get(API_URL + \"/drug/all-patients-eReceipts/SortByDateAscending\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ patientEReceipts: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n        \r\n    \r\n\r\n\r\n\r\n    ClickOnDrug = (drug) => {\r\n\t\tthis.setState({ allEReceiptsForSelectedDrug: drug.EntityDTO.ereceipts, showEReceiptModal : true });\r\n\t};\r\n\r\n    \r\n\r\n    closeEReceiptModal = () => {\r\n\t\tthis.setState({ allEReceiptsForSelectedDrug: [], showEReceiptModal : false });\r\n\t};\r\n\r\n    \r\n\r\n    \r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n\r\n\r\n        <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\r\n         onClick={() => this.moveToAllEReceipts()}\r\n         hidden={this.state.hideHistoryButton} \r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n         >\r\n         All E-receipts\r\n        </button>\r\n\r\n        \r\n\r\n        \r\n\r\n         <h1 hidden={this.state.processedDrugsList.length === 0 } className=\"text-center  mt-3  \" >Your processed drugs!</h1>\r\n         <h1 hidden={this.state.processedDrugsList.length !== 0 } className=\"text-center  mt-3 text-danger\"  >You don't processed drugs!</h1>\r\n\r\n\r\n\r\n   \r\n        <div className=\"container\" >\r\n        <table className=\"table table-hover\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.processedDrugsList.map((drug) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={drug.Id}\r\n\t\t\t\t\t\t\t\t\tkey={drug.Id}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\r\n                                    <td width=\"130em\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={drugPicture} width=\"90em\" />\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div  >\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Name :</b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t   {drug.EntityDTO.drugName}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n                                        <div  >\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Format</b>\r\n\t\t\t\t\t\t\t\t\t\t   <b style={{ color: \"blue\" }}> {drug.EntityDTO.drugFormat}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                                   <td>\r\n                                    <button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n                                            className=\"btn btn-outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{marginTop : \"0.3em\"}}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.ClickOnDrug(drug)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tProcessed e-receipts\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n                                    </td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>      \r\n         \r\n        </div>\r\n\r\n\r\n\r\n        <DrugsEReceiptsModal\r\n\r\n            showModal= {this.state.showEReceiptModal}  \r\n            eReceipts= {this.state.allEReceiptsForSelectedDrug}                      \r\n            closeModal ={this.closeEReceiptModal}                                \r\n            />\t\r\n        \r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\r\n        </div>\r\n\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PatientsProccessedDrugsEReceipts;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\FutureDrugsReservationsForPatient.js",["309","310","311","312","313"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport drugPicture from \"../Images/medicament.jpg\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\nimport HistoryPharmacistConsultation from \"../Components/Consultations/HistoryPharmacistConsultation\"\r\nimport HistoryDrugsReservations from \"../Components/Reservations/HistoryDrugsReservations\"\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass FutureDrugsReservationsForPatients extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        pharmacyId: \"\",\r\n        drugsReservations : [],\r\n        hiddenSuccessfulAlert: true,\r\n        successfulHeader: \"\",\r\n        successfulMessage: \"\",\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n        hideFutureButton : true,\r\n        hideHistoryButton : false,\r\n        historyDrugsReservation  : [],\r\n        hideFutureDrugsReservations  : false,\r\n        hideHistoryDrugsReservations  : true,\r\n\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n    \r\n    Axios.get(API_URL + \"/drug/futurePatientsDrugsReservation\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ drugsReservations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\r\n    \r\n \r\n    moveToHistoryConsultation =() => {\r\n\r\n       \r\n\r\n\t\tthis.setState({ hideFutureButton : false,\r\n\t\t\thideHistoryButton : true,\r\n\t\t\thideFutureDrugsReservations  : true,\r\n\t\t\thideHistoryDrugsReservations  : false,\r\n\r\n\t\t});\r\n\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true,\r\n\t\t\tsuccessfulHeader: \"\",\r\n\t\t\tsuccessfulMessage: \"\",\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\r\n\t\t});\r\n\r\n\r\n\t\t\r\n\r\n\r\n        Axios.get(API_URL + \"/drug/historyPatientsDrugsReservations\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyDrugsReservation : res.data});\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n       \r\n    }\r\n\r\n\r\n    moveToFutureConsultation =() => {\r\n\r\n        this.setState({ hideFutureButton : true,\r\n                        hideHistoryButton : false,\r\n                        hideFutureDrugsReservations  : false,\r\n                        hideHistoryDrugsReservations  : true,\r\n        \r\n        });\r\n\r\n      this.componentDidMount();\r\n\r\n       \r\n    }\r\n\r\n\thandleCancelDrug = (drugId) => {\r\n  \r\n\t\tlet drugIdObject = { id: drugId};\r\n\t\r\n\t\tAxios.post(API_URL + \"/drug/cancelDrugReservation\",drugIdObject , {\r\n\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t})\r\n\t\t  .then((res) => {\r\n\t\t\tif (res.status === 400) {\r\n\t\t\t  this.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\tUnsuccessfulHeader: \"Bad request\", \r\n\t\t\t\tUnsuccessfulMessage: res.data });\r\n\t\r\n\t\t\t} else if (res.status === 500) {\r\n\t\r\n\t\t\t  this.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\tUnsuccessfulHeader: \"Internal server error\", \r\n\t\t\t\tUnsuccessfulMessage: \"Server error.\" });\r\n\t\r\n\t\t\t} \r\n\t\t\telse if (res.status === 404) {\r\n\t\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t  UnsuccessfulHeader: \"Internal server error\", \r\n\t\t\t\t  UnsuccessfulMessage: res.data });\r\n\t  \r\n\t\t\t} else if (res.status === 200) {\r\n\t\t\t  console.log(\"Success\");\r\n\t\t\t  this.setState({\r\n\t\t\t\thiddenSuccessfulAlert: false,\r\n\t\t\t\tsuccessfulHeader: \"Success\",\r\n\t\t\t\tsuccessfulMessage: \"You have successfully canceled the desired appointment! \",\r\n\t\t\t\thiddenEditInfo: true,\r\n\t\t\t  });\r\n\t\r\n\t\t\t  this.refreshDrugs(drugId);\r\n\t\r\n\t\t\t}\r\n\t\t  })\r\n\t\t  .catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t  UnsuccessfulHeader: \"Error\", \r\n\t\t\t  UnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t  \r\n\t\t  });\r\n\t\r\n\t\r\n\t\r\n\t  }\r\n\t\r\n\t  refreshDrugs (drugId) {\r\n\t\r\n\t\tlet newDrugsList= [];\r\n\t\tfor (let drug of this.state.drugsReservations) {\r\n\t\t  if (drug.Id !== drugId) \r\n\t\t \t\t newDrugsList.push(drug)\r\n\t\t}\r\n\t\r\n\t\tthis.setState({\r\n\t\t\tdrugsReservations : newDrugsList,\r\n\t\t});\r\n\t\r\n\t  }\r\n\r\n\r\n\t  isAvailableToCanceled =(date) => {\r\n\r\n        var appointmentDate= new Date(date);\r\n        appointmentDate.setDate(appointmentDate.getDate() -1);\r\n\r\n        if(appointmentDate <= new Date()){\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\t\r\n\r\n\t\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n\r\n         <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\r\n         onClick={() => this.moveToFutureConsultation()}\r\n         hidden={this.state.hideFutureButton} \r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n         >\r\n         Future reservation\r\n        </button>\r\n\r\n\r\n        <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\r\n         onClick={() => this.moveToHistoryConsultation()}\r\n         hidden={this.state.hideHistoryButton} \r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n         >\r\n         History reservation\r\n        </button>\r\n\r\n\r\n         <h1 hidden={this.state.drugsReservations.length === 0 || this.state.hideFutureDrugsReservations  } className=\"text-center  mt-3  \" >Your future drugs reservations!</h1>\r\n         <h1 hidden={this.state.drugsReservations.length !== 0 || this.state.hideFutureDrugsReservations } className=\"text-center  mt-3 text-danger\"  >You don't have future drugs reservations!</h1>\r\n\r\n\r\n\r\n         <SuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\theader={this.state.successfulHeader}\r\n\t\t\t\tmessage={this.state.successfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n\t\t/>\r\n\t\t<UnsuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t/>\r\n\r\n        \r\n   \r\n        <div className=\"container\" hidden={this.state.hideFutureDrugsReservations  }>\r\n                    \r\n          <table className=\"table table-hover\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.drugsReservations.map((drugReservation) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={drugReservation.Id}\r\n\t\t\t\t\t\t\t\t\tkey={drugReservation.Id}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\r\n                   <td width=\"100px\">  \r\n                     <img  src={drugPicture} style={{ width: \"85px\", marginTop: \"15px\" }}></img>                                 \r\n                                    \r\n                    </td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Start date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(drugReservation.EntityDTO.startDate).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Start time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(drugReservation.EntityDTO.startDate).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                        <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(drugReservation.EntityDTO.endDate).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>    \r\n\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(drugReservation.EntityDTO.endDate).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price :</b>{\" \"}\r\n                                            <b style={{color : \"red\"}}> {(Math.round(drugReservation.EntityDTO.oneDrugPrice * drugReservation.EntityDTO.count * 100) / 100).toFixed(2)} </b>\r\n                                            <b>  din</b>\r\n                                             \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                  \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Pharmacy name : </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{drugReservation.EntityDTO.pharmacy.EntityDTO.name }\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                        <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Pharmacy address: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{drugReservation.EntityDTO.pharmacy.EntityDTO.address.street + \", \" + drugReservation.EntityDTO.pharmacy.EntityDTO.address.city + \", \" + drugReservation.EntityDTO.pharmacy.EntityDTO.address.country }\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                                    \r\n\t\t\t\t\t\t\t\t\t<td>\r\n                                    <button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n                                            className=\"btn btn-outline-danger\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{  marginTop: \"2em\" }}\r\n\t\t\t\t\t\t\t\t\t\t\thidden={this.isAvailableToCanceled(new Date(drugReservation.EntityDTO.endDate))\r\n                                                        || drugReservation.EntityDTO.drugReservationStatus === \"CANCELED\" \r\n                                                        || drugReservation.EntityDTO.drugReservationStatus === \"EXPIRED\" \r\n                                                        || drugReservation.EntityDTO.drugReservationStatus === \"PROCESSED\" \r\n                                            }\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleCancelDrug(drugReservation.Id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n                                    </td>\t\t\t\r\n\r\n\r\n\r\n                                    \r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n                </div>\r\n\r\n\r\n\r\n          \r\n        </div>\r\n\r\n\r\n\t\t\r\n\r\n\t\t<HistoryDrugsReservations\r\n\r\n\t\thideHistoryReservations={this.state.hideHistoryDrugsReservations }\r\n\t\tdrugsReservations= {this.state.historyDrugsReservation }\r\n\t\thideFutureDrugsReservations= {this.state.hideFutureDrugsReservations }\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t/>\t\t\t\t\t\t\r\n\r\n\r\n\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FutureDrugsReservationsForPatients;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\registerStaff.js",["314","315","316","317","318","319","320","321","322","323"],"import Header from \"../../Components/Header\";\r\nimport React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\n\r\n\r\n\r\nclass registerStaff extends Component {\r\n\r\n    state = {\r\n\t\terrorHeader: \"\",\r\n\t\terrorMessage: \"\",\r\n\t\thiddenErrorAlert: true,\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t\tname: \"\",\r\n\t\tuserRegister: \"\",\r\n\t\tsurname: \"\",\r\n\t\taddress: \"\",\r\n\t\topenModalData: false,\r\n\t\tphoneNumber: \"\",\r\n\t\temailError: \"none\",\r\n\t\tpasswordError: \"none\",\r\n\t\tnameError: \"none\",\r\n\t\tsurnameError: \"none\",\r\n\t\taddressError: \"none\",\r\n\t\tphoneError: \"none\",\r\n\t\temployeeError: \"none\",\r\n\t\temailNotValid: \"none\",\r\n\t\topenModal: false,\r\n\t\tpharmacies:[],\r\n\t\tselectedPharmacy:null,\r\n\t\tpharmacy:\"\",\r\n\t\tcoords: [],\r\n\t\tselectValue:\"\",\r\n        redirect: false,\r\n        redirectUrl: '',\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.addressInput = React.createRef();\r\n\t}\r\n\r\n\t\r\n\thandleModalDataClose = () => {\r\n\t\tthis.setState({ \r\n\t\t\topenModalData: false,\r\n\t\t});\r\n\t};\r\n\r\n\thandleModalEmailClose = () => {\r\n\t\tthis.setState({ \r\n\t\t\topenModalEmail: false,\r\n\t\t});\r\n\t};\r\n\t\r\n\tcomponentDidMount() {\r\n\r\n\t\tAxios.get(\"http://localhost:8080/pharmacy/allPharmacies\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\thandleEmailChange = (event) => {\r\n\t\tthis.setState({ email: event.target.value });\r\n\t};\r\n\thandlePharmacyChange = (event) => {\r\n\t\tthis.setState({ pharmacy: event.target.value });\r\n\t};\r\n\t\r\n\thandlePasswordChange = (event) => {\r\n\t\tthis.setState({ password: event.target.value });\r\n\t};\r\n\r\n\thandleNameChange = (event) => {\r\n\t\tthis.setState({ name: event.target.value });\r\n\t};\r\n\r\n\thandleSurnameChange = (event) => {\r\n\t\tthis.setState({ surname: event.target.value });\r\n\t};\r\n\r\n\thandleAddressChange = (event) => {\r\n\t\tthis.setState({ address: event.target.value });\r\n\t};\r\n\r\n\thandlePhoneNumberChange = (event) => {\r\n\t\tthis.setState({ phoneNumber: event.target.value });\r\n\t};\r\n    handleSelectedValueSysAdminChange = (event) => {\r\n       \r\n\t\tthis.setState({ selectValue: \"sysadmin\",employeeError:\"none\" });\r\n        console.log(this.state.selectValue);\r\n\t};\r\n    handleSelectedValueSupplierChange = (event) => {\r\n      \r\n\t\tthis.setState({ selectValue: \"supplier\",employeeError:\"none\" });\r\n        console.log(this.state.selectValue);\r\n\t};\r\n    handleSelectedValueDermathologistChange = (event) => {\r\n       \r\n\t\tthis.setState({ selectValue: \"dermathologist\",employeeError:\"none\" });\r\n        console.log(this.state.selectValue);\r\n\t};\r\n    handleSelectedValuePharmacyAdminChange = (event) => {\r\n      \r\n\t\tthis.setState({ selectValue: \"pharmacyadmin\",employeeError:\"none\" });\r\n        console.log(this.state.selectValue);\r\n\t};\r\n    \r\n\r\n\tvalidateForm = (userDTO) => {\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\temailError: \"none\",\r\n\t\t\temailNotValid: \"none\",\r\n\t\t\tnameError: \"none\",\r\n\t\t\tsurnameError: \"none\",\r\n\t\t\taddressError: \"none\",\r\n\t\t\tphoneError: \"none\",\r\n\t\t\t\r\n\t\t});\r\n\r\n\t\tif (userDTO.email === \"\") {\r\n\t\t\tthis.setState({ emailError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (!userDTO.email.includes(\"@\")) {\r\n\t\t\tthis.setState({ emailNotValid: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.name === \"\") {\r\n\t\t\tthis.setState({ nameError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.surname === \"\") {\r\n\t\t\tthis.setState({ surnameError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.address === \"\") {\r\n\t\t\tthis.setState({ addressError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.phoneNumber === \"\") {\r\n\t\t\tthis.setState({ phoneError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t};\r\n\r\n\thandleModalClose = () => {\r\n\t\tthis.setState({ openModal: false });\r\n\t};\r\n\t\r\n\tonPharmacyChange  = (pharmacy) => {\r\n\t\tthis.state.selectedPharmacy = pharmacy;\r\n\t\tconsole.log(pharmacy, \"PHARMACy\");\r\n\t\r\n\t};\r\n\r\n\tvalidateEmployee = (employee) => {\r\n\r\n\t\tthis.setState({\r\n\t\t\temployeeError: \"none\"\r\n\t\t});\r\n\r\n\t\tif (employee === \"\") {\r\n\t\t\tthis.setState({ employeeError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\thandleSignUp = () => {\r\n\r\n\t\r\n\t\t\t\tlet userDTO = {\r\n\t\t\t\t\temail: this.state.email,\r\n\t\t\t\t\tname: this.state.name,\r\n\t\t\t\t\tsurname: this.state.surname,\r\n\t\t\t\t\taddress: this.state.address,\r\n\t\t\t\t\tphoneNumber: this.state.phoneNumber,\r\n\t\t\t\t\tpassword: this.state.password,\r\n\t\t\t\t};\r\n\t\t\t\tif (this.validateForm(userDTO) && this.validateEmployee(this.state.selectValue)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.state.selectValue == \"dermathologist\"){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tAxios.post(\"http://localhost:8080/reg/signup-dermathologist\", userDTO,{ headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\tif (res.status === 409) {\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\terrorHeader: \"Resource conflict!\",\r\n\t\t\t\t\t\t\t\t\t\terrorMessage: \"Email already exist.\",\r\n\t\t\t\t\t\t\t\t\t\thiddenErrorAlert: false,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else if (res.status === 500) {\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"USO\")\r\n\t\t\t\t\t\t\t\t\tthis.setState({ openModalData: true });\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t\t\t\topenModal: true,\r\n\t\t\t\t\t\t\t\t\t\tuserRegister: \"You have successfully registered staff with password \" + res.data,\r\n                                        redirect: true\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.state.selectValue == \"pharmacyadmin\"){\r\n\t\t\t\t\t\tconsole.log(this.state.selectedPharmacy.Id);\r\n\t\t\t\t\t\tAxios.post(\"http://localhost:8080/reg/signup-pharmacyadmin/\" + this.state.selectedPharmacy.Id, userDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t openModal: true,\r\n\t\t\t\t\t\t\t\t\t userRegister: \"You have successfully registered staff with password \" + res.data,\r\n                                     redirect: true\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.state.selectValue == \"sysadmin\"){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tAxios.post(\"http://localhost:8080/reg/signup-sysadmin\", userDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t\t\topenModal: true,\r\n\t\t\t\t\t\t\t\t\tuserRegister: \"You have successfully registered staff with password \" + res.data,\r\n                                    redirect: true\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.state.selectValue == \"supplier\"){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tAxios.post(\"http://localhost:8080/reg/signup-supplier\", userDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\topenModal: true,\r\n\t\t\t\t\t\t\t\t\tuserRegister: \"You have successfully registered staff with password \" + res.data,\r\n                                    redirect: true\r\n\t\t\t\t\t\t\t\t });\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t};\r\n\t\t\t\r\n\t\t\r\n\t};\r\n\thandleCloseAlert = () => {\r\n\t\tthis.setState({ hiddenErrorAlert: true });\r\n\t};\r\n\thandleSelectChange  = (event) => {\r\n\t\tthis.setState({ selectValue: event.target.value });\r\n\t};\r\n\r\n\r\nrender() {\r\n        if (this.state.redirect) return <Redirect push to=\"/\" />;\r\n        return(\r\n            <React.Fragment>\r\n            <Header/>\r\n            \r\n\r\n            <div className=\"container\" style={{ marginTop: \"2%\" }}>\r\n\r\n                       \r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h5 className=\" text-center  mb-0 text-uppercase\" style={{ marginTop: \"2rem\" }}>\r\n\t\t\t\t\t\tRegister staff\r\n\t\t\t\t\t</h5>\r\n\r\n                    \r\n\r\n\t\t\t\t\t<div className=\"row section-design\">\r\n\t\t\t\t\t\t<div className=\"col-lg-8 mx-auto\">\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<form id=\"contactForm\" name=\"sentMessage\" novalidate=\"novalidate\">\r\n\r\n                                    <div class=\"dropdown \" hidden={this.state.selectValue !== \"\"}>\r\n                                <button class=\"btn btn-secondary dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Choose employee\r\n                                </button>\r\n                                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                    <a class=\"dropdown-item\" onClick={this.handleSelectedValueSysAdminChange} >System admin</a>\r\n                                    <a class=\"dropdown-item\" onClick={this.handleSelectedValueSupplierChange} >Supplier</a>\r\n                                    <a class=\"dropdown-item\" onClick={this.handleSelectedValueDermathologistChange} >Dermathologist</a>\r\n                                    <a class=\"dropdown-item\" onClick={this.handleSelectedValuePharmacyAdminChange} >Pharmacy Admin</a>\r\n                                </div>\r\n                                </div>\r\n\r\n                                     <div className=\"text\" hidden={this.state.selectValue == \"\"}>\r\n\t\t\t\t\t\t\t\t\t\tSelected: <b>{this.state.selectValue}</b>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                    <br />\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.employeeError }}>\r\n\t\t\t\t\t\t\t\t\t\tYou must choose employee.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\" hidden={this.state.selectValue !== \"pharmacyadmin\"} >\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Pharmacy:</label><br></br>\r\n\t\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t       onChange={this.handlePharmacyChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.pharmacy}\r\n\t\t\t\t\t\t\t\t\t     >{this.state.pharmacies.map((pharmacy) => (\r\n\t\t\t\t\t\t\t\t\t\t  <option onClick={this.onPharmacyChange(pharmacy)}  id={pharmacy.Id} key={pharmacy.Id} value={pharmacy.EntityDTO.name}>{pharmacy.EntityDTO.name},{pharmacy.EntityDTO.address.street}, {pharmacy.EntityDTO.address.city},{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{pharmacy.EntityDTO.address.country}</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\t\r\n\t\t\t\t\t\t\t\t\t\t</select>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Email address:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email address\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleEmailChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.email}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.emailError }}>\r\n\t\t\t\t\t\t\t\t\t\tEmail address must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.emailNotValid }}>\r\n\t\t\t\t\t\t\t\t\t\tEmail address is not valid.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Name:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleNameChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n\t\t\t\t\t\t\t\t\t\tName must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Surname:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Surname\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"surname\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleSurnameChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.surname}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.surnameError }}>\r\n\t\t\t\t\t\t\t\t\t\tSurname must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n                                <div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Address:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Address\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"address\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleAddressChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.address}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.addressError }}>\r\n\t\t\t\t\t\t\t\t\t\tAddress must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Phone number:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Phone number\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"phone\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handlePhoneNumberChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.phoneNumber}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.phoneError }}>\r\n\t\t\t\t\t\t\t\t\t\tPhone number must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tbackground: \"#1977cc\",\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: \"15px\",\r\n\t\t\t\t\t\t\t\t\t\t\tmarginLeft: \"40%\",\r\n\t\t\t\t\t\t\t\t\t\t\twidth: \"20%\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleSignUp}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-xl\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default registerStaff;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Pages\\PatientsEReceipts.js",["324","325","326","327","328"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport eReceiptsPicture from \"../Images/notepad.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\nimport HistoryPharmacistConsultation from \"../Components/Consultations/HistoryPharmacistConsultation\"\r\nimport EreceiptDrugsModal from \"../Components/Modal/EreceiptDrugsModal\"\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass PatientsEReceipts extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        pharmacyId: \"\",\r\n        patientEReceipts : [],\r\n        \r\n        hideFutureButton : true,\r\n        hideHistoryButton : false,\r\n        historyConsultations : [],\r\n        hideFutureConsultations : false,\r\n        hideHistoryConsultations : true,\r\n\r\n        allDrugsForSelectedReceipt: [] ,\r\n        showDrugModal: false,\r\n        searchStatus : \"status\",\r\n        selectedSort : \"\",\r\n        hiddenResetSearch : true\r\n        \r\n    };\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n    \r\n    Axios.get(API_URL + \"/drug/all-patients-eReceipts\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ patientEReceipts: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  \r\n\r\n\r\n    \r\n \r\n  moveToProcessedDrugs =() => {\r\n\r\n\tthis.props.history.push('/allPatients-processed-drugs-e-receipts')\r\n\t\t\r\n       \r\n    }\r\n\r\n\r\n\r\n\thandleSortByDateAscending =() => {\r\n\r\n\r\n\t\tif (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n                 }\r\n\r\n        this.setState({ selectedSort: \"ASCENDING\" ,\r\n        hiddenResetSearch : false});\r\n                        \r\n    \r\n         Axios.get(API_URL + \"/drug/all-patients-eReceipts/SortByDateAscending\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ patientEReceipts: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n        \r\n    \r\n\r\n\r\n\thandleSortByDateDescending =() => {\r\n\r\n\t\t\r\n\t\tif (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n             }\r\n\r\n        this.setState({ selectedSort: \"DESCENDING\",\r\n        hiddenResetSearch : false });\r\n\r\n         Axios.get(API_URL + \"/drug/all-patients-eReceipts/SortByDateDescending\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ patientEReceipts: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n        \r\n    }\r\n\r\n\r\n    ClickOnEReceipt = (eReceipt) => {\r\n\t\tthis.setState({ allDrugsForSelectedReceipt: eReceipt.EntityDTO.drugs, showDrugModal : true });\r\n\t};\r\n\r\n    \r\n\r\n    closeDrugsModal = () => {\r\n\t\tthis.setState({ allDrugsForSelectedReceipt: [], showDrugModal : false });\r\n\t};\r\n\r\n    handleStatusChange = (event) => {\r\n\t\tthis.setState({ searchStatus: event.target.value });\r\n\t};\r\n\r\n\r\n    searchClick = () => {\r\n\t\t\r\n        let url = \"\"\r\n\r\n        if(this.state.selectedSort=== \"ASCENDING\"){\r\n            url =  API_URL + \"/drug/all-patients-eReceipts/SortByDateAscending/search/\";\r\n        }else if(this.state.selectedSort=== \"DESCENDING\"){\r\n            url = API_URL + \"/drug/all-patients-eReceipts/SortByDateDescending/search/\";\r\n        }else{\r\n            url = API_URL + \"/drug/all-patients-eReceipts/search/\";\r\n        }\r\n\r\n        console.log(url);\r\n\r\n        Axios.get(url + this.state.searchStatus, { headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t.then((res) => {\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({ patientEReceipts: res.data, hiddenResetSearch : false});\r\n                \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\t};\r\n\r\n\r\n\r\n    resetSearchClick = () => {\r\n\t\t\r\n        this.setState({hiddenResetSearch : true});\r\n        \r\n        this.componentDidMount();\r\n\r\n\t};\r\n\r\n    \r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n\r\n\r\n        <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\r\n         onClick={() => this.moveToProcessedDrugs()}\r\n         hidden={this.state.hideHistoryButton} \r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n         >\r\n         Processed drugs with E-receipts\r\n        </button>\r\n\r\n        <div className=\"container form-inline \" style={{  marginTop: \"2em\" }}>\r\n\r\n            <div className=\"dropdown\">\r\n                <button className=\"btn btn-primary btn-lg dropdown-toggle\"\r\n                    type=\"button\" id=\"dropdownMenu2\"\r\n                    data-toggle=\"dropdown\" \r\n                    aria-haspopup=\"true\" \r\n                    aria-expanded=\"false\">\r\n                    Sort\r\n                </button>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">              \r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByDateAscending} >Sort by date ascending</button>\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByDateDescending} >Sort by date descending</button>                  \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\" ml-3\">\r\n\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Status\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleStatusChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.searchStatus}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"8em\" }}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control mr-3\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<option key=\"1\" value=\"Status\" selected disabled>\r\n\t\t\t\t\t\t\t\t\t\t\tStatus\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t<option key=\"2\" value=\"NEW\">\r\n\t\t\t\t\t\t\t\t\t\t\tNew\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t<option key=\"3\" value=\"REJECTED\">\r\n\t\t\t\t\t\t\t\t\t\t\tRejected\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t<option key=\"4\" value=\"PROCESSED\">\r\n\t\t\t\t\t\t\t\t\t\t\tProcessed\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t    <div className=\"ml-2\">\r\n                                        <button\r\n                                            onClick={this.searchClick}\r\n                                            className=\"btn btn-primary btn-xl \"\r\n                                            type=\"button\"\r\n                                        >\r\n                                \r\n                                            Search\r\n                                        </button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t    </div>\r\n\r\n                                    <div className=\"ml-2\">\r\n                                        <button\r\n                                            onClick={this.resetSearchClick}\r\n                                            hidden={this.state.hiddenResetSearch}\r\n                                            className=\"btn btn-secondary btn-xl \"\r\n                                            type=\"button\"\r\n                                        >\r\n                                \r\n                                            Reset search\r\n                                        </button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t    </div>\r\n\r\n\r\n\r\n         </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n         <h1 hidden={this.state.patientEReceipts.length === 0 || this.state.hideFutureConsultations } className=\"text-center  mt-3  \" >Your e-receipts!</h1>\r\n         <h1 hidden={this.state.patientEReceipts.length !== 0 || this.state.hideFutureConsultations} className=\"text-center  mt-3 text-danger\"  >You don't have e-receipts!</h1>\r\n\r\n\r\n\r\n   \r\n        <div className=\"container\" hidden={this.state.hideFutureConsultations }>\r\n        <table className=\"table table-hover\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.patientEReceipts.map((eReceipt) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={eReceipt.Id}\r\n\t\t\t\t\t\t\t\t\tkey={eReceipt.Id}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t<td width=\"130em\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={eReceiptsPicture} width=\"90em\" />\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Creation Date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(eReceipt.EntityDTO.creationDate).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div  >\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Status</b>\r\n\t\t\t\t\t\t\t\t\t\t   <b style={{ color: \"blue\" }}> {eReceipt.EntityDTO.status}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div hidden={eReceipt.EntityDTO.status !== \"PROCESSED\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price: </b> {eReceipt.EntityDTO.price.toFixed(2)} <b>din</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                                   <td>\r\n                                    <button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n                                            className=\"btn btn-outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{marginTop : \"0.3em\"}}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.ClickOnEReceipt(eReceipt)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tDrugs\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n                                    </td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>      \r\n         \r\n        </div>\r\n\r\n\r\n\r\n          \r\n        </div>\r\n\r\n\r\n\t\t<HistoryPharmacistConsultation\r\n\r\n\t\t\thideHistoryConsultations={this.state.hideHistoryConsultations}\r\n\t\t\tappointments= {this.state.historyConsultations}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t/>\r\n\r\n\t\t\t<EreceiptDrugsModal\r\n\r\n                showDrugModal= {this.state.showDrugModal}  \r\n                drugs= {this.state.allDrugsForSelectedReceipt}                      \r\n                closeModal ={this.closeDrugsModal}                                \r\n            />\t\t\t\t\t\r\n\r\n\r\n\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PatientsEReceipts;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\RegisterDrug.js",["329","330","331","332","333","334"],"import GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nimport Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Header from \"../../Components/Header\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nclass RegisterDrug extends Component {\r\n\r\n    state = {\r\n\t\tname: \"\",\r\n\t\tproducerName:\"\",\r\n\t\tinstanceName: \"\",\r\n\t\tdescription: \"\",\r\n\t\tdrugCode: \"\",\r\n\t\tdrugKind: \"\",\r\n\t\tdrugFormat:\"\",\r\n\t\tloyaltyPoints:\"\",\r\n\t\tquantity:\"\",\r\n\t\tdrugChange: \"\",\r\n\t\topenModalData: false,\r\n\t\tdrugKinds: [],\r\n\t\tdrugFormats: [],\r\n\t\tdrugs: [],\r\n\t\tdrugReplacements: [],\r\n\t\tdrugReplacementsEntity: [],\r\n\t\tmanufacturers: [],\r\n\t\tmanufacturer:null,\r\n\t\tingredients: [],\r\n\t\tsideEffects: \"\",\r\n\t\tonReciept: \"\",\r\n\t\trecommendAmount: \"\",\r\n\t\tdrugIngredient: \"\",\r\n\t\tselectedManufacturer: null,\r\n\t\tselectDrugReplacement: null,\r\n\t\tnameError: \"none\",\r\n\t\tconsulationPriceError: \"none\",\r\n\t\topenModal: false,\r\n\t\tcoords: [],\r\n        redirect: false,\r\n        redirectUrl: '',\r\n\t};\r\n\r\n\r\n    componentDidMount() {\r\n\r\n\t\tAxios.get(\"http://localhost:8080/drug/manufacturers\")\r\n\t\t\t.then((res) => {\r\n\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.setState({\r\n                        redirect: true,\r\n                        redirectUrl: \"/unauthorized\"\r\n                    });\r\n                } else {\r\n\t\t\t\tthis.setState({ \r\n\t\t\t\t\tmanufacturers: res.data,\r\n\t\t\t\t\tmanufacturer: res.data[0],\r\n\t\t\t\t });\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\t\tAxios.get(\"http://localhost:8080/drug/drugkind\")\r\n\t\t\t.then((res) => {\r\n\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.setState({\r\n                        redirect: true,\r\n                        redirectUrl: \"/unauthorized\"\r\n                    });\r\n                } else {\r\n\r\n\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\tdrugKinds: res.data ,\r\n\t\t\t\t\t\tdrugKind: res.data[0].EntityDTO.type\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n                console.log(\"uso u err kod get drug kind\");\r\n\t\t\t});\r\n\t\t\r\n\t\tAxios.get(\"http://localhost:8080/drug/drugformat\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ \r\n\t\t\t\t\tdrugFormats: res.data,\r\n\t\t\t\t\tdrugFormat: res.data[0].EntityDTO.type\r\n\t\t\t\t});\r\n            \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\t\t\r\n\t\tAxios.get(\"http://localhost:8080/drug\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ drugs: res.data });\r\n                console.log(res.data);\t\r\n\t\t\t\tthis.state.drugChange = res.data[0].EntityDTO.drugInstanceName;\r\n            \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n                console.log(\"USAO U GET DRUG ERROR\");\r\n\t\t\t});\r\n\r\n\t\t\r\n\t\t\r\n    }\r\n\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\tonManufacturerChange  = (manufacturer) => {\r\n\t\tthis.state.selectedManufacturer = manufacturer;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\thandleModalClose = () => {\r\n\t\tthis.setState({ openModal: false });\r\n\t};\r\n\t\r\n\taddIngredient = (event) => {\r\n\t\t\r\n\t\tif (this.state.drugIngredient === \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n  \t\tevent.preventDefault();\r\n  \t\tthis.state.ingredients.push(this.state.drugIngredient);\r\n\t\tdocument.getElementById(\"demo\").innerHTML = this.state.ingredients;\r\n  \t\t\r\n\t};\r\n\t\r\n\t\r\n\taddReplacement = (event) => {\r\n\t\tif (this.state.drugChange === \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tevent.preventDefault();\r\n\t\tif(this.state.drugReplacements.includes(this.state.drugChange))\r\n\t\t\treturn;\r\n\t\t\t\r\n  \t\tthis.state.drugReplacementsEntity.push(this.state.selectDrugReplacement);\r\n  \t\tthis.state.drugReplacements.push(this.state.drugChange);\r\n\t\tdocument.getElementById(\"replacement\").innerHTML = this.state.drugReplacements;\r\n\t\tconsole.log(this.state.drugReplacements);\r\n\t\tconsole.log(this.state.drugReplacementsEntity, \"ENTITY DRUG\");\r\n  \t\t\r\n\t};\r\n\t\r\n\thandleDrugChange = (event) => {\r\n\t\tthis.setState({ drugChange: event.target.options[event.target.selectedIndex].text,\r\n\t\tselectDrugReplacement:  this.state.drugs[event.target.value]});\r\n\t};\r\n\t\r\n\tonDrugReplacementEntityChange  = (drug) => {\r\n\t\r\n\t};\r\n\t\r\n\thandleManufacturerChange = (event) => {\r\n\t\tthis.setState({ manufacturer: this.state.manufacturers[event.target.value]});\r\n\t};\r\n\t\r\n\tresetReplacement = (event) => {\r\n  \t\tevent.preventDefault();\r\n  \t\tthis.setState({drugReplacements: []});\r\n  \t\tthis.setState({drugReplacementsEntity: []});\r\n\t\tdocument.getElementById(\"replacement\").innerHTML = \"\";\r\n  \t\t\r\n\t};\r\n\t\r\n\tcreateIngredient = (event) => {\r\n\r\n        console.log(\"usao u fju1\");\r\n\r\n\t\t\r\n\t\tfor (const [index, value] of this.state.ingredients.entries()) {\r\n\t\t\tlet ingredientDTO = {\r\n\t\t\t\tname: this.state.ingredients[index],\r\n\t\t\t};\r\n\t\t\t\r\n            console.log(\"usao u fju2\");\r\n\r\n\t\t\tAxios.post(\"http://localhost:8080/ingredients\", ingredientDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    console.log(\"greska create ingridijent\");\r\n\t\t\t\t});\r\n\t\t}\r\n  \t\t\r\n\t};\r\n\t\r\n\t\r\n\tresetIngredient = (event) => {\r\n  \t\tevent.preventDefault();\r\n  \t\tthis.setState({ingredients: []});\r\n\t\tdocument.getElementById(\"demo\").innerHTML = \"\";\r\n  \t\t\r\n\t};\r\n\t\r\n\thandleOnRecieptChange = (event) => {\r\n\t\tthis.setState({ onReciept: event.target.value })\r\n\t};\r\n\r\n\thandleDrugIngredientChange = (event) => {\r\n\t\tthis.setState({ drugIngredient: event.target.value });\r\n\t};\r\n\t\r\n\thandleLoyaltyPointsChange = (event) => {\r\n\t\tthis.setState({ loyaltyPoints: event.target.value });\r\n\t};\r\n\t\r\n\thandleQuantityChange = (event) => {\r\n\t\tthis.setState({ quantity: event.target.value });\r\n\t};\r\n\r\n\thandleRecommendAmountChange = (event) => {\r\n\t\tthis.setState({ recommendAmount: event.target.value });\r\n\t};\r\n\t\r\n\thandleNameChange = (event) => {\r\n\t\tthis.setState({ name: event.target.value });\r\n\t};\r\n\thandleProducerNameChange = (event) => {\r\n\t\tthis.setState({ producerName: event.target.value });\r\n\t};\r\n\t\r\n\thandleInstanceNameChange = (event) => {\r\n\t\tthis.setState({ instanceName: event.target.value });\r\n\t};\r\n\t\r\n\thandleSideEffectsChange = (event) => {\r\n\t\tthis.setState({ sideEffects: event.target.value });\r\n\t};\r\n\r\n\thandleDrugCodeChange = (event) => {\r\n\t\tthis.setState({ drugCode: event.target.value });\r\n\t};\r\n\t\r\n\thandleDrugKindChange = (event) => {\r\n\t\tthis.setState({ drugKind: event.target.value });\r\n\t};\r\n\t\r\n\thandleDrugFormatChange = (event) => {\r\n\t\tthis.setState({ drugFormat: event.target.value });\r\n\t\tconsole.log(event.target.value);\r\n\t};\r\n\t\r\n\thandleDescriptionChange = (event) => {\r\n\t\tthis.setState({ description: event.target.value });\r\n\t};\r\n\r\n\tvalidateForm = (userDTO) => {\r\n\t\tthis.setState({\r\n\t\t\tnameError: \"none\",\r\n\t\t\taddressError: \"none\",\r\n\t\t\tconsulationPriceError: \"none\",\r\n\t\t});\r\n\r\n\t\tif (userDTO.name === \"\") {\r\n\t\t\tthis.setState({ nameError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.consulationPrice === \"\") {\r\n\t\t\tthis.setState({ consulationPriceError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t};\r\n\r\n\thandleModalDataClose = () => {\r\n\t\tthis.setState({ \r\n\t\t\topenModalData: false,\r\n\t\t});\r\n\t};\r\n\r\n\thandleModalClose = () => {\r\n\t\tthis.setState({ openModal: false });\r\n\t};\r\n\t\r\n\thandleSignUp = () => {\r\n\t\tif(this.state.name !== \"\" &&\r\n\t\tthis.state.instanceName !== \"\" &&\r\n\t\tthis.state.drugCode !== \"\"&&\r\n\t\tthis.state.loyaltyPoints !== \"\"&&\r\n\t\tthis.state.quantity !== \"\"&&\r\n\t\tthis.state.sideEffects !== \"\"&&\r\n\t\tthis.state.recommendAmount !== \"\"){\r\n\r\n\t\tlet drugInstanceDTO = {\r\n\t\t\tname: this.state.name,\r\n\t\t\tproducerName : this.state.producerName,\r\n\t\t\tcode: this.state.drugCode,\r\n\t\t\tdrugInstanceName: this.state.instanceName,\r\n\t\t\tdrugFormat: this.state.drugFormat,\r\n\t\t\tquantity: this.state.quantity,\r\n\t\t\tsideEffects: this.state.sideEffects,\r\n\t\t\trecommendedAmount: this.state.recommendAmount,\r\n\t\t\tloyalityPoints: this.state.loyaltyPoints,\r\n\t\t\tonReciept: document.querySelector('.messageCheckbox').checked,\r\n\t\t\tdrugKind: this.state.drugKind,\r\n\t\t};\r\n\t\t\r\n\t\tconsole.log(drugInstanceDTO);\r\n\t\t\r\n\t\tAxios.put(\"http://localhost:8080/drug/add\", drugInstanceDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t.then((res) => {\r\n\t\t\t\r\n\t\t\t\tfor (const [index, value] of this.state.ingredients.entries()) {\r\n\t\t\t\t\tlet ingredientDTO = {\r\n\t\t\t\t\t\tname: this.state.ingredients[index],\r\n\t\t\t\t\t\tid: res.data,\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tAxios.put(\"http://localhost:8080/drug/ingredient\", ingredientDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\tconsole.log(\"Success add ingredient\");\t\t\t\t\t\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet drugManufacturerDTO = {\r\n\t\t\t\t\tdrug_id: res.data,\r\n\t\t\t\t\tmanufacturer_id: this.state.manufacturer.Id,\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(drugManufacturerDTO)\r\n\t\t\t\tAxios.put(\"http://localhost:8080/drug/manufacturer\", drugManufacturerDTO,  { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\tconsole.log(\"Success\");\t\t\t\t\t\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\tthis.setState({ openModal: true });\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tfor (const [index, value] of this.state.drugReplacementsEntity.entries()) {\r\n\t\t\t\t\tconsole.log(\"ubicu se,\", this.state.drugReplacementsEntity[index].EntityDTO.drugInstanceName)\r\n\t\t\t\t\tlet ReplaceDrugIdDTO = {\r\n\t\t\t\t\t\tid: res.data,\r\n\t\t\t\t\t\treplacement_id: this.state.drugReplacementsEntity[index].Id,\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tAxios.put(\"http://localhost:8080/drug/replacement\", ReplaceDrugIdDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\tconsole.log(\"Success\");\t\r\n\t\t\t\t\t\t\tconsole.log(\"odradio replacement\");\t\t\t\t\t\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n                this.setState({ redirect: true });\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.setState({\r\n\t\t\t\topenModalData: true,\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t};\r\n\t\r\n\thandleSelectChange  = (event) => {\r\n\t\tthis.setState({ selectValue: event.target.value });\r\n\t};\r\n\r\n    render() {\r\n        if (this.state.redirect) return <Redirect push to=\"/\" />;\r\n        return (\r\n            <React.Fragment>\r\n\r\n<Header />\r\n\r\n<div className=\"container\" style={{ marginTop: \"2%\" }}>\r\n    <h5 className=\" text-center  mb-0 text-uppercase\" style={{ marginTop: \"2rem\" }}>\r\n        Register drug\r\n    </h5>\r\n\r\n    <div className=\"row section-design\">\r\n        <div className=\"col-lg-8 mx-auto\">\r\n            <br />\r\n            <form id=\"contactForm\" name=\"sentMessage\" novalidate=\"novalidate\">\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Name:</label>\r\n                        <input\r\n                            placeholder=\"Name\"\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            onChange={this.handleNameChange}\r\n                            value={this.state.name}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Name must be entered.\r\n                    </div>\r\n                </div>\r\n\t\t\t\t<div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Producer name:</label>\r\n                        <input\r\n                            placeholder=\"Producer name\"\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            onChange={this.handleProducerNameChange}\r\n                            value={this.state.producerName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Producer name must be entered.\r\n                    </div>\r\n                </div>\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Instance name:</label>\r\n                        <input\r\n                            placeholder=\"Instance name\"\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            onChange={this.handleInstanceNameChange}\r\n                            value={this.state.instanceName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Instance name must be entered.\r\n                    </div>\r\n                </div>\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Quantity:</label>\r\n                        <input\r\n                            placeholder=\"Quantity\"\r\n                            class=\"form-control\"\r\n                            type=\"number\"\r\n                            id=\"name\"\r\n                            onChange={this.handleQuantityChange}\r\n                            value={this.state.quantity}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Quantity must be entered.\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Drug code:</label>\r\n                        <input\r\n                            placeholder=\"Drug code\"\r\n                            class=\"form-control\"\r\n                            id=\"consulationPrice\"\r\n                            type=\"text\"\r\n                            onChange={this.handleDrugCodeChange}\r\n                            value={this.state.drugCode}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.consulationPriceError }}>\r\n                        Code must be entered.\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"control-group\">\t\r\n                \r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Drug kind:</label>\r\n                        <select\r\n                           onChange={this.handleDrugKindChange}\r\n                            value={this.state.drugKind}\r\n                         >{this.state.drugKinds.map((kind) => (\r\n                          <option value={kind.EntityDTO.type}>{kind.EntityDTO.type}</option>\r\n                        ))}\t\r\n                        </select>\r\n                        <label>On reciept </label>\r\n                        <input\r\n                        \r\n                            class=\"messageCheckbox\"\r\n                            type=\"checkbox\"\r\n                            id=\"name\"\r\n                            onChange={this.handleOnRecieptChange}\r\n                            value={this.state.onReciept}\r\n                        />\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Side effects:</label>\r\n                        <input\r\n                            placeholder=\"Side effects\"\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            onChange={this.handleSideEffectsChange}\r\n                            value={this.state.sideEffects}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Side effects must be entered.\r\n                    </div>\r\n                </div>\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Recommend amount:</label>\r\n                        <input\r\n                            placeholder=\"Recommend amount\"\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            onChange={this.handleRecommendAmountChange}\r\n                            value={this.state.recommendAmount}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Recommend amount must be entered.\r\n                    </div>\r\n                </div>\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Drug ingredient:</label>\r\n                        <input\r\n                            placeholder=\"Drug ingredient\"\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            onChange={this.handleDrugIngredientChange}\r\n                            value={this.state.drugIngredient}\r\n                        />\r\n                        <button\r\n                            onClick={this.addIngredient}\r\n                        >\r\n                            Add\r\n                        </button>\r\n                        <button\r\n                            onClick={this.resetIngredient}\r\n                        >\r\n                            Reset ingredients\r\n                        </button>\r\n                        <button\r\n                        type=\"button\"\r\n                            onClick={this.createIngredient}\r\n                        >\r\n                            Create\r\n                        </button>\r\n                        <p id=\"demo\"></p>\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Drug ingredient must be entered.\r\n                    </div>\r\n                </div>\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Replacement drugs:</label>\r\n                        <select\r\n                            \r\n                            onChange={this.handleDrugChange}\r\n                         >{this.state.drugs.map((drug,index) => (\r\n                          <option onClick={this.onDrugReplacementEntityChange(drug)} value={index}>{drug.EntityDTO.drugInstanceName}</option>\r\n                        ))}\t\r\n                        </select>\r\n                        <button\r\n                            onClick={this.addReplacement}\r\n                        >\r\n                            Add replacement\r\n                        </button>\r\n                        <button\r\n                            onClick={this.resetReplacement}\r\n                        >\r\n                            Reset replacement\r\n                        </button>\r\n                        <p id=\"replacement\"></p>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"control-group\">\t\r\n                \r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Drug Format:</label>\r\n                        <select\r\n                           onChange={this.handleDrugFormatChange}\r\n                            value={this.state.drugFormat}\r\n                         >{this.state.drugFormats.map((format) => (\r\n                          <option value={format.EntityDTO.type}>{format.EntityDTO.type}</option>\r\n                        ))}\t\r\n                        </select>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"control-group\">\t\r\n                \r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Drug manufacturer:</label>\r\n                        <select\r\n                           onChange={this.handleManufacturerChange}\r\n                          >{this.state.manufacturers.map((manufacturer, index) => (\r\n                          <option value={index}>{manufacturer.EntityDTO.name}</option>\r\n                        ))}\t\r\n                        </select>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Loyalty points:</label>\r\n                        <input\r\n                            placeholder=\"Loyalty points\"\r\n                            class=\"form-control\"\r\n                            type=\"number\"\r\n                            id=\"name\"\r\n                            onChange={this.handleLoyaltyPointsChange}\r\n                            value={this.state.loyaltyPoints}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Loyalty points must be entered.\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        style={{\r\n                            background: \"#1977cc\",\r\n                            marginTop: \"15px\",\r\n                            marginLeft: \"40%\",\r\n                            width: \"20%\",\r\n                        }}\r\n                        onClick={this.handleSignUp}\r\n                        className=\"btn btn-primary btn-xl\"\r\n                        id=\"sendMessageButton\"\r\n                        type=\"button\"\r\n                    >\r\n                        Sign Up\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n            </React.Fragment>\r\n\r\n\r\n        );\r\n\r\n\r\n\t}\r\n}\r\n\r\nexport default withRouter(RegisterDrug);","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\RegisterPharmacies.js",["335"],"import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport Header from \"../../Components/Header\";\r\nimport Axios from \"axios\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nimport { getRoles } from \"@testing-library/dom\";\r\n\r\n\r\n\r\nclass RegisterPharmacies extends Component {\r\n\tstate = {\r\n\t\tname: \"\",\r\n\t\tdescription: \"\",\r\n\t\taddress: \"\",\r\n\t\tcity: \"\",\r\n\t\tstreet: \"\",\r\n\t\tcountry: \"\",\r\n\t\tpostcode: \"\",\r\n\t\tconsulationPrice: \"\",\r\n\t\topenModalData: false,\r\n\t\tnameError: \"none\",\r\n\t\tCityError: \"none\",\r\n\t\tStreetError: \"none\",\r\n\t\tCountryError: \"none\",\r\n\t\tPostcodeError: \"none\",\r\n\t\tconsulationPriceError: \"none\",\r\n\t\tdescriptionError: \"none\",\r\n\t\topenModal: false,\r\n\t\tcoords: [],\r\n        redirect: false,\r\n        redirectUrl: '',\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.addressInput = React.createRef();\r\n\t}\r\n\r\n\t\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t}\r\n\r\n\thandleModalDataClose = () => {\r\n\t\tthis.setState({ \r\n\t\t\topenModalData: false,\r\n\t\t});\r\n\t};\r\n\r\n\t\r\n\r\n\thandleNameChange = (event) => {\r\n\t\tthis.setState({ name: event.target.value });\r\n\t};\r\n\thandleCityChange = (event) => {\r\n\t\tthis.setState({ city: event.target.value });\r\n\t};\r\n\thandleStreetChange = (event) => {\r\n\t\tthis.setState({ street: event.target.value });\r\n\t};\r\n\thandleCountryChange = (event) => {\r\n\t\tthis.setState({ country: event.target.value });\r\n\t};\r\n\thandlePostcodeChange = (event) => {\r\n\t\tthis.setState({ postcode: event.target.value });\r\n\t};\r\n\r\n\thandleAddressChange = (event) => {\r\n\t\tthis.setState({ address: event.target.value });\r\n\t};\r\n\r\n\thandleConsulationPriceChange = (event) => {\r\n\t\tthis.setState({ consulationPrice: event.target.value });\r\n\t};\r\n\t\r\n\thandleDescriptionChange = (event) => {\r\n\t\tthis.setState({ description: event.target.value });\r\n\t};\r\n\r\n\tvalidateForm = (userDTO) => {\r\n\t\tthis.setState({\r\n\t\t\tnameError: \"none\",\r\n\t\t\tCityError: \"none\",\r\n\t\t\tStreetError: \"none\",\r\n\t\t\tCountryError: \"none\",\r\n\t\t\tPostcodeError: \"none\",\r\n\t\t\tconsulationPriceError: \"none\",\r\n\t\t});\r\n\r\n\t\tif (userDTO.name === \"\") {\r\n\t\t\tthis.setState({ nameError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.address.city === \"\") {\r\n\t\t\tthis.setState({ CityError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.address.street === \"\") {\r\n\t\t\tthis.setState({ StreetError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.address.country === \"\") {\r\n\t\t\tthis.setState({ CountryError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.address.postcode === \"\") {\r\n\t\t\tthis.setState({ PostcodeError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.consulationPrice === \"\") {\r\n\t\t\tthis.setState({ consulationPriceError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t};\r\n\r\n\thandleModalClose = () => {\r\n\t\tthis.setState({ openModal: false });\r\n\t};\r\n\r\n\thandleSignUp = () => {\r\n\r\n\t\t\r\n\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tvar address = {city:this.state.city, street:this.state.street, country: this.state.country, postCode:this.state.postcode};\r\n\r\n\r\n\r\n\t\t\tlet pharmacyDTO = {\r\n\t\t\t\tname: this.state.name,\r\n\t\t\t\taddress: address,\r\n\t\t\t\tdescription: this.state.description,\r\n\t\t\t};\r\n\r\n\r\n\t\t\t\tconsole.log(pharmacyDTO);\r\n\t\t\t\tif (this.validateForm(pharmacyDTO)) {\r\n\r\n\t\t\t\t\tconsole.log(\"usao u zahtev\");\r\n\t\t\t\t\tconsole.log(GetAuthorisation());\r\n\t\t\t\t\tconsole.log(localStorage.getItem(\"keyRole\"));\r\n\t\t\t\t\r\n\t\t\t\t\tAxios.post(\"http://localhost:8080/pharmacy\", pharmacyDTO, {  headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\t\tthis.setState({ openModal: true,redirect : true, redirectUrl : '/' });\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n\t};\r\n\t\r\n\thandleSelectChange  = (event) => {\r\n\t\tthis.setState({ selectValue: event.target.value });\r\n\t};\r\n\r\n\r\n    render() {\r\n\t\tif (this.state.redirect) return <Redirect push to={this.state.redirectUrl} />;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t\r\n\t\t\t\t<Header />\r\n\r\n\t\t\t\t<div className=\"container\" style={{ marginTop: \"2%\" }}>\r\n\t\t\t\t\t<h5 className=\" text-center  mb-0 text-uppercase\" style={{ marginTop: \"2rem\" }}>\r\n\t\t\t\t\t\tRegistrater pharmacy\r\n\t\t\t\t\t</h5>\r\n\r\n\t\t\t\t\t<div className=\"row section-design\">\r\n\t\t\t\t\t\t<div className=\"col-lg-8 mx-auto\">\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<form id=\"contactForm\" name=\"sentMessage\" novalidate=\"novalidate\">\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Name:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleNameChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n\t\t\t\t\t\t\t\t\t\tName must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>City:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"City\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleCityChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.city}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.CityError }}>\r\n\t\t\t\t\t\t\t\t\t\tCity must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Street:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Street\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleStreetChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.street}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.StreetError }}>\r\n\t\t\t\t\t\t\t\t\t\tStreet must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Country:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Country\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleCountryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.country}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.CountryError }}>\r\n\t\t\t\t\t\t\t\t\t\tCountry must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Postcode:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Postcode\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handlePostcodeChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.postcode}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.PostcodeError }}>\r\n\t\t\t\t\t\t\t\t\t\tPostcode must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Description:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Description\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleDescriptionChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.description}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.descriptionError }}>\r\n\t\t\t\t\t\t\t\t\t  Description must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tbackground: \"#1977cc\",\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: \"15px\",\r\n\t\t\t\t\t\t\t\t\t\t\tmarginLeft: \"40%\",\r\n\t\t\t\t\t\t\t\t\t\t\twidth: \"20%\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleSignUp}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-xl\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(RegisterPharmacies);\r\n\r\n\r\n","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\SupplierPages\\OrdersPage.js",["336"],"\r\n\r\nimport { withRouter } from \"react-router\";\r\nimport Header from \"../../Components/Header\";\r\nimport Axios from \"axios\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport orderImage from \"../../Images/orderImage.png\";\r\nimport OfferModal from \"../../Components/SupplierPages/OfferModal\";\r\n\r\n\r\n\r\nclass OrdersPage extends Component {\r\n\tstate = {\r\n\t\tprice: \"\",\r\n\t\tselectedDate: new Date(),\r\n\t\thours: new Date().getHours(),\r\n        minutes: new Date().getMinutes(),\r\n\t\treplacingDrugs:[],\r\n\t\tpharmacyName:\"\",\r\n\t\tshowOfferModal: false,\r\n\t\torderId: \"\",\r\n\t\tshowOrderModal: false,\r\n\t\topenModalSuccess: false,\r\n\t\topenModal: false,\r\n\t\topenModalDrugs: false,\r\n\t\torders:[],\r\n\t\taddress:\"\",\r\n        redirect: false,\r\n        redirectUrl: '',\r\n\t};\r\n\r\n    componentDidMount() {\r\n        Axios.get(\"http://localhost:8080/order/getAllOrders\", { headers: { Authorization: GetAuthorisation() } })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    this.setState({\r\n                        orders: res.data\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"GRESKA\");\r\n                    console.log(err);\r\n                });\r\n        \r\n}\r\n\r\nhandlePriceChange = (event) => {\r\n\tthis.setState({ price: event.target.value });\r\n};\r\n\r\nhandleDateChange = (date) => {\r\n\tthis.setState({ selectedDate: date });\r\n};\r\n\r\nhandleMinutesChange = (event) => {\r\n\tif (event.target.value > 59) this.setState({ minutes: 59 });\r\n\telse if (event.target.value < 0) this.setState({ minutes: 0 });\r\n\telse this.setState({ minutes: event.target.value });\r\n};\r\n\r\nhandleHoursChange = (event) => {\r\n\tif (event.target.value > 23) this.setState({ hours: 23 });\r\n\telse if (event.target.value < 0) this.setState({ hours: 0 });\r\n\telse this.setState({ hours: event.target.value });\r\n};\r\n\r\nhandleOfferClick = (order) => {\r\n\tthis.setState({ \r\n\t\tprice: \"\",\r\n\t\tshowOfferModal: true,\r\n\t\torderId: order.Id,\r\n\t});\r\n\t\r\n};\r\n\r\nhandleModalClose = () => {\r\n\tthis.setState({ \r\n\t\topenModal: false,\r\n\t});\r\n};\r\n\r\nhandleModalDrugsClose = () => {\r\n\tthis.setState({ \r\n\t\topenModalDrugs: false,\r\n\t});\r\n};\r\n\r\nhandleModalSuccessClose = () => {\r\n\tthis.setState({ \r\n\t\topenModalSuccess: false,\r\n\t});\r\n};\r\n\r\nhandleOrderClick = (order) => {\r\n\tconsole.log(order,\"AA\");\r\n\tthis.setState({\r\n\t\t showOrderModal: true,\r\n\t\t address: order.pharmacy.EntityDTO.address.street +\", \"+ order.pharmacy.EntityDTO.address.city +\", \" +\r\n\t\t order.pharmacy.EntityDTO.address.country,\r\n\t\t pharmacyName: order.pharmacy.EntityDTO.name,\r\n\t\t replacingDrugs: order.order\r\n\t});\r\n};\r\n\r\nhandleOfferModalClose = () => {\r\n\tthis.setState({ showOfferModal: false });\r\n};\r\n\r\nhandleOrderModalClose = () => {\r\n\tthis.setState({ showOrderModal: false });\r\n};\r\n\r\nhandleDateChange = (date) => {\r\n\tthis.setState({ selectedDate: date });\r\n};\r\n\r\nhandleOffer = () => {\r\n\t\t\r\n\tif(this.state.price !==\"\"){\r\n\r\n\t\tlet offerDate = new Date(this.state.selectedDate.getFullYear(),this.state.selectedDate.getMonth(),this.state.selectedDate.getDate(),this.state.hours,this.state.minutes,0,0);\r\n\t\tlet OfferDTO = {\r\n\t\t\t\t\t\t\tprice: this.state.price,\r\n\t\t\t\t\t\t\tdateToDelivery: offerDate,\r\n\t\t\t\t\t\t\tid: this.state.orderId,\r\n\t\t\t\t\t\t}\r\n\t\tAxios.put(\"http://localhost:8080/offer/drugsCheck\", OfferDTO ,{ headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(\"usao u drugs check\");\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\tif(res.data){\r\n\t\t\t\t\t\tAxios.post(\"http://localhost:8080/offer\", OfferDTO ,{ headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\topenModalSuccess: true,\r\n\t\t\t\t\t\t\t\t\tshowOfferModal: false,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tAxios.get(\"http://localhost:8080/order/getAllOrders\", { headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\torders: res.data\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"GRESKA\");\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"CREATE GRESKA\");\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\topenModalDrugs: true,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(\"GRESKA\");\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\r\n\t\tconsole.log(OfferDTO, \"AJDE RADI\")\r\n\t}else{\r\n\t\tthis.setState({\r\n\t\t\topenModal: true,\r\n\t\t})\r\n\t}\r\n\t\t\r\n};\r\n\r\n\r\n    render() {\r\n\t\tif (this.state.redirect) return <Redirect push to={this.state.redirectUrl} />;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\r\n\t\t\t\t<Header />\r\n\r\n\t\t\t\t<div className=\"container\" style={{ marginTop: \"2%\" }}>\r\n\t\t\t\t\t<h5 className=\" text-center mb-0 mt-2 text-uppercase\">Orders </h5>\r\n\r\n\t\t\t\t\t<table className=\"table table-hover\" style={{ width: \"100%\", marginTop: \"3rem\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.orders.map((order) => (\r\n\t\t\t\t\t\t\t\t<tr className=\"rounded\">\r\n\t\t\t\t\t\t\t\t\t<td width=\"190em\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={orderImage}  width=\"150em\" />\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Date : </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(order.EntityDTO.date).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Pharmacy : </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{order.EntityDTO.pharmacy.EntityDTO.name}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Address: </b> {order.EntityDTO.pharmacy.EntityDTO.address.street}, {order.EntityDTO.pharmacy.EntityDTO.address.city},{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{order.EntityDTO.pharmacy.EntityDTO.address.country}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"align-middle\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"mt-2\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleOfferClick(order)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCreate an offer\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<OfferModal\r\n\t\t\t\t\tbuttonName=\"Send offer\"\r\n\t\t\t\t\theader=\"Make an offer\"\r\n\t\t\t\t\thandlePriceChange={this.handlePriceChange}\r\n\t\t\t\t\tshow={this.state.showOfferModal}\r\n\t\t\t\t\tprice={this.state.price}\r\n\t\t\t\t\tonCloseModal={this.handleOfferModalClose}\r\n\t\t\t\t\tgiveOffer={this.handleOffer}\r\n\t\t\t\t\thandleDateChange={this.handleDateChange}\r\n\t\t\t\t\tselectedDate={this.state.selectedDate}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n}export default withRouter(OrdersPage);","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\LoyalityProgram\\LoyalityProgram.js",[],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\SupplierPages\\OfferPage.js",["337","338","339"],"import { withRouter } from \"react-router\";\r\nimport Header from \"../../Components/Header\";\r\nimport Axios from \"axios\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport orderImage from \"../../Images/orderImage.png\";\r\nimport OfferModal from \"../../Components/SupplierPages/OfferModal\";\r\nimport EditOfferModal from \"../../Components/SupplierPages/EditOfferModal\";\r\n\r\n\r\n\r\n\r\nclass Offers extends Component {\r\n\tstate = {\r\n\t\tprice: \"\",\r\n        selectedDate:new Date(),\r\n\t\thours: new Date().getHours(),\r\n        minutes: new Date().getMinutes(),\r\n\t\topenModal: false,\r\n\t\topenModalData: false,\r\n\t\tshowOfferModal: false,\r\n\t\topenModalDate: false,\r\n\t\toffers: [],\r\n\t\tofferId: \"\",\r\n        redirect: false,\r\n        redirectUrl: '',\r\n\t};\r\n\r\n\r\n    componentDidMount() {\r\n        Axios.get(\"http://localhost:8080/offer\", { headers: { Authorization: GetAuthorisation() } })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    this.setState({\r\n                        offers: res.data,\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n\r\n        \r\n    }\r\n\r\n\thandleDateChange = (date) => {\r\n\t\tthis.setState({ selectedDate: date});\r\n\t};\r\n\r\n\r\n\thandleMinutesChange = (event) => {\r\n\t\tif (event.target.value > 59) this.setState({ minutes: 59 });\r\n\t\telse if (event.target.value < 0) this.setState({ minutes: 0 });\r\n\t\telse this.setState({ minutes: event.target.value });\r\n\t};\r\n\r\n\thandleHoursChange = (event) => {\r\n\t\tif (event.target.value > 23) this.setState({ hours: 23 });\r\n\t\telse if (event.target.value < 0) this.setState({ hours: 0 });\r\n\t\telse this.setState({ hours: event.target.value });\r\n    };\r\n    \r\n\r\n\thandleModalClose = () => {\r\n\t\tthis.setState({ \r\n\t\t\topenModal: false,\r\n\t\t});\r\n\t};\r\n\r\n\thandleModalDataClose = () => {\r\n\t\tthis.setState({ \r\n\t\t\topenModalData: false,\r\n\t\t});\r\n\t};\r\n\r\n\thandleModalDate = () => {\r\n\t\tthis.setState({ \r\n\t\t\topenModalDate: false,\r\n\t\t});\r\n\t};\r\n\r\n\thandlePriceChange = (event) => {\r\n\t\tthis.setState({ price: event.target.value });\r\n\t};\r\n\r\n\thandleOfferModalClose = () => {\r\n\t\tthis.setState({ showOfferModal: false });\r\n\t};\r\n\r\n\r\n    handleSortByAccepted = () => {\r\n        console.log(\"usao u accept\");\r\n\r\n\t\tAxios.get(\"http://localhost:8080/offer/accepted\", { headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\toffers: res.data,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t});\r\n\t};\r\n\r\n\thandleSortByRejected = () => {\r\n\t\t\r\n\t\tAxios.get(\"http://localhost:8080/offer/rejected\", { headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\toffers: res.data,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t});\r\n\t};\r\n\r\n\thandleSortByWaiting = () => {\r\n\t\t\r\n\t\tAxios.get(\"http://localhost:8080/offer/waiting\", { headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\toffers: res.data,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t});\r\n\t};\r\n\r\n\thandleReset = () => {\r\n\t\t\r\n        Axios.get(\"http://localhost:8080/offer\", { headers: { Authorization: GetAuthorisation() } })\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            this.setState({\r\n                offers: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n\t};\r\n\r\n\thandleOfferClick = (offer) => {\r\n\t\tconsole.log(offer)\r\n\t\tthis.setState({ \r\n\t\t\tprice: offer.EntityDTO.price,\r\n\t\t\tofferId: offer.Id,\r\n\t\t\tdate: offer.EntityDTO.dateToDelivery,\r\n\t\t\tselectedDate: new Date(offer.EntityDTO.dateToDelivery),\r\n\t\t\tshowOfferModal: true \r\n\t\t});\r\n\t\r\n\t};\r\n\r\n\thandleOffer = () => {\r\n\t\t\r\n\t\tif(this.state.price !==\"\"){\r\n\t\t\t\r\n\t\tAxios.get(\"http://localhost:8080/offer/checkUpdate/\" + this.state.offerId, { headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(res.data){\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlet offerDate = new Date(this.state.selectedDate.getFullYear(),this.state.selectedDate.getMonth(),this.state.selectedDate.getDate(),this.state.hours,this.state.minutes,0,0);\r\n\t\t\r\n\t\t\t\t\t\t\tlet OfferDTO = {\r\n\t\t\t\t\t\t\t\tprice: this.state.price,\r\n\t\t\t\t\t\t\t\tdateToDelivery: offerDate,\r\n\t\t\t\t\t\t\t\tid: this.state.offerId,\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tAxios.put(\"http://localhost:8080/offer/update\", OfferDTO ,{ headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t\t\t\tshowOfferModal: false \r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tAxios.get(\"http://localhost:8080/offer\", { headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\toffers: res.data,\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"GRESKA11\");\r\n\t\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tconsole.log(\"GRESKA2\");\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.setState({\r\n\t\t\t\topenModalData: true,\r\n\t\t\t})\r\n\r\n\t\t}\r\n\r\n\t};\r\n   \r\n\r\n\r\n    render() {\r\n\t\tif (this.state.redirect) return <Redirect push to={this.state.redirectUrl} />;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t\r\n\t\t\t\t<Header />\r\n\r\n\t\t\t\t<div className=\"container\" style={{ marginTop: \"2%\" }}>\r\n\t\t\t\t\t<h5 className=\" text-center mb-0 mt-2 text-uppercase\">Offers </h5>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\">\r\n\t\t\t\t\t\t\t<div className=\"form-row mt-3\">\r\n\t\t\t\t\t\t\t\t<div className=\"form-col\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary dropdown-toggle\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"dropdownMenu2\"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-toggle=\"dropdown\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleReset}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tALL\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByAccepted}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tACCEPTED\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByRejected}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tREJECTED\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByWaiting}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tWAITING\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<table className=\"table table-hover\" style={{ width: \"100%\", marginTop: \"3rem\" }}>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{this.state.offers.map((offer) => (\r\n\t\t\t\t\t\t\t\t\t<tr className=\"rounded\">\r\n\t\t\t\t\t\t\t\t\t\t<td width=\"190em\">\r\n\t\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={orderImage} width=\"150em\" />\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Due to date : </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{new Date(offer.EntityDTO.dateToDelivery).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Status : </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{offer.EntityDTO.offerStatus}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Price : </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{offer.EntityDTO.price}{\" \"}din\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"align-middle\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\thidden={offer.EntityDTO.offerStatus !== \"WAITING\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleOfferClick(offer)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tEdit offer\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<EditOfferModal\r\n\t\t\t\t\tbuttonName=\"Edit offer\"\r\n\t\t\t\t\theader=\"Edit an offer\"\r\n\t\t\t\t\thandlePriceChange={this.handlePriceChange}\r\n\t\t\t\t\tshow={this.state.showOfferModal}\r\n\t\t\t\t\tprice={this.state.price}\r\n\t\t\t\t\tdate={this.state.date}\r\n\t\t\t\t\tonCloseModal={this.handleOfferModalClose}\r\n\t\t\t\t\tgiveOffer={this.handleOffer}\r\n\t\t\t\t\tdate={this.state.date}\r\n\t\t\t\t\thandleDateChange={this.handleDateChange}\r\n\t\t\t\t\tselectedDate={this.state.selectedDate}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\r\n\r\n}export default withRouter(Offers);","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Header.js",["340"],"import React from 'react';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Header extends React.Component{\r\n\r\n\r\n      handleLogout = () => {\r\n      localStorage.removeItem(\"keyToken\");\r\n      localStorage.removeItem(\"keyRole\");\r\n      localStorage.removeItem(\"expireTime\");\r\n    };\r\n\r\n    hasRole = (requestRole) => {\r\n      let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n      if (currentRoles === null) return false;\r\n\r\n\r\n      for (let currentRole of currentRoles) {\r\n        if (currentRole === requestRole) return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    IsLogedIn = () => {\r\n      let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n      if (currentRoles === null) return false;\r\n\r\n      \r\n      return true;\r\n    };\r\n\r\n    render(){\r\n      \r\n      \r\n        \r\n    \r\n    \r\n          return(\r\n                  \r\n              \r\n\r\n                <div id=\"header\">\r\n\r\n          \r\n\r\n\r\n                <ReactBootStrap.Navbar collapseOnSelect expand=\"xl\" bg=\"primary\" variant=\"dark\">\r\n                <Link to=\"/\">\r\n                <ReactBootStrap.Navbar.Brand  style={{fontSize : \"35px\"}}>Health clinic</ReactBootStrap.Navbar.Brand>\r\n                </Link>\r\n                <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                \r\n                <ReactBootStrap.Navbar.Collapse  id=\"responsive-navbar-nav\">\r\n              \r\n                <ReactBootStrap.Nav className=\"ml-auto\" >\r\n            \r\n            \r\n            \r\n                <Link to=\"/drugs\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\" hidden={this.hasRole(\"ROLE_PHARMACYADMIN\")}>Drugs</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n\r\n                <Link to=\"/pharmacies\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\" hidden={this.hasRole(\"ROLE_PHARMACYADMIN\")}>Pharmacies</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n                \r\n                <Link to=\"/pharmacies\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\" hidden={!this.hasRole(\"ROLE_PATIENT\") || !this.hasRole(\"ROLE_SYSADMIN\")}>Pharmacies</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n              \r\n                <Link to=\"/adminpharmacy\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\" hidden={!this.hasRole(\"ROLE_PHARMACYADMIN\")}>My Pharmacy</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n\r\n\r\n              \r\n\r\n                <ReactBootStrap.NavDropdown alignRight title=\"My reports\" id=\"collasible-nav-dropdown\" hidden={!this.hasRole(\"ROLE_PATIENT\")} >\r\n\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/futureDermatologistAppointmentsForPatient\">Dermatologist</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider />\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/futurePharmaciesConsultationsForPatient\">Pharmacies</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider />\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/patientsSubscribedPharmacies\">Subscribed pharmacies</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider />\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/futureDrugsReservationForPatient\">Drugs reservations</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider />\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/allPatients-E-receipts\">E-receipts</ReactBootStrap.NavDropdown.Item>\r\n                </ReactBootStrap.NavDropdown>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <ReactBootStrap.NavDropdown alignRight title=\"Apointment\" id=\"collasible-nav-dropdown\" hidden={!this.hasRole(\"ROLE_PATIENT\")} >\r\n\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/pharmacistAppointment\">Pharmacist</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider />\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/dermatologistAppointment\">Dermatologist</ReactBootStrap.NavDropdown.Item>\r\n                    \r\n                </ReactBootStrap.NavDropdown>\r\n\r\n                <Link to=\"/qrCode\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\" hidden={!this.hasRole(\"ROLE_PATIENT\")} >Scan QR code</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n\r\n                <ReactBootStrap.NavDropdown alignRight title=\"Register\" hidden={!this.hasRole(\"ROLE_SYSADMIN\")} id=\"collasible-nav-dropdown\">\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/registerStaff\" >Stuff member</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/registerPharmacies\" >Pharmacy</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/registerDrug\" >Drug</ReactBootStrap.NavDropdown.Item>\r\n                    \r\n                    \r\n                </ReactBootStrap.NavDropdown>\r\n                <ReactBootStrap.NavDropdown alignRight title=\"Complaints\" hidden={!this.hasRole(\"ROLE_SYSADMIN\")} id=\"collasible-nav-dropdown\">\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/staffComplains\" >Employee complaints</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/pharmacyComplains\" >Pharmacy complaints</ReactBootStrap.NavDropdown.Item>\r\n                    \r\n                    \r\n                    \r\n                </ReactBootStrap.NavDropdown>\r\n\r\n                <Link to=\"/loyalityProgram\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\" hidden={!this.hasRole(\"ROLE_SYSADMIN\")} >Loyality Program</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n\r\n                <Link to=\"/orders\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\" hidden={!this.hasRole(\"ROLE_SUPPLIER\")} >Orders</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n\r\n                <Link to=\"/offers\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\" hidden={!this.hasRole(\"ROLE_SUPPLIER\")} >Offers</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n\r\n                <Link to=\"/dermCalendar\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\" hidden={!this.hasRole(\"ROLE_DERMATHOLOGIST\")} >Calendar</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n\r\n                <Link to=\"/pharmCalendar\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\" hidden={!this.hasRole(\"ROLE_PHARMACIST\")} >Calendar</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n\r\n                  \r\n                <ReactBootStrap.NavDropdown alignRight title=\"User\" id=\"collasible-nav-dropdown\">\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/login\" hidden={this.IsLogedIn()}>Login</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider hidden={this.IsLogedIn()} />\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/registration\" hidden={this.IsLogedIn()}>Register</ReactBootStrap.NavDropdown.Item>\r\n\r\n\r\n                   \r\n                    \r\n\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/userProfile\" hidden={(!this.hasRole(\"ROLE_DERMATHOLOGIST\") && !this.hasRole(\"ROLE_PHARMACIST\") && !this.hasRole(\"ROLE_PATIENT\") && !this.hasRole(\"ROLE_SUPPLIER\") && !this.hasRole(\"ROLE_PHARMACYADMIN\"))}>My profile</ReactBootStrap.NavDropdown.Item>\r\n\r\n                    <ReactBootStrap.NavDropdown.Divider hidden={!this.IsLogedIn()} />\r\n                    <ReactBootStrap.NavDropdown.Item onClick={this.handleLogout} href=\"/login\" hidden={!this.IsLogedIn(\"*\")}>Log out</ReactBootStrap.NavDropdown.Item>\r\n\r\n                </ReactBootStrap.NavDropdown>\r\n            \r\n            \r\n                </ReactBootStrap.Nav>\r\n            \r\n              </ReactBootStrap.Navbar.Collapse>\r\n            \r\n            </ReactBootStrap.Navbar>\r\n            \r\n            \r\n                    </div>\r\n\r\n\r\n\r\n              )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Header;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\DrugSpecification.js",["341"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport MedicamentPicture from \"../Images/medicament.jpg\" ;\r\n\r\nclass DrugSpecification extends Component {\r\n\r\n\tstate = {\r\n\t\tingredients: this.props.ingredients,\r\n\t\treplacingDrugs: this.props.replacingDrugs\r\n\t};\r\n\t\r\n\t\r\n\tcomponentDidMount() {\r\n\t\r\n\t\tconsole.log(this.state.ingredients)\r\n\t\tconsole.log(this.state.replacingDrugs)\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tshow={this.props.show}\r\n\t\t\t\tdialogClassName=\"modal-80w-300h\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\tonHide={this.props.onCloseModal}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">{this.props.header}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form className=\"ml-3\">\r\n\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t<div className=\"form-group controls\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t<div className=\"form-row\" width=\"130em\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={MedicamentPicture} width=\"90em\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-col\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Name: </b> {this.props.drugName}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Manufacturer: </b> {this.props.drugManufacturer}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Quantity: </b> {this.props.drugQuantity} <b>mg</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<div className=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div className=\"form-col\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<b>Drug kind: </b> {this.props.drugKind}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<b>Drug format: </b> {this.props.drugFormat}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<b>Recommended amount: </b> {this.props.drugAmount}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<b>Side effects: </b> {this.props.sideEffects}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<b>Ingredients: {\" \"}</b>\r\n\t\t\t\t\t\t\t\t\t\t{this.props.ingredients.map((ingredient) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i>{ingredient.EntityDTO.name}, </i>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Replacing drugs: {\" \"}</b>\r\n\t\t\t\t\t\t\t\t\t\t{this.props.replacingDrugs.map((drug) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i>{drug.EntityDTO.drugInstanceName}, </i>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<b>On reciept: </b> {this.props.onReciept ? 'Yes' : 'No'}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<b>Loyalty points: </b> {this.props.points}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.props.onCloseModal}>Close</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DrugSpecification;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\TopBar.js",["342","343"],"import React from 'react';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass TopBar extends React.Component{\r\n\r\n    handleLogout = () => {\r\n        localStorage.removeItem(\"keyToken\");\r\n        localStorage.removeItem(\"keyRole\");\r\n        localStorage.removeItem(\"expireTime\");\r\n      };\r\n  \r\n      \r\n  \r\n      IsLogedIn = () => {\r\n        let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n  \r\n        if (currentRoles === null) return false;\r\n  \r\n        \r\n        return true;\r\n      };\r\n    \r\n\r\n    render(){\r\n        const myStyle = {\r\n\t\t\tmargin: 10,\r\n\t\t};\r\n        return(\r\n            \r\n\r\n          <div id=\"topbar\" className=\"ml-auto\" >\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t<div className=\" ml-auto container register-login\">\r\n\t\t\t\t\t\t<Link to=\"/registration\" hidden={this.IsLogedIn()}>\r\n\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t</Link>\r\n            <i ></i>{\" \"}\r\n\t\t\t\t\t\t<Link to=\"/login\" hidden={this.IsLogedIn()}>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Link>\r\n            <i className=\"icofont-envelope\"></i>{\" \"}\r\n\t\t\t\t\t\t<Link onClick={this.handleLogout} to=\"/login\" hidden={!this.IsLogedIn()}>\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default TopBar;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies\\PharmaciesWithDrugAndPrice.js",["344","345"],"import React, { Component } from \"react\";\r\nimport PharmacyLogoPicture from \"../../Images/pharmacyLogo.jpg\" ;\r\nimport SuccessfulAlert from \"../Alerts/SuccessfulAlert\";\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass PharmaciesWithDrugAndPrice extends Component {\r\n\t\r\n    \r\n    \r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div hidden={!this.props.show} className=\"container\">\r\n                       \r\n                            <SuccessfulAlert\r\n                                hidden={this.props.hiddenSuccessfulAlert}\r\n                                header={this.props.SuccessfulHeader}\r\n                                message={this.props.SuccessfulMessage}\r\n                                handleCloseAlert={this.props.handleCloseSuccessfulAlert}\r\n                            />\r\n                      \r\n\r\n\r\n                <button  type=\"button\" class=\"btn btn-link btn-lg\"\r\n                        onClick={this.props.back} \r\n                         style={{ width: \"100px\" , marginTop: \"40px\", marginLeft: \"5em\"}}>        \r\n                          Back\r\n                </button>\r\n\r\n\r\n               \r\n\r\n                <div className=\"container\">\r\n                    <h1 hidden={this.props.pharmacies.length!==0}   className=\" text-center  mt-3  text-danger\" >Drug is not available </h1>\r\n                    <h1 hidden={this.props.pharmacies.length===0}   className=\" text-center  mt-3 \" >Pharmacies where is drug available </h1>\r\n                    \r\n                    <table className=\"table\" style={{ width: \"70%\", marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n                        \r\n                        <tbody>\r\n                            {\r\n                                this.props.pharmacies.map((pharmacy) => (\r\n                                    <tr key={pharmacy.Id} \r\n                                         id={pharmacy.Id} >\r\n                                       \r\n                                      <td width=\"100px\">  \r\n                                       \r\n                                        <img src={PharmacyLogoPicture} width=\"70px\"></img>                                 \r\n                                     \r\n                                      </td>\r\n\r\n\r\n                                      <td>\r\n                                        \r\n                                        <div>  \r\n                                        <b>Name: </b>{pharmacy.EntityDTO.name}\r\n                                        </div>  \r\n\r\n                                        <div>  \r\n                                        <b>Location: </b> {pharmacy.EntityDTO.address.street}, {\" \"} {pharmacy.EntityDTO.address.city},{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t                                      {pharmacy.EntityDTO.address.country}\r\n                                        </div> \r\n\r\n                                        <div>  \r\n                                        <b>Description: </b>{pharmacy.EntityDTO.description}\r\n                                        </div>\r\n\r\n\r\n                                        <div>\r\n                                        <b>Drug price: </b> {pharmacy.drugPrice} {\" \"} \r\n                                        <b>din</b>\r\n                                        \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n                                      </td>\r\n\r\n                                      <td>\r\n                                                <button\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-outline-primary\"\r\n                                                        style={{  marginTop: \"25px\" }}\r\n                                                        onClick={() => this.props.openReservationDialog(pharmacy)}\r\n                                                >\r\n                                                        Reserve drug\r\n                                                </button>\r\n                                    </td>  \r\n\r\n\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n\r\n\r\n\r\n                   \r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PharmaciesWithDrugAndPrice;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\ModalDialog.js",[],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\CreateComplaintModal.js",[],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\SupplierPages\\OfferModal.js",["346"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\"\r\nimport datepicker from \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nclass OfferModal extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tshow={this.props.show}\r\n\t\t\t\tdialogClassName=\"modal-80w-150h\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\tonHide={this.props.onCloseModal}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">\r\n\t\t\t\t\t\t{this.props.header}\r\n\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<h5>Give offer</h5>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<label>Price:</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Price\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tid=\"complaints\"\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.props.price}\r\n\t\t\t\t\t\t\t\t\tonChange={this.props.handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<label>Due to date:</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tminDate={new Date()}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => this.props.handleDateChange(date)}\r\n\t\t\t\t\t\t\t\t\tselected={this.props.selectedDate}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Button className=\"mt-3\" onClick={this.props.giveOffer}>\r\n\t\t\t\t\t\t\t\t\t{this.props.buttonName}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.props.onCloseModal}>Close</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default OfferModal;\r\n","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\SupplierPages\\EditOfferModal.js",[],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Funciton\\GetAuthorisation.js",[],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\ReservationDrugsModal.js",[],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Alerts\\UnsuccessfulAlert.js",[],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\ChangePasswordModal.js",["347"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport UnsuccessfulAlert from \"../Alerts/UnsuccessfulAlert\";\r\n\r\nclass ChangePasswordModal extends Component {\r\n\tstate = {\r\n\t\toldPassword: \"\",\r\n\t\tnewPassword: \"\",\r\n\t\tnewPasswordRepeated: \"\",\r\n\t};\r\n\r\n\thandleOldPassword = (event) => {\r\n\t\tthis.setState({ oldPassword: event.target.value });\r\n\t};\r\n\r\n\thandleNewPasswordFirst = (event) => {\r\n\t\tthis.setState({ newPassword: event.target.value });\r\n\t};\r\n\r\n\thandleNewPasswordRepeat= (event) => {\r\n\t\tthis.setState({ newPasswordRepeated: event.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tshow={this.props.show}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tdialogClassName=\"modal-100w-100h\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\tonHide={this.props.onCloseModal}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">{this.props.header}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<UnsuccessfulAlert\r\n\t\t\t\t\t\thidden={this.props.hiddenPasswordErrorAlert}\r\n\t\t\t\t\t\theader={this.props.errorPasswordHeader}\r\n\t\t\t\t\t\tmessage={this.props.errorPasswordMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.props.handleCloseAlertPassword}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t<div className=\"form-group \" >\r\n\t\t\t\t\t\t\t<label>Old password:</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Old password\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleOldPassword}\r\n\t\t\t\t\t\t\t\tvalue={this.state.oldPassword}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.props.emptyOldPasswordError }}>\r\n\t\t\t\t\t\t\tOld password must be entered.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t<div className=\"form-group\" >\r\n\t\t\t\t\t\t\t<label>New password:</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"New password\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleNewPasswordFirst}\r\n\t\t\t\t\t\t\t\tvalue={this.state.newPassword}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.props.emptyNewPasswordError }}>\r\n\t\t\t\t\t\t\tNew password must be entered!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t<div className=\"form-group \" >\r\n\t\t\t\t\t\t\t<label>Repeat new password:</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Repeat new password\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleNewPasswordRepeat}\r\n\t\t\t\t\t\t\t\tvalue={this.state.newPasswordRepeated}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.props.emptyNewPasswordRepeatedError }}>\r\n\t\t\t\t\t\t\tRepeat the new password!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.props.newPasswordAndRepeatedNotSameError }}>\r\n\t\t\t\t\t\t\tPasswords must be same!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group text-center\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tstyle={{ background: \"#1977cc\", marginTop: \"15px\" }}\r\n\t\t\t\t\t\t\tonClick={() => this.props.changePassword(this.state.oldPassword, this.state.newPassword, this.state.newPasswordRepeated)}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-xl\"\r\n\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tChange password\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n            \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ChangePasswordModal;\r\n","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Alerts\\SuccessfulAlert.js",[],"C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\EreceiptDrugsModal.js",["348","349","350"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport UnsuccessfulAlert from \"../../Components/Alerts/UnsuccessfulAlert\";\r\nimport drugPicture from \"../../Images/medicament.jpg\" ;\r\n\r\nclass EreceiptDrugsModal extends Component {\r\n\t\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tshow={this.props.showDrugModal}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tdialogClassName=\"modal-100w-100h\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\tonHide={this.props.closeModal}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\" >Drugs</Modal.Title>\r\n\t\t\t\t\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\r\n                <table className=\"table\" >\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.props.drugs.map((drug) => (\r\n\t\t\t\t\t\t\t\t<tr id={drug.Id} key={drug.Id}>\r\n\t\t\t\t\t\t\t\t\t<td width=\"130em\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={drugPicture} width=\"90em\" />\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Name:</b> {drug.EntityDTO.drugName}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Count:</b> {drug.EntityDTO.drugCount}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n                <div className=\"form-group text-center\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\thidden={this.props.hideSuccessfulModalButton}\r\n\t\t\t\t\t\t\tstyle={{ background: \"#1977cc\", marginTop: \"15px\" }}\r\n\t\t\t\t\t\t\tonClick={() => this.props.closeModal()}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-xl\"\r\n\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tOk\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n            \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EreceiptDrugsModal;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\FirstGradeModal.js",["351"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Star from \"../../Images/rating.png\";\r\n\r\nclass FirstGradeModal extends Component {\r\n\t\r\n\r\n    state = {\r\n\t\t\r\n\t\tgrade: 1,\r\n        minGrade : 1\r\n       \r\n\t};\r\n\r\n\r\n    componentDidMount() {\r\n\t\t\r\n        this.setState({ grade : this.props.employeeGrade,\r\n            minGrade : 1  });\r\n\t\t\r\n         \r\n\t}\r\n\r\n\r\n    handleGradeChange = (event) => {\r\n\t\t\r\n        if (event.target.value > this.props.maxGrade) this.setState({ grade: this.props.maxGrade });\r\n        else if (event.target.value < 1) this.setState({ grade: 1 });\r\n        else this.setState({ grade: event.target.value });\r\n   };\r\n    \r\n    \r\n    render() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tshow={this.props.show}\r\n\t\t\t\tdialogClassName=\"modal-80w-80h\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\tonHide={this.props.onCloseModal}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">\r\n\t\t\t\t\t\t{this.props.header}\r\n\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<h5>{\"Grade \" + this.props.employeeName + \" \" + this.props.employeeSurname}</h5>\r\n\r\n                            <div className=\"form-inline \">\r\n                                <div style={{ marginTop: \"1em\" }} >\r\n\t\t\t\t\t\t\t\t\t<b>Grade:</b>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"11em\" }}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\tmin={this.state.minGrade}\r\n\t\t\t\t\t\t\t\t\t\tmax={this.props.maxGrade}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleGradeChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.grade}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>                    \r\n\r\n                                <img\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tclassName=\"img-fluid  ml-3\"\r\n\t\t\t\t\t\t\t\tstyle={{ width: \"11em\", marginTop : \"5px\" }}\r\n\t\t\t\t\t\t\t\tsrc={Star}\r\n\t\t\t\t\t\t\t\twidth=\"50em\"\r\n                                \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t    />\r\n                         </div>\r\n                                <div class=\"container bg-light\">\r\n                                    <div class=\"col-md-12 text-center\">\r\n                                        <button hidden={!this.props.showFirstGrade} \r\n                                        onClick={() => this.props.setFirstGrade(this.state.grade)}\r\n                                        type=\"button\" class=\"btn btn-primary\"\r\n                                        >{this.props.buttonFirstGradeName}</button>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"container bg-light\" >\r\n                                    <div class=\"col-md-12 text-center\">\r\n                                        <button hidden={!this.props.showModifyGrade}\r\n                                        onClick={() => this.props.setModifyGrade(this.state.grade)}\r\n                                        type=\"button\" class=\"btn btn-primary\"\r\n                                        >{this.props.buttonModifyGradeName}</button>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n\t\t\t\t\r\n                    \r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.props.onCloseModal}>Close</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FirstGradeModal;\r\n","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Consultations\\HistoryPharmacistConsultation.js",["352","353"],"import React, { Component } from \"react\";\r\nimport PharmacistPicture from \"../../Images/pharmacist.png\" ;\r\nimport Axios from \"axios\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nimport CreateComplaintModal from \"../../Components/CreateComplaintModal\";\r\n\r\n\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass HistoryPharmacistConsultation extends Component {\r\n\r\n\r\n\tstate = {\r\n\t\t\r\n\t\tshowComplaintModal: false,\r\n\t\tStaffName: \"\",\r\n\t\tStaffSurame: \"\",\r\n\t\tcomplaint: \"\",\r\n\t\tstaffId : \"\",\r\n\t\tDate : new Date(),\r\n\t\ttext : \"\",\r\n\t\tprofession : \"\",\r\n\t\t\r\n\t};\r\n\r\n\thandleComplaintChange = (event) => {\r\n\t\tthis.setState({ text: event.target.value });\r\n\t};\r\n\r\n\t\r\n\thandleComplaintModalClose = () => {\r\n\t\tthis.setState({ showComplaintModal: false });\r\n\t};\r\n\r\n\thandleStuffIdChange = (stuffID) => {\r\n\t\tthis.setState({ staffId: stuffID });\r\n\t};\r\n\r\n\thandleComaplaint = () => {\r\n\t\tlet ComplaintStaffDTO = {\r\n\t\t\tstaffId: this.state.selectedStaffId,\r\n\t\t\tdate: new Date(),\r\n\t\t\ttext: this.state.text,\r\n\t\t\tstaffName: this.state.StaffName,\r\n\t\t\tstaffSurname: this.state.StaffSurame,\r\n\t\t\tprofession: \"\",\r\n\t\t\treply: \"\",\r\n\t\t\temail: \"\",\r\n\t\t};\r\n\r\n\t\tAxios.post(\"http://localhost:8080/complaint\", ComplaintStaffDTO, { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t.then((resp) => {\r\n\t\t\t\tif (resp.status === 500) {\r\n\t\t\t\t\tthis.setState({ hiddenFailAlert: false, failHeader: \"Internal server error\", failMessage: \"Server error.\" });\r\n\t\t\t\t} else if (resp.status === 201) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({ showComplaintModal: false });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\thandleComplaintClick = (staff) => {\r\n\t\tconsole.log(staff);\r\n\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tselectedStaffId: staff.Id,\r\n\t\t\t\t\t\tshowComplaintModal: true,\r\n\t\t\t\t\t\tStaffName: staff.EntityDTO.name,\r\n\t\t\t\t\t\tStaffSurame: staff.EntityDTO.surname,\r\n\t\t\t\t\t\tprofession : staff.EntityDTO.profession,\r\n\t\t\t\t\t\tgrade: 0,\r\n\t\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t};\r\n\t\r\n    \r\n    \r\n    render() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t<div className=\"container\" hidden={this.props.hideHistoryConsultations }>\r\n                    \r\n\t\t\t<div className=\"container\" style={{  marginTop: \"2em\" }}>\r\n\r\n\t\t\t<div className=\"dropdown\">\r\n            <button className=\"btn btn-primary btn-lg dropdown-toggle\"\r\n             type=\"button\" id=\"dropdownMenu2\"\r\n              data-toggle=\"dropdown\" \r\n              aria-haspopup=\"true\" \r\n              aria-expanded=\"false\">\r\n              Sort\r\n            </button>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n              <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPriceAscending} >Sort by price ascending</button>\r\n              <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPriceDescending} >Sort by price descending</button>\r\n              <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByDateAscending} >Sort by date ascending</button>\r\n              <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByDateDescending} >Sort by date descending</button>\r\n\t\t\t  <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByDurationAppointmentAscending} >Sort by duration appointment ascending</button>\r\n              <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByDurationAppointmentDescending} >Sort by duration appointment descending</button>\r\n            </div>\r\n          </div>\r\n\r\n\t\t  </div>\r\n\r\n\r\n\r\n\t\t\t<h1 hidden={this.props.appointments.length === 0 || this.props.hideHistoryConsultations } className=\"text-center  mt-3  \" >Your history pharmacist consultations!</h1>\r\n\t\t\t<h1 hidden={this.props.appointments.length !== 0 || this.props.hideHistoryConsultations} className=\"text-center  mt-3 text-danger\"  >You don't have history pharmacist consultations!</h1>\r\n\r\n\r\n          <table className=\"table table-hover\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.props.appointments.map((appointment) => (\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tkey={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t>\r\n\r\n                   <td width=\"100px\">  \r\n                     <img  src={PharmacistPicture} style={{ width: \"85px\", marginTop: \"15px\" }}></img>                                 \r\n                                    \r\n                    </td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Start time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.endDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price:</b>{\" \"}\r\n                                         {appointment.EntityDTO.price }\r\n                                             <b>  din</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                  \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Pharmacist: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{appointment.EntityDTO.employee.EntityDTO.name + \" \" + appointment.EntityDTO.employee.EntityDTO.surname}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                         <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Pharmacist grade: </b> {appointment.EntityDTO.employee.EntityDTO.grade} {\" \"} \r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                      \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<td className=\"align-middle\">\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginLeft: \"55%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleComplaintClick(appointment.EntityDTO.employee)}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tMake complaint\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginLeft: \"55%\",marginTop: \"1em\"  }}>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.props.handleGetGradeClick(appointment.EntityDTO.employee)}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tPharmacist grade\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                                    \r\n                                    \r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n                \r\n\r\n\r\n\r\n          \r\n        </div>\r\n\r\n\t\t<CreateComplaintModal\r\n\t\t\t\t\tbuttonName=\"Send complaint\"\r\n\t\t\t\t\theader=\"Give complaint\"\r\n\t\t\t\t\thandleComplaintChange={this.handleComplaintChange}\r\n\t\t\t\t\tshow={this.state.showComplaintModal}\r\n\t\t\t\t\tonCloseModal={this.handleComplaintModalClose}\r\n\t\t\t\t\tgiveFeedback={this.handleComaplaint}\r\n\t\t\t\t\tname={this.state.StaffName + \" \" + this.state.StaffSurame}\r\n\t\t\t\t\tforWho=\"consultant\"\r\n\t\t\t\t\thandleClickIcon={this.handleClickIcon}\r\n\t\t\t\t\tcomplaint={this.state.complaint}\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t</React.Fragment>\r\n\t\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default HistoryPharmacistConsultation;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Reservations\\HistoryDrugsReservations.js",["354","355","356"],"import React, { Component } from \"react\";\r\nimport Header from '../../Components/Header';\r\nimport drugPicture from \"../../Images/medicament.jpg\" ;\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass HistoryDrugsReservations extends Component {\r\n\t\r\n  \r\n    \r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n \r\n\r\n\t\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      \r\n         <div className=\"container\"  hidden={this.props.hideHistoryReservations }>\r\n\r\n\r\n         <h1 hidden={this.props.drugsReservations.length === 0 || this.props.hideHistoryDrugsReservations  } className=\"text-center  mt-3  \" >Your drugs reservations in history!</h1>\r\n         <h1 hidden={this.props.drugsReservations.length !== 0 || this.props.hideHistoryDrugsReservations } className=\"text-center  mt-3 text-danger\"  >You don't have drugs reservations in history!</h1>\r\n\r\n\r\n\r\n        \r\n   \r\n        <div className=\"container\" hidden={this.props.hideHistoryDrugsReservations }>\r\n                    \r\n          <table className=\"table table-hover\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.props.drugsReservations.map((drugReservation) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={drugReservation.Id}\r\n\t\t\t\t\t\t\t\t\tkey={drugReservation.Id}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\r\n                   <td width=\"100px\">  \r\n                     <img  src={drugPicture} style={{ width: \"85px\", marginTop: \"15px\" }}></img>                                 \r\n                                    \r\n                    </td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Start date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(drugReservation.EntityDTO.startDate).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Start time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(drugReservation.EntityDTO.startDate).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                        <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(drugReservation.EntityDTO.endDate).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>    \r\n\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(drugReservation.EntityDTO.endDate).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price :</b>{\" \"}\r\n                                            <b style={{color : \"red\"}}> {(Math.round(drugReservation.EntityDTO.oneDrugPrice * drugReservation.EntityDTO.count * 100) / 100).toFixed(2)} </b>\r\n                                            <b>  din</b>\r\n                                             \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                  \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Pharmacy name : </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{drugReservation.EntityDTO.pharmacy.EntityDTO.name }\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                        <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Pharmacy address: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{drugReservation.EntityDTO.pharmacy.EntityDTO.address.street + \", \" + drugReservation.EntityDTO.pharmacy.EntityDTO.address.city + \", \" + drugReservation.EntityDTO.pharmacy.EntityDTO.address.country }\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                                    \r\n\t\t\t\t\t\t\t\t\t\t                              \r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n                </div>\r\n\r\n\r\n\r\n          \r\n        </div>\r\n\r\n\r\n\t\t\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\r\n\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default HistoryDrugsReservations;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\DrugsEReceiptsModal.js",["357","358","359"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport UnsuccessfulAlert from \"../../Components/Alerts/UnsuccessfulAlert\";\r\nimport eReceiptsPicture from \"../../Images/notepad.png\" ;\r\n\r\nclass DrugsEReceiptsModal extends Component {\r\n\t\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tshow={this.props.showModal}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tdialogClassName=\"modal-100w-100h\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\tonHide={this.props.closeModal}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\" >Drugs</Modal.Title>\r\n\t\t\t\t\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\r\n                <table className=\"table\" >\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.props.eReceipts.map((eRecept) => (\r\n\t\t\t\t\t\t\t\t<tr id={eRecept.Id}\r\n                                     key={eRecept.Id}>\r\n\t\t\t\t\t\t\t\t\t\r\n                                    <td width=\"130em\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={eReceiptsPicture} width=\"90em\" />\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n                                         <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Creation Date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(eRecept.EntityDTO.creationDate).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n                                        \r\n                                        <div  >\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t    <b style={{ color: \"red\", marginLeft : \"2px\" }}> {eRecept.EntityDTO.price} </b>\r\n                                            <b>din</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                        <div  >\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Pharmacy name: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t    {eRecept.EntityDTO.pharmacyName}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                        <div  >\r\n\t\t\t\t\t\t\t\t\t\t\t<b>status:</b>\r\n\t\t\t\t\t\t\t\t\t\t   <b style={{ color: \"blue\" }}> {eRecept.EntityDTO.status}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n                <div className=\"form-group text-center\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\thidden={this.props.hideSuccessfulModalButton}\r\n\t\t\t\t\t\t\tstyle={{ background: \"#1977cc\", marginTop: \"15px\" }}\r\n\t\t\t\t\t\t\tonClick={() => this.props.closeModal()}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-xl\"\r\n\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tOk\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n            \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DrugsEReceiptsModal;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\ReservedConsultationModal.js",["360","361"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport UnsuccessfulAlert from \"../../Components/Alerts/UnsuccessfulAlert\";\r\n\r\nclass ReservedConsultationModal extends Component {\r\n\t\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tshow={this.props.show}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tdialogClassName=\"modal-80w-80h\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\tonHide={this.props.onCloseModal}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\" >{this.props.modalTitle}</Modal.Title>\r\n\t\t\t\t\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\r\n                <b1  className=\"text-center  mt-3  \" hidden={this.props.hideSuccessfulModalText} >You successful reserved pharmacist consultation! All information about it will be sent on your email!</b1>\r\n\r\n\t\t\t\t<div className=\"text-danger\" >\r\n\t\t\t\t\t\t\t\t\t\t{this.props.errorMessageForReservation }\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n                <div className=\"form-group text-center\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\thidden={this.props.hideSuccessfulModalButton}\r\n\t\t\t\t\t\t\tstyle={{ background: \"#1977cc\", marginTop: \"15px\" }}\r\n\t\t\t\t\t\t\tonClick={() => this.props.closeModal()}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-xl\"\r\n\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tOk\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n            \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ReservedConsultationModal;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies\\FoundPharmaciesForDateRange.js",["362","363","364","365"],"import React, { Component } from \"react\";\r\nimport PharmacyLogoPicture from \"../../Images/pharmacyLogo.jpg\" ;\r\nimport Axios from \"axios\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\n\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass FoundPharmaciesForDateRange extends Component {\r\n\t\r\n    \r\n    \r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div hidden={this.props.hiddenPharmacies}>\r\n\r\n\r\n                <button  type=\"button\" class=\"btn btn-link btn-lg\"\r\n                        onClick={this.props.backToSelectedDateRange} \r\n                         style={{ width: \"100px\" , marginTop: \"40px\", marginLeft: \"5em\"}}>        \r\n                          Back\r\n                </button>\r\n\r\n\r\n               \r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"container\">\r\n                    \r\n\r\n                <div className=\"dropdown\" style={{  marginTop: \"3em\" }}>\r\n                        <button className=\"btn btn-primary btn-lg dropdown-toggle\"\r\n                            type=\"button\" id=\"dropdownMenu2\"\r\n                            data-toggle=\"dropdown\" \r\n                            aria-haspopup=\"true\" \r\n                            aria-expanded=\"false\">\r\n                            Sort\r\n                        </button>\r\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPriceAscending} >Sort by price ascending</button>\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPriceDescending} >Sort by price descending</button>\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPharmacyGradeAscending} >Sort by pharmacy grade ascending</button>\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPharmacyGradeDescending} >Sort by pharmacy grade descending</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                    \r\n                    <table className=\"table table-hover\" style={{ width: \"90%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n                                  <tbody>\r\n                                      {this.props.pharmacies.map((pharmacy) => (\r\n                                          <tr\r\n                                              id={pharmacy.Id}\r\n                                              key={pharmacy.Id}\r\n                                              style={{ cursor: \"pointer\" }}\r\n                                          >\r\n          \r\n                                            <td width=\"100px\">  \r\n                                            <img  src={PharmacyLogoPicture} style={{ width: \"85px\", marginTop: \"15px\" }}></img>                                 \r\n                                                            \r\n                                            </td>\r\n                                              \r\n                                              <td>\r\n                                                            \r\n                                                    <div>\r\n                                                        <b>Name: </b> {pharmacy.EntityDTO.name}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <b>Address: </b> {pharmacy.EntityDTO.address.street}, {pharmacy.EntityDTO.address.city},{\" \"}\r\n                                                        {pharmacy.EntityDTO.address.country}\r\n                                                    </div>\r\n\r\n                                                    <div>\r\n                                                        <b>Consultation price:</b>{\" \"}\r\n                                                        \r\n                                                        {pharmacy.EntityDTO.price}                \r\n                                                        <b> din</b>\r\n                                                    </div>\r\n\r\n                                                    <div>\r\n                                                        <b>Grade: </b> {pharmacy.EntityDTO.grade}\r\n                                                        <i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                                                    </div>\r\n                                            \r\n                                                  \r\n                                              </td>\r\n\r\n                                            <td>\r\n                                                <button\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-outline-primary\"\r\n                                                        style={{  marginTop: \"25px\" }}\r\n                                                        onClick={() => this.props.showPharmacistForPharmacy(pharmacy)}\r\n                                                >\r\n                                                        Show pharmacists\r\n                                                </button>\r\n                                            </td>\r\n\r\n\r\n\r\n                                          </tr>\r\n                                      ))}\r\n                                  </tbody>\r\n                              </table>\r\n                    </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FoundPharmaciesForDateRange;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\AllergensModal.js",["366","367","368"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nimport UnsuccessfulAlert from \"../Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Alerts/SuccessfulAlert\";\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass AllergensModal extends Component {\r\n\tstate = {\r\n\t\tallAllergens: [],\r\n        newAllergen : \"\"\r\n\t};\r\n\r\n\r\n    componentDidMount() {\r\n\t\tthis.setState({ allAllergens: this.props.userAllergens });\r\n\t}\r\n\r\n\r\n    handleChangeNewAllergen= (event) => {\r\n\t\tthis.setState({ newAllergen: event.target.value });\r\n\t};\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tshow={this.props.show}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tdialogClassName=\"modal-80w-80h\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\tscrollable\r\n\t\t\t\tonHide={this.props.onCloseModal}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">{this.props.header}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<SuccessfulAlert\r\n\t\t\t\t\t\thidden={this.props.hiddenAllergenSuccessfulAlert}\r\n\t\t\t\t\t\theader={this.props.successfulAllergenHeader}\r\n\t\t\t\t\t\tmessage={this.props.successfulAllergenMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.props.handleCloseAllergenAlertSuccessful}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<UnsuccessfulAlert\r\n\t\t\t\t\t\thidden={this.props.hiddenAllergenErrorAlert}\r\n\t\t\t\t\t\theader={this.props.errorAllergenHeader}\r\n\t\t\t\t\t\tmessage={this.props.errorAllergenMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.props.handleCloseAllergenAlertError}\r\n\t\t\t\t\t/>\r\n\r\n\r\n                    <div  className=\"form-group\">\r\n                    <div className=\"form-row justify-content-center mr-3\">\r\n                          \r\n                            <div  className=\"mr-2\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Add allergen\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChangeNewAllergen}\r\n\t\t\t\t\t\t\t\tvalue={this.state.newAllergen }\r\n\t\t\t\t\t\t\t/>\r\n                            </div>\r\n                            \r\n                            <div  className=\"mr-2\">\r\n                            <Button onClick={() => this.props.AddAllergen(this.state.newAllergen)} style={{ width: \"100%\" }} variant=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tAdd allergen\r\n\t\t\t\t\t\t\t</Button>\r\n                            </div>\r\n                            </div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<h4>{this.props.subheader}</h4>\r\n\t\t\t\t\t<table className=\"table\" style={{ width: \"100%\" }}>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<td className=\"col-md-3\">Allergen name</td>\r\n\t\t\t\t\t\t\t<td className=\"col-md-1\"></td>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.props.userAllergens.map((allergen) => (\r\n\t\t\t\t\t\t\t\t<tr id={allergen.Id} key={allergen.Id}>\r\n\t\t\t\t\t\t\t\t\t<td>{allergen.EntityDTO.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={() => this.props.RemoveAllergen(allergen.EntityDTO.name)} variant=\"danger\" >\r\n\t\t\t\t\t\t\t\t\t\t\tRemove\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AllergensModal;","C:\\Users\\PC\\Desktop\\faks\\4.god 1.semestar\\ISA\\ISA Projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies\\FoundPharmacistForPharmacyForDateRange.js",["369","370","371","372"],"import React, { Component } from \"react\";\r\nimport PharmacistPicture from \"../../Images/pharmacist.png\" ;\r\nimport Axios from \"axios\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\n\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass FoundPharmacistForPharmacyForDateRange extends Component {\r\n\t\r\n    \r\n    \r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div hidden={this.props.hiddenPharmacist} >\r\n\r\n                \r\n               \r\n                <button  type=\"button\" class=\"btn btn-link btn-lg\"\r\n                        onClick={this.props.backToPharmacies} \r\n                         style={{ width: \"100px\" , marginTop: \"40px\", marginLeft: \"5em\"}}>        \r\n                          Back\r\n                </button>\r\n\r\n                \r\n\r\n\r\n\t\t\t\t<div className=\"container\">\r\n                    \r\n\r\n\r\n                    \r\n                <div className=\"dropdown\" style={{  marginTop: \"3em\" }}>\r\n                        <button className=\"btn btn-primary btn-lg dropdown-toggle\"\r\n                            type=\"button\" id=\"dropdownMenu2\"\r\n                            data-toggle=\"dropdown\" \r\n                            aria-haspopup=\"true\" \r\n                            aria-expanded=\"false\">\r\n                            Sort\r\n                        </button>\r\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPharmacistGradeAscending} >Sort by pharmacist grade ascending</button>\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPharmacistGradeDescending} >Sort by pharmacist grade descending</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                    <table className=\"table table-hover\" style={{ width: \"90%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n                                  <tbody>\r\n                                      {this.props.pharmacists.map((pharmacist) => (\r\n                                          <tr\r\n                                              id={pharmacist.Id}\r\n                                              key={pharmacist.Id}\r\n                                              style={{ cursor: \"pointer\" }}\r\n                                          >\r\n          \r\n                                            <td width=\"100px\">  \r\n                                            <img  src={PharmacistPicture} style={{ width: \"85px\" }}></img>                                 \r\n                                                            \r\n                                            </td>\r\n                                              \r\n                                              <td>\r\n                                                            \r\n                                                    <div>\r\n                                                        <b>Name: </b> {pharmacist.EntityDTO.name}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <b>Surname: </b>{pharmacist.EntityDTO.surname}\r\n                                                    </div>\r\n\r\n                                                    \r\n\r\n                                                    <div>\r\n                                                        <b>Grade: </b> {pharmacist.EntityDTO.grade}\r\n                                                        <i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                                                    </div>\r\n                                            \r\n                                                  \r\n                                              </td>\r\n\r\n                                            <td>\r\n                                                <button\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-outline-primary\"\r\n                                                        style={{  marginTop: \"25px\" }}\r\n                                                        onClick={() => this.props.reserveAppointmentForPharmacist(pharmacist)}\r\n                                                >\r\n                                                        Reserve consultation\r\n                                                </button>\r\n                                            </td>\r\n\r\n\r\n\r\n                                          </tr>\r\n                                      ))}\r\n                                  </tbody>\r\n                              </table>\r\n                    </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FoundPharmacistForPharmacyForDateRange;",{"ruleId":"373","severity":1,"message":"374","line":7,"column":8,"nodeType":"375","messageId":"376","endLine":7,"endColumn":9},{"ruleId":"373","severity":1,"message":"377","line":8,"column":8,"nodeType":"375","messageId":"376","endLine":8,"endColumn":14},{"ruleId":"378","replacedBy":"379"},{"ruleId":"380","replacedBy":"381"},{"ruleId":"373","severity":1,"message":"382","line":1,"column":8,"nodeType":"375","messageId":"376","endLine":1,"endColumn":12},{"ruleId":"373","severity":1,"message":"383","line":40,"column":3,"nodeType":"375","messageId":"376","endLine":40,"endColumn":7},{"ruleId":"384","severity":1,"message":"385","line":76,"column":3,"nodeType":"386","messageId":"387","endLine":76,"endColumn":11},{"ruleId":"388","severity":1,"message":"389","line":92,"column":3,"nodeType":"390","messageId":"391","endLine":92,"endColumn":13},{"ruleId":"392","severity":1,"message":"393","line":184,"column":3,"nodeType":"394","messageId":"395","endLine":213,"endColumn":4},{"ruleId":"396","severity":1,"message":"397","line":708,"column":11,"nodeType":"398","endLine":708,"endColumn":77},{"ruleId":"373","severity":1,"message":"399","line":2,"column":13,"nodeType":"375","messageId":"376","endLine":2,"endColumn":27},{"ruleId":"373","severity":1,"message":"400","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":14},{"ruleId":"396","severity":1,"message":"397","line":139,"column":11,"nodeType":"398","endLine":139,"endColumn":71},{"ruleId":"384","severity":1,"message":"401","line":41,"column":9,"nodeType":"386","messageId":"387","endLine":41,"endColumn":21},{"ruleId":"373","severity":1,"message":"402","line":333,"column":22,"nodeType":"375","messageId":"376","endLine":333,"endColumn":27},{"ruleId":"403","severity":1,"message":"404","line":798,"column":19,"nodeType":"390","messageId":"405","endLine":798,"endColumn":54,"fix":"406"},{"ruleId":"396","severity":1,"message":"397","line":869,"column":41,"nodeType":"398","endLine":869,"endColumn":85},{"ruleId":"396","severity":1,"message":"397","line":128,"column":11,"nodeType":"398","endLine":128,"endColumn":71},{"ruleId":"373","severity":1,"message":"407","line":5,"column":8,"nodeType":"375","messageId":"376","endLine":5,"endColumn":27},{"ruleId":"408","severity":1,"message":"409","line":68,"column":2,"nodeType":"410","messageId":"411","endLine":70,"endColumn":3},{"ruleId":"412","severity":1,"message":"413","line":523,"column":44,"nodeType":"414","messageId":"415","endLine":523,"endColumn":45,"suggestions":"416"},{"ruleId":"412","severity":1,"message":"413","line":523,"column":63,"nodeType":"414","messageId":"415","endLine":523,"endColumn":64,"suggestions":"417"},{"ruleId":"418","severity":1,"message":"419","line":783,"column":56,"nodeType":"420","messageId":"421","endLine":783,"endColumn":100},{"ruleId":"418","severity":1,"message":"419","line":938,"column":70,"nodeType":"420","messageId":"421","endLine":938,"endColumn":114},{"ruleId":"422","severity":1,"message":"423","line":206,"column":90,"nodeType":"424","messageId":"387","endLine":206,"endColumn":92},{"ruleId":"396","severity":1,"message":"397","line":261,"column":11,"nodeType":"398","endLine":261,"endColumn":72},{"ruleId":"403","severity":1,"message":"404","line":271,"column":19,"nodeType":"390","messageId":"405","endLine":271,"endColumn":54,"fix":"425"},{"ruleId":"396","severity":1,"message":"397","line":308,"column":41,"nodeType":"398","endLine":308,"endColumn":85},{"ruleId":"373","severity":1,"message":"426","line":5,"column":10,"nodeType":"375","messageId":"376","endLine":5,"endColumn":18},{"ruleId":"373","severity":1,"message":"427","line":6,"column":8,"nodeType":"375","messageId":"376","endLine":6,"endColumn":24},{"ruleId":"408","severity":1,"message":"409","line":30,"column":3,"nodeType":"410","messageId":"411","endLine":32,"endColumn":2},{"ruleId":"403","severity":1,"message":"404","line":276,"column":19,"nodeType":"390","messageId":"405","endLine":276,"endColumn":54,"fix":"428"},{"ruleId":"396","severity":1,"message":"397","line":321,"column":41,"nodeType":"398","endLine":321,"endColumn":85},{"ruleId":"373","severity":1,"message":"429","line":5,"column":8,"nodeType":"375","messageId":"376","endLine":5,"endColumn":39},{"ruleId":"373","severity":1,"message":"430","line":7,"column":8,"nodeType":"375","messageId":"376","endLine":7,"endColumn":23},{"ruleId":"373","severity":1,"message":"431","line":8,"column":9,"nodeType":"375","messageId":"376","endLine":8,"endColumn":16},{"ruleId":"373","severity":1,"message":"426","line":8,"column":18,"nodeType":"375","messageId":"376","endLine":8,"endColumn":26},{"ruleId":"408","severity":1,"message":"409","line":46,"column":5,"nodeType":"410","messageId":"411","endLine":48,"endColumn":6},{"ruleId":"373","severity":1,"message":"432","line":121,"column":7,"nodeType":"375","messageId":"376","endLine":121,"endColumn":21},{"ruleId":"373","severity":1,"message":"431","line":8,"column":9,"nodeType":"375","messageId":"376","endLine":8,"endColumn":16},{"ruleId":"373","severity":1,"message":"426","line":8,"column":18,"nodeType":"375","messageId":"376","endLine":8,"endColumn":26},{"ruleId":"408","severity":1,"message":"409","line":31,"column":5,"nodeType":"410","messageId":"411","endLine":33,"endColumn":6},{"ruleId":"396","severity":1,"message":"397","line":224,"column":22,"nodeType":"398","endLine":224,"endColumn":111},{"ruleId":"373","severity":1,"message":"426","line":5,"column":10,"nodeType":"375","messageId":"376","endLine":5,"endColumn":18},{"ruleId":"396","severity":1,"message":"397","line":304,"column":22,"nodeType":"398","endLine":304,"endColumn":115},{"ruleId":"373","severity":1,"message":"431","line":8,"column":9,"nodeType":"375","messageId":"376","endLine":8,"endColumn":16},{"ruleId":"373","severity":1,"message":"426","line":8,"column":18,"nodeType":"375","messageId":"376","endLine":8,"endColumn":26},{"ruleId":"408","severity":1,"message":"409","line":50,"column":5,"nodeType":"410","messageId":"411","endLine":52,"endColumn":6},{"ruleId":"396","severity":1,"message":"397","line":567,"column":22,"nodeType":"398","endLine":567,"endColumn":111},{"ruleId":"373","severity":1,"message":"431","line":8,"column":9,"nodeType":"375","messageId":"376","endLine":8,"endColumn":16},{"ruleId":"373","severity":1,"message":"426","line":8,"column":18,"nodeType":"375","messageId":"376","endLine":8,"endColumn":26},{"ruleId":"408","severity":1,"message":"409","line":49,"column":5,"nodeType":"410","messageId":"411","endLine":51,"endColumn":6},{"ruleId":"396","severity":1,"message":"397","line":616,"column":22,"nodeType":"398","endLine":616,"endColumn":108},{"ruleId":"373","severity":1,"message":"433","line":6,"column":8,"nodeType":"375","messageId":"376","endLine":6,"endColumn":25},{"ruleId":"373","severity":1,"message":"430","line":7,"column":8,"nodeType":"375","messageId":"376","endLine":7,"endColumn":23},{"ruleId":"373","severity":1,"message":"431","line":8,"column":9,"nodeType":"375","messageId":"376","endLine":8,"endColumn":16},{"ruleId":"373","severity":1,"message":"426","line":8,"column":18,"nodeType":"375","messageId":"376","endLine":8,"endColumn":26},{"ruleId":"373","severity":1,"message":"434","line":9,"column":8,"nodeType":"375","messageId":"376","endLine":9,"endColumn":37},{"ruleId":"396","severity":1,"message":"397","line":177,"column":11,"nodeType":"398","endLine":177,"endColumn":71},{"ruleId":"373","severity":1,"message":"431","line":8,"column":9,"nodeType":"375","messageId":"376","endLine":8,"endColumn":16},{"ruleId":"373","severity":1,"message":"426","line":8,"column":18,"nodeType":"375","messageId":"376","endLine":8,"endColumn":26},{"ruleId":"373","severity":1,"message":"434","line":9,"column":8,"nodeType":"375","messageId":"376","endLine":9,"endColumn":37},{"ruleId":"408","severity":1,"message":"409","line":39,"column":5,"nodeType":"410","messageId":"411","endLine":41,"endColumn":6},{"ruleId":"396","severity":1,"message":"397","line":300,"column":22,"nodeType":"398","endLine":300,"endColumn":91},{"ruleId":"388","severity":1,"message":"389","line":162,"column":3,"nodeType":"390","messageId":"391","endLine":162,"endColumn":13},{"ruleId":"422","severity":1,"message":"423","line":193,"column":32,"nodeType":"424","messageId":"387","endLine":193,"endColumn":34},{"ruleId":"422","severity":1,"message":"423","line":219,"column":32,"nodeType":"424","messageId":"387","endLine":219,"endColumn":34},{"ruleId":"422","severity":1,"message":"423","line":235,"column":32,"nodeType":"424","messageId":"387","endLine":235,"endColumn":34},{"ruleId":"422","severity":1,"message":"423","line":250,"column":32,"nodeType":"424","messageId":"387","endLine":250,"endColumn":34},{"ruleId":"435","severity":1,"message":"436","line":306,"column":37,"nodeType":"398","endLine":306,"endColumn":112},{"ruleId":"435","severity":1,"message":"436","line":307,"column":37,"nodeType":"398","endLine":307,"endColumn":112},{"ruleId":"435","severity":1,"message":"436","line":308,"column":37,"nodeType":"398","endLine":308,"endColumn":118},{"ruleId":"435","severity":1,"message":"436","line":309,"column":37,"nodeType":"398","endLine":309,"endColumn":117},{"ruleId":"422","severity":1,"message":"423","line":313,"column":91,"nodeType":"424","messageId":"387","endLine":313,"endColumn":93},{"ruleId":"373","severity":1,"message":"433","line":6,"column":8,"nodeType":"375","messageId":"376","endLine":6,"endColumn":25},{"ruleId":"373","severity":1,"message":"430","line":7,"column":8,"nodeType":"375","messageId":"376","endLine":7,"endColumn":23},{"ruleId":"373","severity":1,"message":"431","line":8,"column":9,"nodeType":"375","messageId":"376","endLine":8,"endColumn":16},{"ruleId":"373","severity":1,"message":"426","line":8,"column":18,"nodeType":"375","messageId":"376","endLine":8,"endColumn":26},{"ruleId":"396","severity":1,"message":"397","line":319,"column":11,"nodeType":"398","endLine":319,"endColumn":76},{"ruleId":"388","severity":1,"message":"389","line":108,"column":5,"nodeType":"390","messageId":"391","endLine":108,"endColumn":15},{"ruleId":"408","severity":1,"message":"409","line":120,"column":5,"nodeType":"410","messageId":"411","endLine":122,"endColumn":3},{"ruleId":"388","severity":1,"message":"389","line":125,"column":3,"nodeType":"390","messageId":"391","endLine":125,"endColumn":13},{"ruleId":"373","severity":1,"message":"402","line":189,"column":22,"nodeType":"375","messageId":"376","endLine":189,"endColumn":27},{"ruleId":"373","severity":1,"message":"402","line":324,"column":24,"nodeType":"375","messageId":"376","endLine":324,"endColumn":29},{"ruleId":"373","severity":1,"message":"402","line":357,"column":24,"nodeType":"375","messageId":"376","endLine":357,"endColumn":29},{"ruleId":"373","severity":1,"message":"437","line":7,"column":10,"nodeType":"375","messageId":"376","endLine":7,"endColumn":18},{"ruleId":"396","severity":1,"message":"397","line":194,"column":11,"nodeType":"398","endLine":194,"endColumn":72},{"ruleId":"373","severity":1,"message":"438","line":8,"column":8,"nodeType":"375","messageId":"376","endLine":8,"endColumn":18},{"ruleId":"396","severity":1,"message":"397","line":271,"column":12,"nodeType":"398","endLine":271,"endColumn":72},{"ruleId":"418","severity":1,"message":"419","line":320,"column":6,"nodeType":"420","messageId":"421","endLine":320,"endColumn":28},{"ruleId":"373","severity":1,"message":"439","line":4,"column":22,"nodeType":"375","messageId":"376","endLine":4,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":36,"column":11,"nodeType":"398","endLine":36,"endColumn":77},{"ruleId":"373","severity":1,"message":"399","line":2,"column":13,"nodeType":"375","messageId":"376","endLine":2,"endColumn":27},{"ruleId":"373","severity":1,"message":"440","line":26,"column":15,"nodeType":"375","messageId":"376","endLine":26,"endColumn":22},{"ruleId":"373","severity":1,"message":"441","line":7,"column":7,"nodeType":"375","messageId":"376","endLine":7,"endColumn":14},{"ruleId":"396","severity":1,"message":"397","line":49,"column":41,"nodeType":"398","endLine":49,"endColumn":85},{"ruleId":"373","severity":1,"message":"442","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":18},{"ruleId":"373","severity":1,"message":"443","line":2,"column":10,"nodeType":"375","messageId":"376","endLine":2,"endColumn":16},{"ruleId":"373","severity":1,"message":"443","line":2,"column":10,"nodeType":"375","messageId":"376","endLine":2,"endColumn":16},{"ruleId":"373","severity":1,"message":"433","line":3,"column":8,"nodeType":"375","messageId":"376","endLine":3,"endColumn":25},{"ruleId":"396","severity":1,"message":"397","line":30,"column":11,"nodeType":"398","endLine":30,"endColumn":71},{"ruleId":"396","severity":1,"message":"397","line":65,"column":33,"nodeType":"398","endLine":73,"endColumn":14},{"ruleId":"373","severity":1,"message":"441","line":11,"column":7,"nodeType":"375","messageId":"376","endLine":11,"endColumn":14},{"ruleId":"396","severity":1,"message":"397","line":136,"column":22,"nodeType":"398","endLine":136,"endColumn":97},{"ruleId":"373","severity":1,"message":"444","line":2,"column":8,"nodeType":"375","messageId":"376","endLine":2,"endColumn":14},{"ruleId":"373","severity":1,"message":"441","line":5,"column":7,"nodeType":"375","messageId":"376","endLine":5,"endColumn":14},{"ruleId":"396","severity":1,"message":"397","line":70,"column":22,"nodeType":"398","endLine":70,"endColumn":91},{"ruleId":"373","severity":1,"message":"443","line":2,"column":10,"nodeType":"375","messageId":"376","endLine":2,"endColumn":16},{"ruleId":"373","severity":1,"message":"433","line":3,"column":8,"nodeType":"375","messageId":"376","endLine":3,"endColumn":25},{"ruleId":"396","severity":1,"message":"397","line":32,"column":11,"nodeType":"398","endLine":32,"endColumn":76},{"ruleId":"373","severity":1,"message":"443","line":2,"column":10,"nodeType":"375","messageId":"376","endLine":2,"endColumn":16},{"ruleId":"373","severity":1,"message":"433","line":3,"column":8,"nodeType":"375","messageId":"376","endLine":3,"endColumn":25},{"ruleId":"373","severity":1,"message":"445","line":3,"column":8,"nodeType":"375","messageId":"376","endLine":3,"endColumn":13},{"ruleId":"373","severity":1,"message":"427","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":24},{"ruleId":"373","severity":1,"message":"441","line":9,"column":7,"nodeType":"375","messageId":"376","endLine":9,"endColumn":14},{"ruleId":"396","severity":1,"message":"397","line":64,"column":45,"nodeType":"398","endLine":64,"endColumn":122},{"ruleId":"373","severity":1,"message":"445","line":3,"column":8,"nodeType":"375","messageId":"376","endLine":3,"endColumn":13},{"ruleId":"373","severity":1,"message":"427","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":24},{"ruleId":"373","severity":1,"message":"441","line":8,"column":7,"nodeType":"375","messageId":"376","endLine":8,"endColumn":14},{"ruleId":"373","severity":1,"message":"445","line":3,"column":8,"nodeType":"375","messageId":"376","endLine":3,"endColumn":13},{"ruleId":"373","severity":1,"message":"427","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":24},{"ruleId":"373","severity":1,"message":"441","line":9,"column":7,"nodeType":"375","messageId":"376","endLine":9,"endColumn":14},{"ruleId":"396","severity":1,"message":"397","line":61,"column":45,"nodeType":"398","endLine":61,"endColumn":101},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["446"],"no-negated-in-lhs",["447"],"'logo' is defined but never used.","'Link' is defined but never used.","no-dupe-keys","Duplicate key 'drugName'.","ObjectExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactBootStrap' is defined but never used.","'TopBar' is defined but never used.","Duplicate key 'pharmacyName'.","'value' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property handleSearchCountryNameChange.","unexpectedWhitespace",{"range":"448","text":"449"},"'PharmacyLogoPicture' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["450","451"],["452","453"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",{"range":"454","text":"449"},"'Redirect' is defined but never used.","'GetAuthorisation' is defined but never used.",{"range":"455","text":"449"},"'DermatologistAppointmentPicture' is defined but never used.","'SuccessfulAlert' is defined but never used.","'NavLink' is defined but never used.","'acceptableDate' is assigned a value but never used.","'UnsuccessfulAlert' is defined but never used.","'HistoryPharmacistConsultation' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'getRoles' is defined but never used.","'OfferModal' is defined but never used.","'Router' is defined but never used.","'myStyle' is assigned a value but never used.","'API_URL' is assigned a value but never used.","'datepicker' is defined but never used.","'Button' is defined but never used.","'Header' is defined but never used.","'Axios' is defined but never used.","no-global-assign","no-unsafe-negation",[19324,19326],".",{"messageId":"456","fix":"457","desc":"458"},{"messageId":"459","fix":"460","desc":"461"},{"messageId":"456","fix":"462","desc":"458"},{"messageId":"459","fix":"463","desc":"461"},[6282,6284],[6284,6286],"removeEscape",{"range":"464","text":"465"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"466","text":"467"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"468","text":"465"},{"range":"469","text":"467"},[13657,13658],"",[13657,13657],"\\",[13676,13677],[13676,13676]]