[{"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\index.js":"1","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\App.js":"2","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\reportWebVitals.js":"3","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\HomePage.js":"4","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Drugs.js":"5","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies.js":"6","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\RegistrationPage.js":"7","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\HomePageForDermatologistAppointments.js":"8","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\UserProfile.js":"9","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\DermatologistFreeAppointment.js":"10","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\LoginPage.js":"11","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\FutureDermatologistAppointmentsForPatient.js":"12","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\HistoryDermatologistAppointmentsForPatient.js":"13","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\RegisterPharmacies.js":"14","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\RegisterDrug.js":"15","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\registerStaff.js":"16","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Header.js":"17","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\TopBar.js":"18","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Alerts\\UnsuccessfulAlert.js":"19","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Funciton\\GetAuthorisation.js":"20","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Alerts\\SuccessfulAlert.js":"21","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\AllergensModal.js":"22","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\ChangePasswordModal.js":"23","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\PharmaciesAppointmentStartPage.js":"24","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies\\FoundPharmaciesForDateRange.js":"25","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies\\FoundPharmacistForPharmacyForDateRange.js":"26","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\ReservedConsultationModal.js":"27","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\LoyalityProgram\\LoyalityProgram.js":"28","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\SupplierPages\\OrdersPage.js":"29","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\SupplierPages\\OfferModal.js":"30","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\FuturePharmaciesConsultationsForPatient.js":"31","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Consultations\\HistoryPharmacistConsultation.js":"32"},{"size":673,"mtime":1621455871722,"results":"33","hashOfConfig":"34"},{"size":3404,"mtime":1621981722826,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1621455871723,"results":"36","hashOfConfig":"34"},{"size":1469,"mtime":1621972283794,"results":"37","hashOfConfig":"34"},{"size":6768,"mtime":1621455871713,"results":"38","hashOfConfig":"34"},{"size":7921,"mtime":1621455871716,"results":"39","hashOfConfig":"34"},{"size":4983,"mtime":1621455871716,"results":"40","hashOfConfig":"34"},{"size":9238,"mtime":1621455871721,"results":"41","hashOfConfig":"34"},{"size":20461,"mtime":1621530138368,"results":"42","hashOfConfig":"34"},{"size":10189,"mtime":1621455871721,"results":"43","hashOfConfig":"34"},{"size":8698,"mtime":1621969770694,"results":"44","hashOfConfig":"34"},{"size":8307,"mtime":1621530138365,"results":"45","hashOfConfig":"34"},{"size":5710,"mtime":1621530138366,"results":"46","hashOfConfig":"34"},{"size":8912,"mtime":1621455871717,"results":"47","hashOfConfig":"34"},{"size":23546,"mtime":1621530138361,"results":"48","hashOfConfig":"34"},{"size":14793,"mtime":1621969770757,"results":"49","hashOfConfig":"34"},{"size":5352,"mtime":1621981727937,"results":"50","hashOfConfig":"34"},{"size":1244,"mtime":1621455871717,"results":"51","hashOfConfig":"34"},{"size":540,"mtime":1621455871713,"results":"52","hashOfConfig":"34"},{"size":318,"mtime":1621455871718,"results":"53","hashOfConfig":"34"},{"size":537,"mtime":1621455871713,"results":"54","hashOfConfig":"34"},{"size":3168,"mtime":1621455871715,"results":"55","hashOfConfig":"34"},{"size":3422,"mtime":1621455871716,"results":"56","hashOfConfig":"34"},{"size":23316,"mtime":1621976009926,"results":"57","hashOfConfig":"34"},{"size":5631,"mtime":1621973044042,"results":"58","hashOfConfig":"34"},{"size":4849,"mtime":1621975945259,"results":"59","hashOfConfig":"34"},{"size":1472,"mtime":1621817048731,"results":"60","hashOfConfig":"34"},{"size":19610,"mtime":1621969770743,"results":"61","hashOfConfig":"34"},{"size":6726,"mtime":1621969770756,"results":"62","hashOfConfig":"34"},{"size":1723,"mtime":1621969770755,"results":"63","hashOfConfig":"34"},{"size":10104,"mtime":1622032064849,"results":"64","hashOfConfig":"34"},{"size":3090,"mtime":1622030125946,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"10t86ml",{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"83","usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"89","usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"69"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"69"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"69"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"69"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"69"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"69"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"69"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"69"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"69"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"69"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"69"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"69"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\index.js",["155","156"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["157","158"],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\App.js",["159","160"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport HomePage from \"./Components/HomePage\"\r\nimport Drugs from \"./Components/Drugs\"\r\nimport Pharmacies from \"./Components/Pharmacies\"\r\nimport RegisterPage from \"./Components/RegistrationPage\"\r\nimport LoginPage from \"./Components/LoginPage\"\r\nimport UserProfilePage from \"./Pages/UserProfile\"\r\nimport registerStaff from \"./Components/adminRegistration/registerStaff\"\r\nimport RegisterDrug from './Components/adminRegistration/RegisterDrug';\r\nimport LoyalityProgram from \"./Components/LoyalityProgram/LoyalityProgram\"\r\nimport RegisterPharmacies from './Components/adminRegistration/RegisterPharmacies';\r\nimport OrdersPage from './Components/SupplierPages/OrdersPage';\r\nimport HomePageForDermatologistAppointments from \"./Pages/HomePageForDermatologistAppointments\"\r\nimport DermatologistFreeAppointment from \"./Pages/DermatologistFreeAppointment\"\r\nimport FutureDermatologistAppointmentsForPatient from \"./Pages/FutureDermatologistAppointmentsForPatient\"\r\nimport HistoryDermatologistAppointmentsForPatient from \"./Pages/HistoryDermatologistAppointmentsForPatient\"\r\nimport PharmaciesAppointmentStartPage from \"./Pages/PharmaciesAppointmentStartPage\"\r\nimport FuturePharmaciesConsultationsForPatient from \"./Pages/FuturePharmaciesConsultationsForPatient\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Route,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    \r\n    \r\n    <Router>\r\n      \r\n        <Switch>\r\n        <Route exact to =\"/\"  path =\"/\" component={HomePage}/>\r\n        <Route  to =\"/drugs\" path =\"/drugs\"  component={Drugs}/>\r\n        <Route  to =\"/pharmacies\" path =\"/pharmacies\"  component={Pharmacies}/>       \r\n        <Route  to =\"/registration\" path =\"/registration\"  component={RegisterPage}/>\r\n        <Route  to =\"/login\" path =\"/login\"  component={LoginPage}/>\r\n        <Route  to =\"/userProfile\" path =\"/userProfile\"  component={UserProfilePage}/>\r\n        <Route  to =\"/registerStaff\" path =\"/registerStaff\"  component={registerStaff}/>\r\n        <Route  to =\"/registerPharmacies\" path =\"/registerPharmacies\"  component={RegisterPharmacies}/>\r\n        <Route  to =\"/dermatologistAppointment\" path =\"/dermatologistAppointment\"  component={HomePageForDermatologistAppointments}/>\r\n        <Route path=\"/dermatologistFreeAppointment/:id\" children={<DermatologistFreeAppointment />} />\r\n        <Route  to =\"/futureDermatologistAppointmentsForPatient\" path =\"/futureDermatologistAppointmentsForPatient\"  component={FutureDermatologistAppointmentsForPatient}/>\r\n        <Route  to =\"/historyDermatologistAppointmentsForPatient\" path =\"/historyDermatologistAppointmentsForPatient\"  component={HistoryDermatologistAppointmentsForPatient}/>\r\n        <Route  to =\"/registerDrug\" path =\"/registerDrug\"  component={RegisterDrug}/>\r\n\r\n        <Route  to =\"/pharmacistAppointment\" path =\"/pharmacistAppointment\"  component={PharmaciesAppointmentStartPage}/>\r\n\r\n        <Route  to =\"/loyalityProgram\" path =\"/loyalityProgram\"  component={LoyalityProgram}/>\r\n        <Route  to =\"/orders\" path =\"/orders\"  component={OrdersPage}/>\r\n        <Route  to =\"/futurePharmaciesConsultationsForPatient\" path =\"/futurePharmaciesConsultationsForPatient\"  component={FuturePharmaciesConsultationsForPatient}/>\r\n       \r\n\r\n        </Switch>\r\n    </Router>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\reportWebVitals.js",[],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\HomePage.js",["161","162"],"import React from 'react';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport Header from './Header';\r\nimport TopBar from './TopBar';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass HomePage extends React.Component {\r\n\r\n\r\n      hasSpecificRole = (reqRole) => {\r\n      let roles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n      if (roles === null) return false;\r\n\r\n      for (let role of roles) {\r\n        if (role === reqRole) return true;\r\n      }\r\n      return false;\r\n      };\r\n\r\n      hasAnyRole = (reqRole) => {\r\n        let roles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n  \r\n        if (roles === null) return false;\r\n\r\n        return true;\r\n        };\r\n\r\n    \r\n    \r\n    render() {\r\n    return (\r\n     \r\n      <React.Fragment>\r\n     \r\n          <Header/>\r\n          <div >\r\n\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          <section id=\"homePageSection\" className=\"d-flex \">\r\n\t\t\t\t\t<div className=\"container\" style={{textAlign: \"center\"}}>\r\n\t\t\t\t\t\t<h1>Welcome to Health Clinic </h1>\r\n\r\n            <Link  to=\"/login\" hidden={this.hasAnyRole()} className=\"btn-Login-Register\">\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<Link  to=\"/registration\" hidden={this.hasAnyRole()} className=\"btn-Login-Register\">\r\n\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t</Link>\r\n      \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t  </section>\r\n\r\n             \r\n        \r\n          </div>\r\n          \r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n  \r\n  export default HomePage;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Drugs.js",["163"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from './Header';\r\nimport MedicamentPicture from \"../Images/medicament.jpg\" ;\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass Drugs extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n\t\tallDrugs: [],\r\n    drugSearchName: \"\",\r\n    drugSearchProducerName: \"\",\r\n    drugSearchFabricCode: \"\",\r\n    showSearchedForm: false,\r\n    showResetSearced: false,\r\n    inputError : \"none\"\r\n\t\t\r\n\r\n\r\n  };\r\n\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n\t\t\r\n\r\n\t\tAxios.get(API_URL + \"/drug/allDrugs\")\r\n\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ allDrugs: res.data });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n  \r\n         \r\n\t}\r\n\r\n\r\n   handleSearchForm = () => {    \r\n   \r\n    if(this.state.inputError=== \"initial\")\r\n      this.setState({inputError :\"none\"});\r\n      \r\n   \r\n    this.setState({showSearchedForm : !this.state.showSearchedForm,\r\n                    showResetSearced: false});\r\n\r\n                    if(this.state.showSearchedForm===false){\r\n\r\n                      this.setState({\r\n    \r\n                        showResetSearced: true,\r\n                        drugSearchName: \"\",\r\n                        drugSearchProducerName: \"\",\r\n                        drugSearchFabricCode: \"\", \r\n                        inputError : \"none\"     \r\n                      \r\n                      });\r\n\r\n                    }\r\n\r\n                    \r\n   }\r\n\r\n   handleSearchNameChange = (event) => {\r\n\t\tthis.setState({ drugSearchName: event.target.value });\r\n\t};\r\n\r\n  handleSearchProducerNameChange= (event) => {\r\n\t\tthis.setState({ drugSearchProducerName: event.target.value });\r\n\t};\r\n\r\n  handleSearchFabricCodeChange= (event) => {\r\n\t\tthis.setState({ drugSearchFabricCode: event.target.value });\r\n\t};\r\n\r\n  \r\n\r\n\r\n   SearchDrugs = () => {\r\n\r\n\r\n  if (this.state.drugSearchName === \"\" && this.state.drugSearchProducerName === \"\" &&  this.state.drugSearchFabricCode=== \"\" ) {\r\n        this.setState({ inputError : \"initial\" });\r\n           return false;\r\n  } \r\n\r\n  this.setState({ inputError : \"none\" });\r\n\r\n    const searchDTO = {\r\n\r\n      name : this.state.drugSearchName,\r\n      producerName : this.state.drugSearchProducerName,\r\n      fabricCode : \"\",\r\n\r\n\r\n     };\r\n          \r\n\t\tAxios.post(API_URL + \"/drug/searchDrugs\", searchDTO)\r\n\r\n\t\t.then((res) => {\r\n      this.setState({\r\n        allDrugs: res.data,\r\n        showResetSearced : true,\r\n        showSearchedForm : false,      \r\n      \r\n      });\r\n     \r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      \r\n    });\r\n\r\n\t\t\r\n\t};\r\n\r\n  resetSearch = () => {\r\n\r\n   \r\n    this.setState({\r\n    \r\n     showResetSearced : false,\r\n     showSearchedForm : false, \r\n     drugSearchName: \"\",\r\n     drugSearchProducerName: \"\",\r\n     drugSearchFabricCode: \"\", \r\n     inputError : \"none\"     \r\n   \r\n   });\r\n\r\n          \r\n    Axios.get(API_URL + \"/drug/allDrugs\")\r\n\r\n    .then((res) => {\r\n      this.setState({ allDrugs: res.data });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n\r\n\t\t\r\n\t};\r\n\r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n      <div id=\"allDrugs\">\r\n\r\n            \r\n           \r\n           \r\n            <div style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }} width=\"100%\">\r\n\r\n            <div className=\"inline\" >\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg mr-3\" onClick={this.handleSearchForm}>\r\n               \r\n                {this.state.showSearchedForm ? \"Close search\" : \"Open search\"}\r\n                                \r\n            </button>\r\n\r\n            <button hidden={!this.state.showResetSearced} type=\"button\" class=\"btn btn-outline-primary btn-lg mr-3\" onClick={this.resetSearch}>\r\n               \r\n               Reset search\r\n                               \r\n           </button>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <form hidden={!this.state.showSearchedForm} className=\"form-inline\" width=\"100%\" id=\"searchForm\">\r\n\t\t\t\t\t\t\r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.drugSearchName}\r\n\t\t\t\t\t\t\t/>             \r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Producer name\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchProducerNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.drugSearchProducerName}\r\n\t\t\t\t\t\t\t/>\r\n              \r\n\r\n              \r\n             \r\n              \r\n\t\t\t\t\t\t\t<button\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonClick={this.SearchDrugs}\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-lg \"\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n                \r\n\t\t\t\t\t\t\t>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t</button>\r\n             \r\n\r\n\t\t\t\t\t</form>\r\n\r\n          <div className=\"text-danger\" style={{ display: this.state.inputError, fontSize: \"17px\"}}>\r\n\t\t\t\t\t\t\t\t\t\tEnter something in field!\r\n\t\t\t\t\t</div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n        <div className=\"container\">\r\n                    <h1 >All drugs</h1>\r\n                    <table className=\"table\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n                        \r\n                        <tbody>\r\n                            {\r\n                                this.state.allDrugs.map((drug) => (\r\n                                    <tr key={drug.Id} id={drug.Id} >\r\n                                       \r\n\r\n                                      <td width=\"100px\">  \r\n                                       \r\n                                        <img src={MedicamentPicture } width=\"70px\"></img>                                 \r\n                                     \r\n                                      </td>\r\n\r\n\r\n                                      <td>\r\n                                        \r\n                                        <div>  \r\n                                        <b>Name: </b>{drug.EntityDTO.name}\r\n                                        </div>  \r\n\r\n                                        <div>  \r\n                                        <b>Producer name: </b> {drug.EntityDTO.producerName}\r\n                                        </div> \r\n\r\n                                        <div>  \r\n                                        <b>Fabric code: </b>{drug.EntityDTO.fabricCode}\r\n                                        </div>\r\n\r\n                                      </td>\r\n\r\n\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Drugs;\r\n","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies.js",["164","165"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from './Header';\r\nimport PharmacyLogoPicture from \"../Images/pharmacyLogo.jpg\" ;\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass Pharmacies extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n\t\r\n        allPharmacies: [],\r\n        pharmacySearchName: \"\",\r\n        searchCountryName: \"\",\r\n        searchStreetName: \"\",\r\n        searchCityName: \"\",\r\n        showSearchedForm: false,\r\n        showResetSearced: false,\r\n        inputError : \"none\"\r\n\t\t\r\n\r\n\r\n  };\r\n\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n\t\t\r\n\r\n\t\tAxios.get(API_URL + \"/pharmacy/allPharmacies\")\r\n\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ allPharmacies: res.data });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n  \r\n         \r\n\t}\r\n\r\n\r\n   handleSearchForm = () => {    \r\n   \r\n    if(this.state.inputError=== \"initial\")\r\n      this.setState({inputError :\"none\"});\r\n      \r\n   \r\n    this.setState({showSearchedForm : !this.state.showSearchedForm,\r\n                    showResetSearced: false});\r\n          \r\n                    if(this.state.showSearchedForm===false){\r\n\r\n                      this.setState({\r\n    \r\n                        showResetSearced: true,\r\n                        pharmacySearchName: \"\",\r\n                        searchCountryName: \"\",\r\n                        searchStreetName: \"\",\r\n                        searchCityName: \"\",\r\n                        inputError : \"none\"     \r\n                      \r\n                      });\r\n\r\n                    }\r\n\r\n                    \r\n   }\r\n\r\n   handlePharmacySearchNameChange = (event) => {\r\n\t\tthis.setState({ pharmacySearchName: event.target.value });\r\n\t};\r\n\r\n  handleSearchCountryNameChange= (event) => {\r\n\t\tthis.setState({ searchCountryName: event.target.value });\r\n\t};\r\n\r\n  handleSearchStreetNameChange= (event) => {\r\n\t\tthis.setState({ searchStreetName: event.target.value });\r\n\t};\r\n\r\n  \r\n  handleSearchCityNameChange= (event) => {\r\n\t\tthis.setState({ searchCityName: event.target.value });\r\n\t};\r\n\r\n\r\n\r\n    SearchPharmacies = () => {\r\n\r\n\r\n    if (this.state.pharmacySearchName === \"\" && this.state.searchCityName === \"\" \r\n          &&  this.state.searchCountryName=== \"\" &&  this.state.searchStreetName=== \"\" ) {\r\n          this.setState({ inputError : \"initial\" });\r\n             return false;\r\n    } \r\n  \r\n    this.setState({ inputError : \"none\" });\r\n  \r\n      const searchDTO = {\r\n  \r\n        name : this.state.pharmacySearchName,\r\n        street : this.state.searchStreetName,\r\n        city: this.state.searchCityName,\r\n        country : this.state.searchCountryName,\r\n  \r\n  \r\n       };\r\n\r\n      \r\n\r\n      Axios.post(API_URL + \"/pharmacy/searchPharmacies\", searchDTO)\r\n  \r\n      .then((res) => {\r\n        this.setState({\r\n          allPharmacies: res.data,\r\n          showResetSearced : true,\r\n          showSearchedForm : false,      \r\n        \r\n        });\r\n       \r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        \r\n      });\r\n  \r\n      \r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    resetSearch = () => {\r\n\r\n   \r\n    this.setState({\r\n    \r\n     showResetSearced : false,\r\n     showSearchedForm : false, \r\n     pharmacySearchName: \"\",\r\n     searchCountryName: \"\",\r\n     searchStreetName: \"\",\r\n     searchCityName: \"\",\r\n     inputError : \"none\"     \r\n   \r\n   });\r\n\r\n          \r\n    Axios.get(API_URL + \"/pharmacy/allPharmacies\")\r\n\r\n    .then((res) => {\r\n      this.setState({ allPharmacies\r\n        : res.data });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n\r\n\t\t\r\n\t};\r\n\r\n\r\n   \r\n\r\n \r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n      <div id=\"allPharmacies\">\r\n\r\n            \r\n           \r\n           \r\n            <div style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }} width=\"100%\">\r\n\r\n            <div className=\"inline\" >\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg mr-3\" onClick={this.handleSearchForm}>\r\n               \r\n                {this.state.showSearchedForm ? \"Close search\" : \"Open search\"}\r\n                                \r\n            </button>\r\n\r\n            <button hidden={!this.state.showResetSearced} type=\"button\" class=\"btn btn-outline-primary btn-lg mr-3\" onClick={this.resetSearch}>\r\n               \r\n               Reset search\r\n                               \r\n           </button>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <form hidden={!this.state.showSearchedForm} className=\"form-inline\" width=\"100%\" id=\"searchForm\">\r\n\t\t\t\t\t\t\r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Pharmacy name\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handlePharmacySearchNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.pharmacySearchName}\r\n\t\t\t\t\t\t\t/>             \r\n              \r\n             \r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Street\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchStreetNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchStreetName}\r\n\t\t\t\t\t\t\t/>\r\n\r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"City\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchCityNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchCityName}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t  \t\r\n\r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Country\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this. handleSearchCountryNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchCountryName}\r\n\t\t\t\t\t\t\t/>\r\n              \r\n              \r\n\t\t\t\t\t\t\t<button\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonClick={this.SearchPharmacies}\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-lg \"\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n                \r\n\t\t\t\t\t\t\t>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t</button>\r\n             \r\n\r\n\t\t\t\t\t</form>\r\n\r\n          <div className=\"text-danger\" style={{ display: this.state.inputError, fontSize: \"17px\"}}>\r\n\t\t\t\t\t\t\t\t\t\tEnter something in field!\r\n\t\t\t\t\t</div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n        <div className=\"container\">\r\n                    <h1 >All pharmacies</h1>\r\n                    <table className=\"table\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n                        \r\n                        <tbody>\r\n                            {\r\n                                this.state.allPharmacies.map((pharmacy) => (\r\n                                    <tr key={pharmacy.Id} id={pharmacy.Id} >\r\n                                       \r\n\r\n                                      <td width=\"100px\">  \r\n                                       \r\n                                        <img src={PharmacyLogoPicture} width=\"70px\"></img>                                 \r\n                                     \r\n                                      </td>\r\n\r\n\r\n                                      <td>\r\n                                        \r\n                                        <div>  \r\n                                        <b>Name: </b>{pharmacy.EntityDTO.name}\r\n                                        </div>  \r\n\r\n                                        <div>  \r\n                                        <b>Location: </b> {pharmacy.EntityDTO.address.street}, {\" \"} {pharmacy.EntityDTO.address.city},{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t                                      {pharmacy.EntityDTO.address.country}\r\n                                        </div> \r\n\r\n                                        <div>  \r\n                                        <b>Description: </b>{pharmacy.EntityDTO.description}\r\n                                        </div>\r\n\r\n                                      </td>\r\n\r\n\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Pharmacies;\r\n","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\RegistrationPage.js",["166"],"import React, { Component } from \"react\";\r\nimport Header from './Header';\r\nimport Axios from \"axios\";\r\n\r\nclass RegisterPage extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n\t\tpassword: \"\",\r\n\t\trepeatPassword: \"\",\r\n        name: \"\",\r\n\t\tsurname: \"\",\r\n\t\taddress: \"\",\r\n\t\tphoneNumber: \"\",\r\n        \r\n\r\n\r\n\r\n    };\r\n\r\n    handleEmailChange = (event) => {\r\n\t\tthis.setState({ email: event.target.value });\r\n\t};\r\n    handlePasswordChange = (event) => {\r\n\t\tthis.setState({ password: event.target.value });\r\n\t};\r\n\t\r\n\thandleRepeatPasswordChange = (event) => {\r\n\t\tthis.setState({ repeatPassword: event.target.value });\r\n\t};\r\n\r\n\thandleNameChange = (event) => {\r\n\t\tthis.setState({ name: event.target.value });\r\n\t};\r\n\r\n\thandleSurnameChange = (event) => {\r\n\t\tthis.setState({ surname: event.target.value });\r\n\t};\r\n\r\n\thandleAddressChange = (event) => {\r\n\t\tthis.setState({ address: event.target.value });\r\n\t};\r\n\r\n\thandlePhoneNumberChange = (event) => {\r\n\t\tthis.setState({ phoneNumber: event.target.value });\r\n        console.log(\"Nemanja\");\r\n\t};\r\n\r\n    handleSignUp = () => {\r\n\r\n           \r\n            let userDTO = {\r\n                email: this.state.email,\r\n                name: this.state.name,\r\n                surname: this.state.surname,\r\n                address: this.state.address,\r\n                phoneNumber: this.state.phoneNumber,\r\n                password: this.state.password,\r\n            };\r\n\r\n            this.setState({\r\n                address:\"\",\r\n                email:\"\",\r\n                password:\"\",\r\n                repeatPassword:\"\",\r\n                name:\"\",\r\n                surname:\"\",\r\n                address:\"\",\r\n                phoneNumber:\"\"\r\n            });\r\n\r\n            console.log(userDTO);\r\n            Axios.post(\"http://localhost:8080/reg/patsignup\", userDTO, { validateStatus: () => true })\r\n            .then((res) => {\r\n                \r\n                \r\n            })\r\n\r\n            \r\n    };\r\n\r\n\r\n    render() {\r\n        return(\r\n\r\n        <React.Fragment>\r\n            <Header/>  \r\n\r\n            <h5 className=\" text-center  mb-0 text-uppercase\" style={{ marginTop: \"2rem\" }}>\r\n\t\t\t\t\t\tRegistration\r\n\t\t\t\t\t</h5>\r\n\r\n            <br/>        \r\n\r\n            <div class=\"container\" style={{maxWidth: \"40%\"}}>\r\n                <form>\r\n                    <div class=\"form-group\">\r\n                        <label style={{textAlign:\"start !important\"}} for=\"exampleInputEmail1\">Email address</label>\r\n                        <input type=\"text\" onChange={this.handleEmailChange} value={this.state.email} class=\"form-control\" id=\"emailAddress\" aria-describedby=\"emailHelp\" placeholder=\"Email address\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputName1\">Name</label>\r\n                        <input type=\"text\" onChange={this.handleNameChange} value={this.state.name} class=\"form-control\" id=\"name\" placeholder=\"Name\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Surname</label>\r\n                        <input type=\"text\" onChange={this.handleSurnameChange} value={this.state.surname} class=\"form-control\" id=\"surname\" placeholder=\"Surname\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Address</label>\r\n                        <input type=\"text\" onChange={this.handleAddressChange} value={this.state.address} class=\"form-control\" id=\"address\" placeholder=\"Address\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Phone number</label>\r\n                        <input type=\"text\" onChange={this.handlePhoneNumberChange} value={this.state.phoneNumber} class=\"form-control\" id=\"phoneNumber\" placeholder=\"Phone number\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Password</label>\r\n                        <input type=\"Password\" onChange={this.handlePasswordChange} value={this.state.password} class=\"form-control\" id=\"password\" placeholder=\"Password\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Repeat password</label>\r\n                        <input type=\"Password\" onChange={this.handleRepeatPasswordChange} value={this.state.repeatPassword} class=\"form-control\" id=\"passwordRepeat\" placeholder=\"Repeat password\"/>\r\n                    </div>\r\n                    \r\n                    <div class=\"text-center\">\r\n                    <button type=\"button\" class=\"btn btn-primary \" style={{width: \"20%\"}} onClick={this.handleSignUp}>Submit</button>\r\n                        </div>\r\n                </form>\r\n            </div>  \r\n\r\n        </React.Fragment>\r\n\r\n\r\n\r\n        );\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default RegisterPage;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\HomePageForDermatologistAppointments.js",["167","168","169","170","171"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport PharmacyLogoPicture from \"../Images/pharmacyLogo.jpg\" ;\r\nimport { Redirect } from \"react-router-dom\";\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass HomePageForDermatologistAppointments extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        allPharmacies: [],\r\n        pharmacySearchName: \"\",\r\n        searchCountryName: \"\",\r\n        searchStreetName: \"\",\r\n        searchCityName: \"\",\r\n        showSearchedForm: false,\r\n        showResetSearced: false,\r\n        inputError : \"none\"\r\n\t\t\r\n\r\n\r\n  };\r\n\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n}\r\n\r\n  componentDidMount() {\r\n\t\t\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n\t\tAxios.get(API_URL + \"/pharmacy/allPharmacies\")\r\n\r\n\t\t\t.then((res) => {\r\n\r\n        if (res.status === 401) {\r\n          this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n          this.setState({ allPharmacies: res.data });\r\n\t\t\t\t}\r\n\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n       \r\n\t\t\t});\r\n\r\n\r\n  \r\n         \r\n\t}\r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n   handleSearchForm = () => {    \r\n   \r\n    if(this.state.inputError=== \"initial\")\r\n      this.setState({inputError :\"none\"});\r\n      \r\n   \r\n    this.setState({showSearchedForm : !this.state.showSearchedForm,\r\n                    showResetSearced: false});\r\n          \r\n                    if(this.state.showSearchedForm===false){\r\n\r\n                      this.setState({\r\n    \r\n                        showResetSearced: true,\r\n                        pharmacySearchName: \"\",\r\n                        searchCountryName: \"\",\r\n                        searchStreetName: \"\",\r\n                        searchCityName: \"\",\r\n                        inputError : \"none\"     \r\n                      \r\n                      });\r\n\r\n                    }\r\n\r\n                    \r\n   }\r\n\r\n   handlePharmacySearchNameChange = (event) => {\r\n\t\tthis.setState({ pharmacySearchName: event.target.value });\r\n\t};\r\n\r\n  handleSearchCountryNameChange= (event) => {\r\n\t\tthis.setState({ searchCountryName: event.target.value });\r\n\t};\r\n\r\n  handleSearchStreetNameChange= (event) => {\r\n\t\tthis.setState({ searchStreetName: event.target.value });\r\n\t};\r\n\r\n  \r\n  handleSearchCityNameChange= (event) => {\r\n\t\tthis.setState({ searchCityName: event.target.value });\r\n\t};\r\n\r\n\r\n\r\n    SearchPharmacies = () => {\r\n\r\n\r\n    if (this.state.pharmacySearchName === \"\" && this.state.searchCityName === \"\" \r\n          &&  this.state.searchCountryName=== \"\" &&  this.state.searchStreetName=== \"\" ) {\r\n          this.setState({ inputError : \"initial\" });\r\n             return false;\r\n    } \r\n  \r\n    this.setState({ inputError : \"none\" });\r\n  \r\n      const searchDTO = {\r\n  \r\n        name : this.state.pharmacySearchName,\r\n        street : this.state.searchStreetName,\r\n        city: this.state.searchCityName,\r\n        country : this.state.searchCountryName,\r\n  \r\n  \r\n       };\r\n\r\n      \r\n\r\n      Axios.post(API_URL + \"/pharmacy/searchPharmacies\", searchDTO)\r\n  \r\n      .then((res) => {\r\n        this.setState({\r\n          allPharmacies: res.data,\r\n          showResetSearced : true,\r\n          showSearchedForm : false,      \r\n        \r\n        });\r\n       \r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        \r\n      });\r\n  \r\n      \r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    resetSearch = () => {\r\n\r\n   \r\n    this.setState({\r\n    \r\n     showResetSearced : false,\r\n     showSearchedForm : false, \r\n     pharmacySearchName: \"\",\r\n     searchCountryName: \"\",\r\n     searchStreetName: \"\",\r\n     searchCityName: \"\",\r\n     inputError : \"none\"     \r\n   \r\n   });\r\n\r\n          \r\n    Axios.get(API_URL + \"/pharmacy/allPharmacies\")\r\n\r\n    .then((res) => {\r\n      this.setState({ allPharmacies\r\n        : res.data });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n\r\n\t\t\r\n\t};\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n    handleClickOnSelectedPharmacy = (pharmacyId) => {\r\n        \r\n        this.props.history.push('/dermatologistFreeAppointment/' + pharmacyId)\r\n\r\n    };\r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n      <div id=\"allPharmacies\">\r\n\r\n            \r\n           \r\n           \r\n            <div style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }} width=\"100%\">\r\n\r\n            <div className=\"inline\" >\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg mr-3\" onClick={this.handleSearchForm}>\r\n               \r\n                {this.state.showSearchedForm ? \"Close search\" : \"Open search\"}\r\n                                \r\n            </button>\r\n\r\n            <button hidden={!this.state.showResetSearced} type=\"button\" class=\"btn btn-outline-primary btn-lg mr-3\" onClick={this.resetSearch}>\r\n               \r\n               Reset search\r\n                               \r\n           </button>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <form hidden={!this.state.showSearchedForm} className=\"form-inline\" width=\"100%\" id=\"searchForm\">\r\n\t\t\t\t\t\t\r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Pharmacy name\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handlePharmacySearchNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.pharmacySearchName}\r\n\t\t\t\t\t\t\t/>             \r\n              \r\n             \r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Street\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchStreetNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchStreetName}\r\n\t\t\t\t\t\t\t/>\r\n\r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"City\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchCityNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchCityName}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t  \t\r\n\r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Country\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this. handleSearchCountryNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchCountryName}\r\n\t\t\t\t\t\t\t/>\r\n              \r\n              \r\n\t\t\t\t\t\t\t<button\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonClick={this.SearchPharmacies}\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-lg \"\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n                \r\n\t\t\t\t\t\t\t>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t</button>\r\n             \r\n\r\n\t\t\t\t\t</form>\r\n\r\n          <div className=\"text-danger\" style={{ display: this.state.inputError, fontSize: \"17px\"}}>\r\n\t\t\t\t\t\t\t\t\t\tEnter something in field!\r\n\t\t\t\t\t</div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n        <div className=\"container\">\r\n                    \r\n                    <p  style={{ marginTop: \"3rem\" }} className=\"text-uppercase\" >Click on pharmacies where you want to shedule examination!</p>\r\n                    <table className=\"table \" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n                        \r\n                        <tbody>\r\n                            {\r\n                                this.state.allPharmacies.map((pharmacy) => (\r\n                                    <tr \r\n                                        key={pharmacy.Id} \r\n                                        id={pharmacy.Id} \r\n                                        style={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t\t    onClick={() => this.handleClickOnSelectedPharmacy(pharmacy.Id)}\r\n                                    \r\n                                    \r\n                                    >\r\n                                       \r\n\r\n                                      <td width=\"100px\">  \r\n                                       \r\n                                        <img src={PharmacyLogoPicture} width=\"70px\"></img>                                 \r\n                                     \r\n                                      </td>\r\n\r\n                                      <td>\r\n                                        \r\n                                        <div>  \r\n                                        <b>Name: </b>{pharmacy.EntityDTO.name}\r\n                                        </div>  \r\n\r\n                                        <div>  \r\n                                        <b>Location: </b> {pharmacy.EntityDTO.address.street}, {\" \"} {pharmacy.EntityDTO.address.city},{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t                                      {pharmacy.EntityDTO.address.country}\r\n                                        </div> \r\n\r\n                                        <div>  \r\n                                        <b>Description: </b>{pharmacy.EntityDTO.description}\r\n                                        </div>\r\n\r\n                                      </td>\r\n\r\n\r\n                                    </tr>\r\n                                )) }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default HomePageForDermatologistAppointments;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\UserProfile.js",["172","173","174","175"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport PharmacyLogoPicture from \"../Images/pharmacyLogo.jpg\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport ChangePasswordModal from \"../Components/Modal/ChangePasswordModal\";\r\nimport AllergensModal from \"../Components/Modal/AllergensModal\";\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass UserProfile extends Component {\r\n\r\n    state = {\r\n\t\tid: \"\",\r\n\t\temail: \"\",\r\n        name: \"\",\r\n\t\tsurname: \"\",\r\n\t\tpassword: \"\",\r\n\t\taddress: \"\",\r\n\t\tphoneNumber: \"\",\r\n\t\tnameError: \"none\",\r\n\t\tsurnameError: \"none\",\r\n\t\taddressError: \"none\",\r\n\t\tphoneError: \"none\",\r\n\t\tphoneValidateError: \"none\",\r\n\t\thiddenEditInfo: true,\r\n        redirect: false,\r\n\t\thiddenSuccessfulAlert: true,\r\n\t\tsuccessfulHeader: \"\",\r\n\t\tsuccessfulMessage: \"\",\r\n\t\thiddenUnsuccessfulAlert: true,\r\n\t\tUnsuccessfulHeader: \"\",\r\n\t\tUnsuccessfulMessage: \"\",\r\n\t\tisPasswordModalOpened: false,\r\n\t\thiddenPasswordErrorAlert: true,\r\n\t\terrorPasswordHeader: \"\",\r\n\t\terrorPasswordMessage: \"\",\r\n\t\temptyOldPasswordError: \"none\",\r\n\t\temptyNewPasswordError: \"none\",\r\n\t\temptyNewPasswordRepeatedError: \"none\",\r\n\t\tnewPasswordAndRepeatedNotSameError: \"none\",\r\n\r\n\t\t\r\n\t\tuserAllergens: [],\r\n\t\thiddenAllergenSuccessfulAlert: true,\r\n\t\tsuccessfulAllergenHeader: \"\",\r\n\t\tsuccessfulAllergenMessage: \"\",\r\n\t\thiddenAllergenErrorAlert: true,\r\n\t\terrorAllergenHeader: \"\",\r\n\t\terrorAllergenMessage: \"\",\r\n\t\topenAllergenModal: false,\r\n\t\t\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n    hasRole = (requestRole) => {\r\n        let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n  \r\n        if (currentRoles === null) return false;\r\n  \r\n  \r\n        for (let currentRole of currentRoles) {\r\n          if (currentRole === requestRole) return true;\r\n        }\r\n        return false;\r\n      };\r\n\r\n\t\r\n    handleEmailChange = (event) => {\r\n\t\tthis.setState({ email: event.target.value });\r\n\t};\r\n\r\n\thandleNameChange = (event) => {\r\n\t\tthis.setState({ name: event.target.value });\r\n\t};\r\n\r\n\thandleSurnameChange = (event) => {\r\n\t\tthis.setState({ surname: event.target.value });\r\n\t};\r\n\r\n\thandlePhoneNumberChange = (event) => {\r\n\t\tthis.setState({ phoneNumber: event.target.value });\r\n\t};\r\n\r\n\thandleAddressChange = (event) => {\r\n\t\tthis.setState({ address: event.target.value });\r\n\t};\r\n\r\n\thandleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\thandleChangePasswordModalOpen = () => {\r\n\t\tthis.setState({ hiddenEditInfo: true, \r\n\t\t\tisPasswordModalOpened: true });\r\n\t};\r\n\r\n\thandleChangePasswordModalClose = () => {\r\n\t\tthis.setState({ isPasswordModalOpened: false });\r\n\t};\r\n\r\n\thandleCloseAlertPassword = () => {\r\n\t\tthis.setState({ hiddenPasswordErrorAlert: true });\r\n\t};\r\n\r\n\thandleAllergenModal = () => {\r\n\t\tthis.setState({ hiddenEditInfo: true, openAllergenModal: true });\r\n\t};\r\n\r\n\r\n\t\r\n\thandleAllergensModalClose = () => {\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\thiddenAllergenSuccessfulAlert: true,\r\n\t\t\tsuccessfulAllergenHeader: \"\",\r\n\t\t\tsuccessfulAllergenMessage: \"\",\r\n\t\t\thiddenAllergenErrorAlert: true,\r\n\t\t\terrorAllergenHeader: \"\",\r\n\t\t\terrorAllergenMessage: \"\",\r\n\t\t\topenAllergenModal: false,\r\n\t\t});\r\n\t};\r\n\r\n\thandleCloseAllergenAlertError = () => {\r\n\t\tthis.setState({ hiddenAllergenErrorAlert: true });\r\n\t};\r\n\r\n\thandleCloseAllergenAlertSuccessful = () => {\r\n\t\tthis.setState({ hiddenAllergenSuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.setState({ redirect: true });\r\n\t\t\tthis.props.history.push('/login')\r\n\t\t\r\n        } else {\r\n\r\n\r\n\t\t\tconsole.log(GetAuthorisation());\r\n\t\t\tconsole.log(localStorage.getItem(\"keyRole\"));\r\n\t\t\t\r\n\r\n\t\t\tAxios.get(API_URL + \"/users/patient\", { validateStatus: () => true, headers: { Authorization : GetAuthorisation()} })\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\tif (res.status === 401) {                       \r\n                        this.setState({ redirect: true });\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.log(res.data.EntityDTO.email)\r\n\t\t\t\t\t\tconsole.log(res.data.EntityDTO.name)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n                        this.setState({\r\n\t\t\t\t\t\t\tid: res.data.Id,\r\n\t\t\t\t\t\t\temail: res.data.EntityDTO.email,\r\n\t\t\t\t\t\t\tname: res.data.EntityDTO.name,\r\n\t\t\t\t\t\t\tsurname: res.data.EntityDTO.surname,\r\n\t\t\t\t\t\t\taddress: res.data.EntityDTO.address,\r\n\t\t\t\t\t\t\tphoneNumber: res.data.EntityDTO.phoneNumber,\r\n\t\t\t\t\t\t\tuserAllergens: res.data.EntityDTO.allergens,\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\tconsole.log(this.state.userAllergens)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tconsole.log(\"ovaj eror je u pitanju\");\r\n\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\r\n\thandleChangeInfo = () => {\r\n\t\t\r\n\r\n\r\n\t\tlet userDTO = {\r\n\t\t\tname: this.state.name,\r\n\t\t\tsurname: this.state.surname,\r\n\t\t\taddress: this.state.address,\r\n\t\t\tphoneNumber: this.state.phoneNumber,\r\n\t\t};\r\n\r\n\r\n\r\n\t\tif (this.validateForm(userDTO)){\r\n\r\n\t\t\tconsole.log(userDTO.name  )\r\n\r\n\t\t\tAxios.put(API_URL + \"/users/patient\", userDTO, {\r\n\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\t\t\tUnsuccessfulHeader: \"Bad request\", \r\n\t\t\t\t\t\t\tUnsuccessfulMessage: \"Invalid argument.\" });\r\n\r\n\t\t\t\t\t} else if (res.status === 500) {\r\n\r\n\t\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\t\t\tUnsuccessfulHeader: \"Internal server error\", \r\n\t\t\t\t\t\t\tUnsuccessfulMessage: \"Server error.\" });\r\n\r\n\t\t\t\t\t} else if (res.status === 204) {\r\n\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\thiddenSuccessfulAlert: false,\r\n\t\t\t\t\t\t\tsuccessfulHeader: \"Success\",\r\n\t\t\t\t\t\t\tsuccessfulMessage: \"You updated your information.\",\r\n\t\t\t\t\t\t\thiddenEditInfo: true,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\t\tUnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t\t\t\r\n\t\t\t\t});\r\n\r\n\r\n\r\n\t\t}\r\n\r\n\t\t\r\n\t};\r\n\r\n\r\n\thandleEditInfoClick= () => {\r\n\t\tthis.setState({\r\n\t\t\thiddenEditInfo: false\r\n\t\t});\r\n\r\n\t\t\r\n\t};\r\n\r\n\tvalidateForm = (userDTO) => {\r\n\t\r\n\t\tthis.setState({\r\n\t\t\tnameError: \"none\",\r\n\t\t\tsurnameError: \"none\",\r\n\t\t\taddressError: \"none\",\r\n\t\t\tphoneError: \"none\",\r\n\t\t\tphoneValidateError: \"none\",\r\n\t\t});\r\n\r\n\t\tconst regexPhone = /^([+]?[0-9]{3,6}[-]?[\\/]?[0-9]{3,5}[-]?[\\/]?[0-9]*)$/;\r\n\t\tconsole.log(regexPhone.test(userDTO.phoneNumber));\r\n\t\tif (userDTO.name === \"\") {\r\n\t\t\tthis.setState({ nameError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.surname === \"\") {\r\n\t\t\tthis.setState({ surnameError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.address=== \"\") {\r\n\t\t\tthis.setState({ addressError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.phoneNumber === \"\") {\r\n\t\t\tthis.setState({ phoneError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (regexPhone.test(userDTO.phoneNumber) === false) {\r\n\t\t\tthis.setState({ phoneValidateError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\r\n\r\n\r\n\tchangePassword = (oldPassword, newPassword, newPasswordRepeated) => {\r\n\t\tconsole.log(oldPassword, newPassword, newPasswordRepeated);\r\n\r\n\t\tthis.setState({\r\n\t\t\thiddenEditInfo: true,\r\n\t\t\thiddenPasswordErrorAlert: true,\r\n\t\t\terrorPasswordHeader: \"\",\r\n\t\t\terrorPasswordMessage: \"\",\r\n\t\t\temptyOldPasswordError: \"none\",\r\n\t\t\temptyNewPasswordError: \"none\",\r\n\t\t\temptyNewPasswordRepeatedError: \"none\",\r\n\t\t\tnewPasswordAndRepeatedNotSameError: \"none\",\r\n\t\t\thiddenSuccessAlert: true,\r\n\t\t\tsuccessHeader: \"\",\r\n\t\t\tsuccessMessage: \"\",\r\n\r\n\r\n\t\t});\r\n\r\n\t\tif (oldPassword === \"\") {\r\n\t\t\tthis.setState({ emptyOldPasswordError: \"initial\" });\r\n\t\t} else if (newPassword === \"\") {\r\n\t\t\tthis.setState({ emptyNewPasswordError: \"initial\" });\r\n\t\t} else if (newPasswordRepeated === \"\") {\r\n\t\t\tthis.setState({ emptyNewPasswordRepeatedError: \"initial\" });\r\n\t\t} else if (newPasswordRepeated !== newPassword) {\r\n\t\t\tthis.setState({ newPasswordAndRepeatedNotSameError: \"initial\" });\r\n\t\t} else {\r\n\t\t\tlet newPasswordDTO= { oldPassword, newPassword };\r\n\t\t\tAxios.post(API_URL + \"/users/changePassword\", newPasswordDTO, {\r\n\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 400) {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\thiddenPasswordErrorAlert: false,\r\n\t\t\t\t\t\t\terrorPasswordHeader: \"Invalid new password\",\r\n\t\t\t\t\t\t\terrorPasswordMessage: \"Invalid new password.\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (res.status === 403) {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\thiddenPasswordErrorAlert: false,\r\n\t\t\t\t\t\t\terrorPasswordHeader: \"Bad credentials\",\r\n\t\t\t\t\t\t\terrorPasswordMessage: \"You entered wrong old password.\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (res.status === 500) {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\thiddenPasswordErrorAlert: false,\r\n\t\t\t\t\t\t\terrorPasswordHeader: \"Internal server error\",\r\n\t\t\t\t\t\t\terrorPasswordMessage: \"Server error.\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (res.status === 204) {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\thiddenSuccessfulAlert: false,\r\n\t\t\t\t\t\t\tsuccessfulHeader: \"Success\",\r\n\t\t\t\t\t\t\tsuccessfulMessage: \"Your password was changed!\",\r\n\t\t\t\t\t\t\tisPasswordModalOpened: false,\r\n\t\t\t\t\t\t\thiddenEditInfo: true,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\t\tUnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\r\n\thandleAddAllergen = (allergenName) => {\r\n\t\tthis.setState({\r\n\t\t\thiddenAllergenSuccessfulAlert: true,\r\n\t\t\tsuccessfulAllergenHeader: \"\",\r\n\t\t\tsuccessfulAllergenMessage: \"\",\r\n\t\t\thiddenAllergenErrorAlert: true,\r\n\t\t\terrorAllergenHeader: \"\",\r\n\t\t\terrorAllergenMessage: \"\",\r\n\t\t});\r\n\t\tconsole.log(allergenName);\r\n\t\tlet patientsAllergenDTO = { allergenName: allergenName, patientId: this.state.id };\r\n\t\tconsole.log(patientsAllergenDTO);\r\n\t\t\r\n\t\tAxios.post(API_URL + \"/users/addPatientsAllergen\", patientsAllergenDTO, {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\thiddenAllergenErrorAlert: false,\r\n\t\t\t\t\t\terrorAllergenHeader: \"Bad request\",\r\n\t\t\t\t\t\terrorAllergenMessage: \"Bad request when adding allergen.\",\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (res.status === 500) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\thiddenAllergenErrorAlert: false,\r\n\t\t\t\t\t\terrorAllergenHeader: \"Internal server error\",\r\n\t\t\t\t\t\terrorAllergenMessage: \"Server error.\",\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (res.status === 200) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thiddenAllergenSuccessfulAlert: false,\r\n\t\t\t\t\t\tsuccessfulAllergenHeader: \"Successful\",\r\n\t\t\t\t\t\tsuccessfulAllergenMessage: \"Allergen added.\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.componentDidMount()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\tUnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t\t});\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\thandleRemoveAllergen = (allergenName) => {\r\n\t\tthis.setState({\r\n\t\t\thiddenAllergenSuccessfulAlert: true,\r\n\t\t\tsuccessfulAllergenHeader: \"\",\r\n\t\t\tsuccessfulAllergenMessage: \"\",\r\n\t\t\thiddenAllergenErrorAlert: true,\r\n\t\t\terrorAllergenHeader: \"\",\r\n\t\t\terrorAllergenMessage: \"\",\r\n\t\t});\r\n\t\tconsole.log(allergenName);\r\n\t\tlet patientsAllergenDTO = { allergenName: allergenName, patientId: this.state.id };\r\n\t\tconsole.log(patientsAllergenDTO);\r\n\r\n\t\tAxios.put(API_URL + \"/users/removePatientsAllergen\", patientsAllergenDTO, {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\thiddenAllergenErrorAlert: false,\r\n\t\t\t\t\t\terrorAllergenHeader: \"Bad request\",\r\n\t\t\t\t\t\terrorAllergenMessage: \"Bad request when removing allergen.\",\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (res.status === 500) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\thiddenAllergenErrorAlert: false,\r\n\t\t\t\t\t\terrorAllergenHeader: \"Internal server error\",\r\n\t\t\t\t\t\terrorAllergenMessage: \"Server error.\",\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (res.status === 200) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thiddenAllergenSuccessfulAlert: false,\r\n\t\t\t\t\t\tsuccessfulAllergenHeader: \"Successful\",\r\n\t\t\t\t\t\tsuccessfulAllergenMessage: \"Allergen removed.\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.componentDidMount()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\tUnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\r\n        \r\n\t\treturn(\r\n\r\n            <React.Fragment>\r\n\r\n            <Header/>  \r\n\r\n            <div id=\"userProfilePage\" className=\"container\">\r\n\r\n\r\n\t\t\t\t\t<SuccessfulAlert\r\n\t\t\t\t\t\thidden={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\t\t\theader={this.state.successfulHeader}\r\n\t\t\t\t\t\tmessage={this.state.successfulMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<UnsuccessfulAlert\r\n\t\t\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t\t\t\t/>\r\n\r\n\r\n\r\n            <h4 className=\" text-center  mb-0 text-uppercase\" style={{ marginTop: \"2rem\" }}>\r\n\t\t\t\t\t\tUser profile\r\n\t\t\t</h4>\r\n\r\n            <div className=\"row mt-5 \">\r\n\r\n\t\t\t\t\t<div className=\"col  container  offset-1 shadow p-3  bg-white \">\r\n                        <h5 className=\" text-center text-uppercase\">Personal Information</h5>\r\n                        \r\n\r\n\t\t\t\t\t\t<form id=\"contactForm\" name=\"sentMessage\">\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" >\r\n\t\t\t\t\t\t\t\t\t\t<b>Email address:</b>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email address\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control-plaintext\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleEmailChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.email}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" >\r\n\t\t\t\t\t\t\t\t\t\t<b>Name:</b>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly={this.state.hiddenEditInfo}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={!this.state.hiddenEditInfo === false ? \"form-control-plaintext\" : \"form-control\"}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleNameChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n\t\t\t\t\t\t\t\t\t\tName must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\">\r\n\t\t\t\t\t\t\t\t\t\t<b>Surname:</b>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly={this.state.hiddenEditInfo}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={!this.state.hiddenEditInfo === false ? \"form-control-plaintext\" : \"form-control\"}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Surname\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleSurnameChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.surname}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.surnameError }}>\r\n\t\t\t\t\t\t\t\t\t\tSurname must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Adress:</b>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\treadOnly={this.state.hiddenEditInfo}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={!this.state.hiddenEditInfo === false ? \"form-control-plaintext\" : \"form-control\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Adress\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleAddressChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.address}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.addressError }}>\r\n\t\t\t\t\t\t\t\t\t\tAddress must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" >\r\n\t\t\t\t\t\t\t\t\t\t<b>Phone number:</b>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Phone number\"\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly={this.state.hiddenEditInfo}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={!this.state.hiddenEditInfo === false ? \"form-control-plaintext\" : \"form-control\"}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handlePhoneNumberChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.phoneNumber}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.phoneError }}>\r\n\t\t\t\t\t\t\t\t\t\tPhone number must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.phoneValidateError }}>\r\n\t\t\t\t\t\t\t\t\t\tIncorect phone number.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group text-center\" hidden={this.state.hiddenEditInfo}>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{  marginTop: \"15px\" }}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleChangeInfo}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-xl\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tChange information\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-row justify-content-center mr-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"mr-2\" hidden={!this.state.hiddenEditInfo}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleEditInfoClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-xl\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit Info\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"mr-2\" hidden={!this.state.hiddenEditInfo}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleChangePasswordModalOpen}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-xl\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tChange password\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"mr-2\" hidden={!this.state.hiddenEditInfo}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleAllergenModal}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-xl\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAllergens\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t\r\n\r\n                    </div>\r\n\r\n\t\t\t\t\t\r\n\r\n            </div>\r\n\r\n\r\n            \r\n\r\n            </div>\r\n\r\n\r\n\r\n\t\t\t<ChangePasswordModal\r\n\t\t\t\t\theader=\"Change password\"\r\n\t\t\t\t\thiddenPasswordErrorAlert={this.state.hiddenPasswordErrorAlert}\r\n\t\t\t\t\terrorPasswordHeader={this.state.errorPasswordHeader}\r\n\t\t\t\t\terrorPasswordMessage={this.state.errorPasswordMessage}\r\n\t\t\t\t\temptyOldPasswordError={this.state.emptyOldPasswordError}\r\n\t\t\t\t\temptyNewPasswordError={this.state.emptyNewPasswordError}\r\n\t\t\t\t\temptyNewPasswordRepeatedError={this.state.emptyNewPasswordRepeatedError}\r\n\t\t\t\t\tnewPasswordAndRepeatedNotSameError={this.state.newPasswordAndRepeatedNotSameError}\r\n\t\t\t\t\tshow={this.state.isPasswordModalOpened}\r\n\t\t\t\t\tchangePassword={this.changePassword}\r\n\t\t\t\t\tonCloseModal={this.handleChangePasswordModalClose}\r\n\t\t\t\t\thandleCloseAlertPassword={this.handleCloseAlertPassword}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<AllergensModal\r\n\t\t\t\t\thiddenAllergenSuccessfulAlert={this.state.hiddenAllergenSuccessfulAlert}\r\n\t\t\t\t\tsuccessfulAllergenHeader={this.state.successfulAllergenHeader}\r\n\t\t\t\t\tsuccessfulAllergenMessage={this.state.successfulAllergenMessage}\r\n\t\t\t\t\thandleCloseAllergenAlertSuccessful={this.handleCloseAllergenAlertSuccessful}\r\n\r\n\t\t\t\t\thiddenAllergenErrorAlert={this.state.hiddenAllergenErrorAlert}\r\n\t\t\t\t\terrorAllergenHeader={this.state.errorAllergenHeader}\r\n\t\t\t\t\terrorAllergenMessage={this.state.errorAllergenMessage}\r\n\t\t\t\t\thandleCloseAllergenAlertError={this.handleCloseAllergenAlertError}\r\n\r\n\t\t\t\t\tuserAllergens={this.state.userAllergens}\r\n\t\t\t\t\tshow={this.state.openAllergenModal}\r\n\t\t\t\t\tRemoveAllergen={this.handleRemoveAllergen}\r\n\t\t\t\t\tAddAllergen={this.handleAddAllergen}\r\n\t\t\t\t\tonCloseModal={this.handleAllergensModalClose}\r\n\t\t\t\t\theader=\"Patients allergens\"\r\n\t\t\t\t\tsubheader=\"Remove patients allergens\"\r\n\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n            </React.Fragment>\r\n\r\n\r\n        );\r\n        \r\n\t}\r\n\r\n\r\n}\r\n\r\nexport default UserProfile;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\DermatologistFreeAppointment.js",["176","177"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport { withRouter } from \"react-router\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport FreeDermatologistAppointmentPicture from \"../Images/appointment.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass DermatologistFreeAppointment extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        pharmacyId: \"\",\r\n        appointments : [],\r\n        hiddenSuccessfulAlert: true,\r\n        successfulHeader: \"\",\r\n        successfulMessage: \"\",\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n\r\n\r\n\r\n    };\r\n\r\n  \r\n  \r\n\r\n  setPharmacyIdFromUrl = (id) => {\r\n        \r\n    this.setState({\r\n    \r\n        pharmacyId : id\r\n      });\r\n\r\n\r\n    };\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n\r\n\r\n    const pathParams= window.location.pathname;\r\n    const paramsList= pathParams.split(\"/\");\r\n    const id = paramsList[2];\r\n\r\n    console.log(id);\r\n\r\n    this.setPharmacyIdFromUrl(id);\r\n      \r\n    Axios.get(API_URL + \"/appointment/dermatologist/allAppointmentsForchosenPharmacy/\" + id, {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n          this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\r\n\r\n  scheduleSelectedAppointment = (appointmentId) => {\r\n  \r\n    let appointmentIdObject = { id: appointmentId};\r\n\r\n    Axios.post(API_URL + \"/appointment/dermatologist/reserveFreeDermatologistAppointment\",appointmentIdObject , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n      .then((res) => {\r\n        if (res.status === 400) {\r\n          this.setState({ hiddenUnsuccessfulAlert: false,\r\n            UnsuccessfulHeader: \"Bad request\", \r\n            UnsuccessfulMessage: res.data });\r\n\r\n        } else if (res.status === 500) {\r\n\r\n          this.setState({ hiddenUnsuccessfulAlert: false, \r\n            UnsuccessfulHeader: \"Internal server error\", \r\n            UnsuccessfulMessage: \"Server error.\" });\r\n\r\n        } else if (res.status === 200) {\r\n          console.log(\"Success\");\r\n          this.setState({\r\n            hiddenSuccessfulAlert: false,\r\n            successfulHeader: \"Success\",\r\n            successfulMessage: \"You have successfully scheduled the desired appointment! \",\r\n            hiddenEditInfo: true,\r\n          });\r\n\r\n          this.refreshAppointments(appointmentId);\r\n\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({ hiddenUnsuccessfulAlert: false,\r\n          UnsuccessfulHeader: \"Error\", \r\n          UnsuccessfulMessage: \"Something was wrong\" });\r\n      \r\n      });\r\n\r\n\r\n\r\n  }\r\n\r\n  refreshAppointments (appointmentId) {\r\n\r\n    let newAppointmentsList= [];\r\n    for (let appointment of this.state.appointments) {\r\n      if (appointment.Id !== appointmentId) \r\n          newAppointmentsList.push(appointment)\r\n    }\r\n\r\n    this.setState({\r\n     appointments : newAppointmentsList,\r\n    });\r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n  handleSortByPriceAscending = () => {\r\n    Axios.get(API_URL + \"/appointment/dermatologist/sortByPriceAscending/\" + this.state.pharmacyId, {\r\n      validateStatus: () => true,\t\r\n      headers: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n            this.setState({ appointments: res.data});\r\n            console.log(res.data);\r\n        \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n\r\n\r\n  handleSortByPriceDescending = () => {\r\n\r\n    Axios.get(API_URL + \"/appointment/dermatologist/sortByPriceDescending/\" + this.state.pharmacyId, {\r\n      validateStatus: () => true,\t\r\n      headers: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n            this.setState({ appointments: res.data});\r\n            console.log(res.data);\r\n        \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n  };\r\n\r\n\r\n  handleSortByDermatologistGradeAscending = () =>{\r\n\r\n    Axios.get(API_URL + \"/appointment/dermatologist/sortByDermatologistGradeAscending/\" + this.state.pharmacyId, {\r\n      validateStatus: () => true,\t\r\n      headers: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n            this.setState({ appointments: res.data});\r\n            console.log(res.data);\r\n        \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n  };\r\n\r\n\r\n  handleSortByDermatologistGradeDescending = () => {\r\n\r\n    Axios.get(API_URL + \"/appointment/dermatologist/sortByDermatologistGradeDescending/\" + this.state.pharmacyId, {\r\n      validateStatus: () => true,\t\r\n      headers: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n            this.setState({ appointments: res.data});\r\n            console.log(res.data);\r\n        \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n  };\r\n\r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n         <h1 hidden={this.state.appointments.length === 0} className=\"text-center  mt-3  \" >Please select appointment from the list!</h1>\r\n         <h1 hidden={this.state.appointments.length !== 0} className=\"text-center  mt-3 text-danger\"  >Sorry, we don't have free dermatologist appointments for selected pharmacy!</h1>\r\n\r\n\r\n\r\n         <SuccessfulAlert\r\n\t\t\t\t\t\thidden={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\t\t\theader={this.state.successfulHeader}\r\n\t\t\t\t\t\tmessage={this.state.successfulMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<UnsuccessfulAlert\r\n\t\t\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t\t\t\t/>\r\n\r\n        \r\n\r\n          <div className=\"dropdown\">\r\n            <button className=\"btn btn-primary btn-lg dropdown-toggle\"\r\n             type=\"button\" id=\"dropdownMenu2\"\r\n              data-toggle=\"dropdown\" \r\n              aria-haspopup=\"true\" \r\n              aria-expanded=\"false\">\r\n              Sort\r\n            </button>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n              <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByPriceAscending} >Sort by price ascending</button>\r\n              <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByPriceDescending} >Sort by price descending</button>\r\n              <button className=\"dropdown-item\" type=\"button\" onClick={this.handleSortByDermatologistGradeAscending} >Sort by dermatologist grade ascending</button>\r\n              <button className=\"dropdown-item\" type=\"button\"onClick={this.handleSortByDermatologistGradeDescending} >Sort by dermatologist grade descending</button>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n\r\n\r\n\r\n\r\n        <div className=\"container\">\r\n                    \r\n          <table className=\"table table-hover\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.appointments.map((appointment) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tkey={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.scheduleSelectedAppointment(appointment.Id)}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\r\n                   <td width=\"100px\">  \r\n                     <img  src={FreeDermatologistAppointmentPicture} style={{ width: \"85px\", marginTop: \"15px\" }}></img>                                 \r\n                                    \r\n                    </td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Start time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.endDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price:</b>{\" \"}\r\n                      {appointment.EntityDTO.price }\r\n                      <b>  din</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                  \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Dermatologist: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{appointment.EntityDTO.employee.EntityDTO.name + \" \" + appointment.EntityDTO.employee.EntityDTO.surname}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                    <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Dermatologist grade: </b> {appointment.EntityDTO.employee.EntityDTO.grade} {\" \"} \r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                      \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n                </div>\r\n\r\n\r\n\r\n          \r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(DermatologistFreeAppointment);","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\LoginPage.js",[],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\FutureDermatologistAppointmentsForPatient.js",["178","179","180","181"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass FutureDermatologistAppointmentsForPatient extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        pharmacyId: \"\",\r\n        appointments : [],\r\n        hiddenSuccessfulAlert: true,\r\n        successfulHeader: \"\",\r\n        successfulMessage: \"\",\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n\r\n\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n    \r\n    Axios.get(API_URL + \"/appointment/dermatologist/findAllFuturePatientsAppointmets\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\r\n\r\n    handleCancelAppointment = (appointmentId) => {\r\n  \r\n    let appointmentIdObject = { id: appointmentId};\r\n\r\n    Axios.post(API_URL + \"/appointment/dermatologist/cancelAppointment\",appointmentIdObject , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n      .then((res) => {\r\n        if (res.status === 400) {\r\n          this.setState({ hiddenUnsuccessfulAlert: false,\r\n            UnsuccessfulHeader: \"Bad request\", \r\n            UnsuccessfulMessage: res.data });\r\n\r\n        } else if (res.status === 500) {\r\n\r\n          this.setState({ hiddenUnsuccessfulAlert: false, \r\n            UnsuccessfulHeader: \"Internal server error\", \r\n            UnsuccessfulMessage: \"Server error.\" });\r\n\r\n        } \r\n        else if (res.status === 404) {\r\n\r\n            this.setState({ hiddenUnsuccessfulAlert: false, \r\n              UnsuccessfulHeader: \"Internal server error\", \r\n              UnsuccessfulMessage: res.data });\r\n  \r\n        } else if (res.status === 200) {\r\n          console.log(\"Success\");\r\n          this.setState({\r\n            hiddenSuccessfulAlert: false,\r\n            successfulHeader: \"Success\",\r\n            successfulMessage: \"You have successfully canceled the desired appointment! \",\r\n            hiddenEditInfo: true,\r\n          });\r\n\r\n          this.refreshAppointments(appointmentId);\r\n\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({ hiddenUnsuccessfulAlert: false,\r\n          UnsuccessfulHeader: \"Error\", \r\n          UnsuccessfulMessage: \"Something was wrong\" });\r\n      \r\n      });\r\n\r\n\r\n\r\n  }\r\n\r\n  refreshAppointments (appointmentId) {\r\n\r\n    let newAppointmentsList= [];\r\n    for (let appointment of this.state.appointments) {\r\n      if (appointment.Id !== appointmentId) \r\n          newAppointmentsList.push(appointment)\r\n    }\r\n\r\n    this.setState({\r\n     appointments : newAppointmentsList,\r\n    });\r\n\r\n  }\r\n\r\n\r\n  \r\n  \r\n\r\n    isAvailableToCanceled =(date) => {\r\n\r\n        var appointmentDate= new Date(date);\r\n        appointmentDate.setDate(appointmentDate.getDate() -1);\r\n\r\n        if(appointmentDate <= new Date()){\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n \r\n    moveToExaminationHistory =() => {\r\n\r\n       this.props.history.push(\"/historyDermatologistAppointmentsForPatient\");\r\n    }\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n         <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\r\n         onClick={() => this.moveToExaminationHistory()}\r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n          >\r\n         Examination history\r\n         </button>\r\n\r\n         <h1 hidden={this.state.appointments.length === 0} className=\"text-center  mt-3  \" >Your future appointments!</h1>\r\n         <h1 hidden={this.state.appointments.length !== 0} className=\"text-center  mt-3 text-danger\"  >You don't have future appointments!</h1>\r\n\r\n\r\n\r\n         <SuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\theader={this.state.successfulHeader}\r\n\t\t\t\tmessage={this.state.successfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n\t\t/>\r\n\t\t<UnsuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t/>\r\n\r\n        \r\n    \r\n        <div className=\"container\">\r\n                    \r\n          <table className=\"table table-hover\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.appointments.map((appointment) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tkey={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\r\n                   <td width=\"100px\">  \r\n                     <img  src={DermatologistAppointmentPicture} style={{ width: \"85px\", marginTop: \"15px\" }}></img>                                 \r\n                                    \r\n                    </td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Start time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.endDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price:</b>{\" \"}\r\n                                         {appointment.EntityDTO.price }\r\n                                             <b>  din</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                  \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Dermatologist: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{appointment.EntityDTO.employee.EntityDTO.name + \" \" + appointment.EntityDTO.employee.EntityDTO.surname}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                         <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Dermatologist grade: </b> {appointment.EntityDTO.employee.EntityDTO.grade} {\" \"} \r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                      \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                                    <td>\r\n                                    <button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n                                            className=\"btn btn-outline-danger\"\r\n\t\t\t\t\t\t\t\t\t\t\thidden={this.isAvailableToCanceled(new Date(appointment.EntityDTO.startDateTime))}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleCancelAppointment(appointment.Id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n                                    </td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n                </div>\r\n\r\n\r\n\r\n          \r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FutureDermatologistAppointmentsForPatient;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\HistoryDermatologistAppointmentsForPatient.js",["182","183","184","185"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass HistoryDermatologistAppointmentsForPatient extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        pharmacyId: \"\",\r\n        appointments : [],\r\n        hiddenSuccessfulAlert: true,\r\n        successfulHeader: \"\",\r\n        successfulMessage: \"\",\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n\r\n\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n    \r\n    Axios.get(API_URL + \"/appointment/dermatologist/findAllHistoryPatientsAppointmets\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\r\n    \r\n \r\n    moveToFutureExamination =() => {\r\n\r\n       this.props.history.push(\"/futureDermatologistAppointmentsForPatient\");\r\n    }\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n\r\n         <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\r\n         onClick={() => this.moveToFutureExamination()}\r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n         >\r\n         Future Examination\r\n        </button>\r\n\r\n\r\n         <h1 hidden={this.state.appointments.length === 0} className=\"text-center  mt-3  \" >Your history appointments!</h1>\r\n         <h1 hidden={this.state.appointments.length !== 0} className=\"text-center  mt-3 text-danger\"  >You don't have future appointments!</h1>\r\n\r\n\r\n\r\n         <SuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\theader={this.state.successfulHeader}\r\n\t\t\t\tmessage={this.state.successfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n\t\t/>\r\n\t\t<UnsuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t/>\r\n\r\n        \r\n   \r\n        <div className=\"container\">\r\n                    \r\n          <table className=\"table table-hover\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.appointments.map((appointment) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tkey={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\r\n                   <td width=\"100px\">  \r\n                     <img  src={DermatologistAppointmentPicture} style={{ width: \"85px\", marginTop: \"15px\" }}></img>                                 \r\n                                    \r\n                    </td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Start time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.endDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price:</b>{\" \"}\r\n                                         {appointment.EntityDTO.price }\r\n                                             <b>  din</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                  \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Dermatologist: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{appointment.EntityDTO.employee.EntityDTO.name + \" \" + appointment.EntityDTO.employee.EntityDTO.surname}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                         <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Dermatologist grade: </b> {appointment.EntityDTO.employee.EntityDTO.grade} {\" \"} \r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                      \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                                    \r\n                                    \r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n                </div>\r\n\r\n\r\n\r\n          \r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default HistoryDermatologistAppointmentsForPatient;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\RegisterPharmacies.js",["186"],"import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport Header from \"../../Components/Header\";\r\nimport Axios from \"axios\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nimport { getRoles } from \"@testing-library/dom\";\r\n\r\n\r\n\r\nclass RegisterPharmacies extends Component {\r\n\tstate = {\r\n\t\tname: \"\",\r\n\t\tdescription: \"\",\r\n\t\taddress: \"\",\r\n\t\tcity: \"\",\r\n\t\tstreet: \"\",\r\n\t\tcountry: \"\",\r\n\t\tpostcode: \"\",\r\n\t\tconsulationPrice: \"\",\r\n\t\topenModalData: false,\r\n\t\tnameError: \"none\",\r\n\t\tCityError: \"none\",\r\n\t\tStreetError: \"none\",\r\n\t\tCountryError: \"none\",\r\n\t\tPostcodeError: \"none\",\r\n\t\tconsulationPriceError: \"none\",\r\n\t\tdescriptionError: \"none\",\r\n\t\topenModal: false,\r\n\t\tcoords: [],\r\n        redirect: false,\r\n        redirectUrl: '',\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.addressInput = React.createRef();\r\n\t}\r\n\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tAxios.get(\"/api/users/sysadmin/auth\", { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\r\n\t\t.then((res) => {\r\n\t\t\tconsole.log(res.statusm, \"TEST\")\r\n\t\t\tif (res.status === 401) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tredirect: true,\r\n\t\t\t\t\tredirectUrl: \"/unauthorized\"\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n\t}\r\n\r\n\thandleModalDataClose = () => {\r\n\t\tthis.setState({ \r\n\t\t\topenModalData: false,\r\n\t\t});\r\n\t};\r\n\r\n\tonYmapsLoad = (ymaps) => {\r\n\t\tthis.ymaps = ymaps;\r\n\t\tnew this.ymaps.SuggestView(this.addressInput.current, {\r\n\t\t\tprovider: {\r\n\t\t\t\tsuggest: (request, options) => this.ymaps.suggest(request),\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\thandleNameChange = (event) => {\r\n\t\tthis.setState({ name: event.target.value });\r\n\t};\r\n\thandleCityChange = (event) => {\r\n\t\tthis.setState({ city: event.target.value });\r\n\t};\r\n\thandleStreetChange = (event) => {\r\n\t\tthis.setState({ street: event.target.value });\r\n\t};\r\n\thandleCountryChange = (event) => {\r\n\t\tthis.setState({ country: event.target.value });\r\n\t};\r\n\thandlePostcodeChange = (event) => {\r\n\t\tthis.setState({ postcode: event.target.value });\r\n\t};\r\n\r\n\thandleAddressChange = (event) => {\r\n\t\tthis.setState({ address: event.target.value });\r\n\t};\r\n\r\n\thandleConsulationPriceChange = (event) => {\r\n\t\tthis.setState({ consulationPrice: event.target.value });\r\n\t};\r\n\t\r\n\thandleDescriptionChange = (event) => {\r\n\t\tthis.setState({ description: event.target.value });\r\n\t};\r\n\r\n\tvalidateForm = (userDTO) => {\r\n\t\tthis.setState({\r\n\t\t\tnameError: \"none\",\r\n\t\t\tCityError: \"none\",\r\n\t\t\tStreetError: \"none\",\r\n\t\t\tCountryError: \"none\",\r\n\t\t\tPostcodeError: \"none\",\r\n\t\t\tconsulationPriceError: \"none\",\r\n\t\t});\r\n\r\n\t\tif (userDTO.name === \"\") {\r\n\t\t\tthis.setState({ nameError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.address.city === \"\") {\r\n\t\t\tthis.setState({ CityError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.address.street === \"\") {\r\n\t\t\tthis.setState({ StreetError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.address.country === \"\") {\r\n\t\t\tthis.setState({ CountryError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.address.postcode === \"\") {\r\n\t\t\tthis.setState({ PostcodeError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.consulationPrice === \"\") {\r\n\t\t\tthis.setState({ consulationPriceError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t};\r\n\r\n\thandleModalClose = () => {\r\n\t\tthis.setState({ openModal: false });\r\n\t};\r\n\r\n\thandleSignUp = () => {\r\n\r\n\t\t\r\n\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tvar address = {city:this.state.city, street:this.state.street, country: this.state.country, postCode:this.state.postcode};\r\n\r\n\r\n\r\n\t\t\tlet pharmacyDTO = {\r\n\t\t\t\tname: this.state.name,\r\n\t\t\t\taddress: address,\r\n\t\t\t\tdescription: this.state.description,\r\n\t\t\t};\r\n\r\n\r\n\t\t\t\tconsole.log(pharmacyDTO);\r\n\t\t\t\tif (this.validateForm(pharmacyDTO)) {\r\n\r\n\t\t\t\t\tconsole.log(\"usao u zahtev\");\r\n\t\t\t\t\tconsole.log(GetAuthorisation());\r\n\t\t\t\t\tconsole.log(localStorage.getItem(\"keyRole\"));\r\n\t\t\t\t\r\n\t\t\t\t\tAxios.post(\"http://localhost:8080/pharmacy\", pharmacyDTO, {  headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\t\tthis.setState({ openModal: true });\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n\t};\r\n\t\r\n\thandleSelectChange  = (event) => {\r\n\t\tthis.setState({ selectValue: event.target.value });\r\n\t};\r\n\r\n\r\n    render() {\r\n\t\tif (this.state.redirect) return <Redirect push to={this.state.redirectUrl} />;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t\r\n\t\t\t\t<Header />\r\n\r\n\t\t\t\t<div className=\"container\" style={{ marginTop: \"8%\" }}>\r\n\t\t\t\t\t<h5 className=\" text-center  mb-0 text-uppercase\" style={{ marginTop: \"2rem\" }}>\r\n\t\t\t\t\t\tRegistrater pharmacy\r\n\t\t\t\t\t</h5>\r\n\r\n\t\t\t\t\t<div className=\"row section-design\">\r\n\t\t\t\t\t\t<div className=\"col-lg-8 mx-auto\">\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<form id=\"contactForm\" name=\"sentMessage\" novalidate=\"novalidate\">\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Name:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleNameChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n\t\t\t\t\t\t\t\t\t\tName must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>City:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"City\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleCityChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.city}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.CityError }}>\r\n\t\t\t\t\t\t\t\t\t\tCity must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Street:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Street\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleStreetChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.street}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.StreetError }}>\r\n\t\t\t\t\t\t\t\t\t\tStreet must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Country:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Country\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleCountryChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.country}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.CountryError }}>\r\n\t\t\t\t\t\t\t\t\t\tCountry must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Postcode:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Postcode\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handlePostcodeChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.postcode}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.PostcodeError }}>\r\n\t\t\t\t\t\t\t\t\t\tPostcode must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Description:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Description\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleDescriptionChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.description}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.descriptionError }}>\r\n\t\t\t\t\t\t\t\t\t  Description must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tbackground: \"#1977cc\",\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: \"15px\",\r\n\t\t\t\t\t\t\t\t\t\t\tmarginLeft: \"40%\",\r\n\t\t\t\t\t\t\t\t\t\t\twidth: \"20%\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleSignUp}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-xl\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(RegisterPharmacies);\r\n\r\n\r\n","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\RegisterDrug.js",["187","188","189","190","191","192"],"import GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nimport Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Header from \"../../Components/Header\";\r\n\r\n\r\n\r\n\r\nclass RegisterDrug extends Component {\r\n\r\n    state = {\r\n\t\tname: \"\",\r\n\t\tproducerName:\"\",\r\n\t\tinstanceName: \"\",\r\n\t\tdescription: \"\",\r\n\t\tdrugCode: \"\",\r\n\t\tdrugKind: \"\",\r\n\t\tdrugFormat:\"\",\r\n\t\tloyaltyPoints:\"\",\r\n\t\tquantity:\"\",\r\n\t\tdrugChange: \"\",\r\n\t\topenModalData: false,\r\n\t\tdrugKinds: [],\r\n\t\tdrugFormats: [],\r\n\t\tdrugs: [],\r\n\t\tdrugReplacements: [],\r\n\t\tdrugReplacementsEntity: [],\r\n\t\tmanufacturers: [],\r\n\t\tmanufacturer:null,\r\n\t\tingredients: [],\r\n\t\tsideEffects: \"\",\r\n\t\tonReciept: \"\",\r\n\t\trecommendAmount: \"\",\r\n\t\tdrugIngredient: \"\",\r\n\t\tselectedManufacturer: null,\r\n\t\tselectDrugReplacement: null,\r\n\t\tnameError: \"none\",\r\n\t\tconsulationPriceError: \"none\",\r\n\t\topenModal: false,\r\n\t\tcoords: [],\r\n        redirect: false,\r\n        redirectUrl: '',\r\n\t};\r\n\r\n\r\n    componentDidMount() {\r\n\r\n\t\tAxios.get(\"http://localhost:8080/drug/manufacturers\")\r\n\t\t\t.then((res) => {\r\n\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.setState({\r\n                        redirect: true,\r\n                        redirectUrl: \"/unauthorized\"\r\n                    });\r\n                } else {\r\n\t\t\t\tthis.setState({ \r\n\t\t\t\t\tmanufacturers: res.data,\r\n\t\t\t\t\tmanufacturer: res.data[0],\r\n\t\t\t\t });\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\t\tAxios.get(\"http://localhost:8080/drug/drugkind\")\r\n\t\t\t.then((res) => {\r\n\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.setState({\r\n                        redirect: true,\r\n                        redirectUrl: \"/unauthorized\"\r\n                    });\r\n                } else {\r\n\r\n\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\tdrugKinds: res.data ,\r\n\t\t\t\t\t\tdrugKind: res.data[0].EntityDTO.type\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n                console.log(\"uso u err kod get drug kind\");\r\n\t\t\t});\r\n\t\t\r\n\t\tAxios.get(\"http://localhost:8080/drug/drugformat\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ \r\n\t\t\t\t\tdrugFormats: res.data,\r\n\t\t\t\t\tdrugFormat: res.data[0].EntityDTO.type\r\n\t\t\t\t});\r\n            \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\t\t\r\n\t\tAxios.get(\"http://localhost:8080/drug\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ drugs: res.data });\r\n                console.log(res.data);\t\r\n\t\t\t\tthis.state.drugChange = res.data[0].EntityDTO.drugInstanceName;\r\n            \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n                console.log(\"USAO U GET DRUG ERROR\");\r\n\t\t\t});\r\n\r\n\t\tAxios.get(\"/api/users/sysadmin/auth\", { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\r\n            .then((res) => {\r\n\t\t\t\tconsole.log(res.statusm, \"TEST\")\r\n                if (res.status === 401) {\r\n                    this.setState({\r\n                        redirect: true,\r\n                        redirectUrl: \"/unauthorized\"\r\n                    });\r\n                } else {\r\n                    console.log(res.data);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n\t\t\r\n    }\r\n\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\tonManufacturerChange  = (manufacturer) => {\r\n\t\tthis.state.selectedManufacturer = manufacturer;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\thandleModalClose = () => {\r\n\t\tthis.setState({ openModal: false });\r\n\t};\r\n\t\r\n\taddIngredient = (event) => {\r\n\t\t\r\n\t\tif (this.state.drugIngredient === \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n  \t\tevent.preventDefault();\r\n  \t\tthis.state.ingredients.push(this.state.drugIngredient);\r\n\t\tdocument.getElementById(\"demo\").innerHTML = this.state.ingredients;\r\n  \t\t\r\n\t};\r\n\t\r\n\t\r\n\taddReplacement = (event) => {\r\n\t\tif (this.state.drugChange === \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tevent.preventDefault();\r\n\t\tif(this.state.drugReplacements.includes(this.state.drugChange))\r\n\t\t\treturn;\r\n\t\t\t\r\n  \t\tthis.state.drugReplacementsEntity.push(this.state.selectDrugReplacement);\r\n  \t\tthis.state.drugReplacements.push(this.state.drugChange);\r\n\t\tdocument.getElementById(\"replacement\").innerHTML = this.state.drugReplacements;\r\n\t\tconsole.log(this.state.drugReplacements);\r\n\t\tconsole.log(this.state.drugReplacementsEntity, \"ENTITY DRUG\");\r\n  \t\t\r\n\t};\r\n\t\r\n\thandleDrugChange = (event) => {\r\n\t\tthis.setState({ drugChange: event.target.options[event.target.selectedIndex].text,\r\n\t\tselectDrugReplacement:  this.state.drugs[event.target.value]});\r\n\t};\r\n\t\r\n\tonDrugReplacementEntityChange  = (drug) => {\r\n\t\r\n\t};\r\n\t\r\n\thandleManufacturerChange = (event) => {\r\n\t\tthis.setState({ manufacturer: this.state.manufacturers[event.target.value]});\r\n\t};\r\n\t\r\n\tresetReplacement = (event) => {\r\n  \t\tevent.preventDefault();\r\n  \t\tthis.setState({drugReplacements: []});\r\n  \t\tthis.setState({drugReplacementsEntity: []});\r\n\t\tdocument.getElementById(\"replacement\").innerHTML = \"\";\r\n  \t\t\r\n\t};\r\n\t\r\n\tcreateIngredient = (event) => {\r\n\r\n        console.log(\"usao u fju1\");\r\n\r\n\t\t\r\n\t\tfor (const [index, value] of this.state.ingredients.entries()) {\r\n\t\t\tlet ingredientDTO = {\r\n\t\t\t\tname: this.state.ingredients[index],\r\n\t\t\t};\r\n\t\t\t\r\n            console.log(\"usao u fju2\");\r\n\r\n\t\t\tAxios.post(\"http://localhost:8080/ingredients\", ingredientDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    console.log(\"greska create ingridijent\");\r\n\t\t\t\t});\r\n\t\t}\r\n  \t\t\r\n\t};\r\n\t\r\n\t\r\n\tresetIngredient = (event) => {\r\n  \t\tevent.preventDefault();\r\n  \t\tthis.setState({ingredients: []});\r\n\t\tdocument.getElementById(\"demo\").innerHTML = \"\";\r\n  \t\t\r\n\t};\r\n\t\r\n\thandleOnRecieptChange = (event) => {\r\n\t\tthis.setState({ onReciept: event.target.value })\r\n\t};\r\n\r\n\thandleDrugIngredientChange = (event) => {\r\n\t\tthis.setState({ drugIngredient: event.target.value });\r\n\t};\r\n\t\r\n\thandleLoyaltyPointsChange = (event) => {\r\n\t\tthis.setState({ loyaltyPoints: event.target.value });\r\n\t};\r\n\t\r\n\thandleQuantityChange = (event) => {\r\n\t\tthis.setState({ quantity: event.target.value });\r\n\t};\r\n\r\n\thandleRecommendAmountChange = (event) => {\r\n\t\tthis.setState({ recommendAmount: event.target.value });\r\n\t};\r\n\t\r\n\thandleNameChange = (event) => {\r\n\t\tthis.setState({ name: event.target.value });\r\n\t};\r\n\thandleProducerNameChange = (event) => {\r\n\t\tthis.setState({ producerName: event.target.value });\r\n\t};\r\n\t\r\n\thandleInstanceNameChange = (event) => {\r\n\t\tthis.setState({ instanceName: event.target.value });\r\n\t};\r\n\t\r\n\thandleSideEffectsChange = (event) => {\r\n\t\tthis.setState({ sideEffects: event.target.value });\r\n\t};\r\n\r\n\thandleDrugCodeChange = (event) => {\r\n\t\tthis.setState({ drugCode: event.target.value });\r\n\t};\r\n\t\r\n\thandleDrugKindChange = (event) => {\r\n\t\tthis.setState({ drugKind: event.target.value });\r\n\t};\r\n\t\r\n\thandleDrugFormatChange = (event) => {\r\n\t\tthis.setState({ drugFormat: event.target.value });\r\n\t\tconsole.log(event.target.value);\r\n\t};\r\n\t\r\n\thandleDescriptionChange = (event) => {\r\n\t\tthis.setState({ description: event.target.value });\r\n\t};\r\n\r\n\tvalidateForm = (userDTO) => {\r\n\t\tthis.setState({\r\n\t\t\tnameError: \"none\",\r\n\t\t\taddressError: \"none\",\r\n\t\t\tconsulationPriceError: \"none\",\r\n\t\t});\r\n\r\n\t\tif (userDTO.name === \"\") {\r\n\t\t\tthis.setState({ nameError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.consulationPrice === \"\") {\r\n\t\t\tthis.setState({ consulationPriceError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t};\r\n\r\n\thandleModalDataClose = () => {\r\n\t\tthis.setState({ \r\n\t\t\topenModalData: false,\r\n\t\t});\r\n\t};\r\n\r\n\thandleModalClose = () => {\r\n\t\tthis.setState({ openModal: false });\r\n\t};\r\n\t\r\n\thandleSignUp = () => {\r\n\t\tif(this.state.name !== \"\" &&\r\n\t\tthis.state.instanceName !== \"\" &&\r\n\t\tthis.state.drugCode !== \"\"&&\r\n\t\tthis.state.loyaltyPoints !== \"\"&&\r\n\t\tthis.state.quantity !== \"\"&&\r\n\t\tthis.state.sideEffects !== \"\"&&\r\n\t\tthis.state.recommendAmount !== \"\"){\r\n\r\n\t\tlet drugInstanceDTO = {\r\n\t\t\tname: this.state.name,\r\n\t\t\tproducerName : this.state.producerName,\r\n\t\t\tcode: this.state.drugCode,\r\n\t\t\tdrugInstanceName: this.state.instanceName,\r\n\t\t\tdrugFormat: this.state.drugFormat,\r\n\t\t\tquantity: this.state.quantity,\r\n\t\t\tsideEffects: this.state.sideEffects,\r\n\t\t\trecommendedAmount: this.state.recommendAmount,\r\n\t\t\tloyalityPoints: this.state.loyaltyPoints,\r\n\t\t\tonReciept: document.querySelector('.messageCheckbox').checked,\r\n\t\t\tdrugKind: this.state.drugKind,\r\n\t\t};\r\n\t\t\r\n\t\tconsole.log(drugInstanceDTO);\r\n\t\t\r\n\t\tAxios.put(\"http://localhost:8080/drug\", drugInstanceDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t.then((res) => {\r\n\t\t\t\r\n\t\t\t\tfor (const [index, value] of this.state.ingredients.entries()) {\r\n\t\t\t\t\tlet ingredientDTO = {\r\n\t\t\t\t\t\tname: this.state.ingredients[index],\r\n\t\t\t\t\t\tid: res.data,\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tAxios.post(\"http://localhost:8080/drug/ingredients\", ingredientDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\tconsole.log(\"Success ingredients\");\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tAxios.put(\"http://localhost:8080/drug/ingredient\", ingredientDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\tconsole.log(\"Success add ingredient\");\t\t\t\t\t\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet drugManufacturerDTO = {\r\n\t\t\t\t\tdrug_id: res.data,\r\n\t\t\t\t\tmanufacturer_id: this.state.manufacturer.Id,\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(drugManufacturerDTO)\r\n\t\t\t\tAxios.put(\"http://localhost:8080/drug/manufacturer\", drugManufacturerDTO,  { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\tconsole.log(\"Success\");\t\t\t\t\t\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\tthis.setState({ openModal: true });\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tfor (const [index, value] of this.state.drugReplacementsEntity.entries()) {\r\n\t\t\t\t\tconsole.log(\"ubicu se,\", this.state.drugReplacementsEntity[index].EntityDTO.drugInstanceName)\r\n\t\t\t\t\tlet ReplaceDrugIdDTO = {\r\n\t\t\t\t\t\tid: res.data,\r\n\t\t\t\t\t\treplacement_id: this.state.drugReplacementsEntity[index].Id,\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tAxios.put(\"http://localhost:8080/drug/replacement\", ReplaceDrugIdDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\tconsole.log(\"Success\");\t\r\n\t\t\t\t\t\t\tconsole.log(\"odradio replacement\");\t\t\t\t\t\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.setState({\r\n\t\t\t\topenModalData: true,\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t};\r\n\t\r\n\thandleSelectChange  = (event) => {\r\n\t\tthis.setState({ selectValue: event.target.value });\r\n\t};\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n<Header />\r\n\r\n<div className=\"container\" style={{ marginTop: \"2%\" }}>\r\n    <h5 className=\" text-center  mb-0 text-uppercase\" style={{ marginTop: \"2rem\" }}>\r\n        Register drug\r\n    </h5>\r\n\r\n    <div className=\"row section-design\">\r\n        <div className=\"col-lg-8 mx-auto\">\r\n            <br />\r\n            <form id=\"contactForm\" name=\"sentMessage\" novalidate=\"novalidate\">\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Name:</label>\r\n                        <input\r\n                            placeholder=\"Name\"\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            onChange={this.handleNameChange}\r\n                            value={this.state.name}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Name must be entered.\r\n                    </div>\r\n                </div>\r\n\t\t\t\t<div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Producer name:</label>\r\n                        <input\r\n                            placeholder=\"Producer name\"\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            onChange={this.handleProducerNameChange}\r\n                            value={this.state.producerName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Producer name must be entered.\r\n                    </div>\r\n                </div>\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Instance name:</label>\r\n                        <input\r\n                            placeholder=\"Instance name\"\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            onChange={this.handleInstanceNameChange}\r\n                            value={this.state.instanceName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Instance name must be entered.\r\n                    </div>\r\n                </div>\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Quantity:</label>\r\n                        <input\r\n                            placeholder=\"Quantity\"\r\n                            class=\"form-control\"\r\n                            type=\"number\"\r\n                            id=\"name\"\r\n                            onChange={this.handleQuantityChange}\r\n                            value={this.state.quantity}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Quantity must be entered.\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Drug code:</label>\r\n                        <input\r\n                            placeholder=\"Drug code\"\r\n                            class=\"form-control\"\r\n                            id=\"consulationPrice\"\r\n                            type=\"text\"\r\n                            onChange={this.handleDrugCodeChange}\r\n                            value={this.state.drugCode}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.consulationPriceError }}>\r\n                        Code must be entered.\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"control-group\">\t\r\n                \r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Drug kind:</label>\r\n                        <select\r\n                           onChange={this.handleDrugKindChange}\r\n                            value={this.state.drugKind}\r\n                         >{this.state.drugKinds.map((kind) => (\r\n                          <option value={kind.EntityDTO.type}>{kind.EntityDTO.type}</option>\r\n                        ))}\t\r\n                        </select>\r\n                        <label>On reciept </label>\r\n                        <input\r\n                        \r\n                            class=\"messageCheckbox\"\r\n                            type=\"checkbox\"\r\n                            id=\"name\"\r\n                            onChange={this.handleOnRecieptChange}\r\n                            value={this.state.onReciept}\r\n                        />\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Side effects:</label>\r\n                        <input\r\n                            placeholder=\"Side effects\"\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            onChange={this.handleSideEffectsChange}\r\n                            value={this.state.sideEffects}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Side effects must be entered.\r\n                    </div>\r\n                </div>\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Recommend amount:</label>\r\n                        <input\r\n                            placeholder=\"Recommend amount\"\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            onChange={this.handleRecommendAmountChange}\r\n                            value={this.state.recommendAmount}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Recommend amount must be entered.\r\n                    </div>\r\n                </div>\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Drug ingredient:</label>\r\n                        <input\r\n                            placeholder=\"Drug ingredient\"\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            onChange={this.handleDrugIngredientChange}\r\n                            value={this.state.drugIngredient}\r\n                        />\r\n                        <button\r\n                            onClick={this.addIngredient}\r\n                        >\r\n                            Add\r\n                        </button>\r\n                        <button\r\n                            onClick={this.resetIngredient}\r\n                        >\r\n                            Reset ingredients\r\n                        </button>\r\n                        <button\r\n                        type=\"button\"\r\n                            onClick={this.createIngredient}\r\n                        >\r\n                            Create\r\n                        </button>\r\n                        <p id=\"demo\"></p>\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Drug ingredient must be entered.\r\n                    </div>\r\n                </div>\r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Replacement drugs:</label>\r\n                        <select\r\n                            \r\n                            onChange={this.handleDrugChange}\r\n                         >{this.state.drugs.map((drug,index) => (\r\n                          <option onClick={this.onDrugReplacementEntityChange(drug)} value={index}>{drug.EntityDTO.drugInstanceName}</option>\r\n                        ))}\t\r\n                        </select>\r\n                        <button\r\n                            onClick={this.addReplacement}\r\n                        >\r\n                            Add replacement\r\n                        </button>\r\n                        <button\r\n                            onClick={this.resetReplacement}\r\n                        >\r\n                            Reset replacement\r\n                        </button>\r\n                        <p id=\"replacement\"></p>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"control-group\">\t\r\n                \r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Drug Format:</label>\r\n                        <select\r\n                           onChange={this.handleDrugFormatChange}\r\n                            value={this.state.drugFormat}\r\n                         >{this.state.drugFormats.map((format) => (\r\n                          <option value={format.EntityDTO.type}>{format.EntityDTO.type}</option>\r\n                        ))}\t\r\n                        </select>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"control-group\">\t\r\n                \r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Drug manufacturer:</label>\r\n                        <select\r\n                           onChange={this.handleManufacturerChange}\r\n                          >{this.state.manufacturers.map((manufacturer, index) => (\r\n                          <option value={index}>{manufacturer.EntityDTO.name}</option>\r\n                        ))}\t\r\n                        </select>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"control-group\">\r\n                    <div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n                        <label>Loyalty points:</label>\r\n                        <input\r\n                            placeholder=\"Loyalty points\"\r\n                            class=\"form-control\"\r\n                            type=\"number\"\r\n                            id=\"name\"\r\n                            onChange={this.handleLoyaltyPointsChange}\r\n                            value={this.state.loyaltyPoints}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n                        Loyalty points must be entered.\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        style={{\r\n                            background: \"#1977cc\",\r\n                            marginTop: \"15px\",\r\n                            marginLeft: \"40%\",\r\n                            width: \"20%\",\r\n                        }}\r\n                        onClick={this.handleSignUp}\r\n                        className=\"btn btn-primary btn-xl\"\r\n                        id=\"sendMessageButton\"\r\n                        type=\"button\"\r\n                    >\r\n                        Sign Up\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n            </React.Fragment>\r\n\r\n\r\n        );\r\n\r\n\r\n\t}\r\n}\r\n\r\nexport default withRouter(RegisterDrug);","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\registerStaff.js",["193","194","195","196","197","198","199","200","201","202"],"import Header from \"../../Components/Header\";\r\nimport React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\n\r\n\r\n\r\nclass registerStaff extends Component {\r\n\r\n    state = {\r\n\t\terrorHeader: \"\",\r\n\t\terrorMessage: \"\",\r\n\t\thiddenErrorAlert: true,\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t\tname: \"\",\r\n\t\tuserRegister: \"\",\r\n\t\tsurname: \"\",\r\n\t\taddress: \"\",\r\n\t\topenModalData: false,\r\n\t\tphoneNumber: \"\",\r\n\t\temailError: \"none\",\r\n\t\tpasswordError: \"none\",\r\n\t\tnameError: \"none\",\r\n\t\tsurnameError: \"none\",\r\n\t\taddressError: \"none\",\r\n\t\tphoneError: \"none\",\r\n\t\temailNotValid: \"none\",\r\n\t\topenModal: false,\r\n\t\tpharmacies:[],\r\n\t\tselectedPharmacy:null,\r\n\t\tpharmacy:\"\",\r\n\t\tcoords: [],\r\n\t\tselectValue:\"\",\r\n        redirect: false,\r\n        redirectUrl: '',\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.addressInput = React.createRef();\r\n\t}\r\n\r\n\t\r\n\thandleModalDataClose = () => {\r\n\t\tthis.setState({ \r\n\t\t\topenModalData: false,\r\n\t\t});\r\n\t};\r\n\r\n\thandleModalEmailClose = () => {\r\n\t\tthis.setState({ \r\n\t\t\topenModalEmail: false,\r\n\t\t});\r\n\t};\r\n\t\r\n\tcomponentDidMount() {\r\n\r\n\t\tAxios.get(\"http://localhost:8080/pharmacy/allPharmacies\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\t\tAxios.get(\"/api/users/sysadmin/auth\", { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\r\n            .then((res) => {\r\n\t\t\t\tconsole.log(res.statusm, \"TEST\")\r\n                if (res.status === 401) {\r\n                    this.setState({\r\n                        redirect: true,\r\n                        redirectUrl: \"/unauthorized\"\r\n                    });\r\n                } else {\r\n                    console.log(res.data);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n\t}\r\n\t\r\n\r\n\thandleEmailChange = (event) => {\r\n\t\tthis.setState({ email: event.target.value });\r\n\t};\r\n\thandlePharmacyChange = (event) => {\r\n\t\tthis.setState({ pharmacy: event.target.value });\r\n\t};\r\n\t\r\n\thandlePasswordChange = (event) => {\r\n\t\tthis.setState({ password: event.target.value });\r\n\t};\r\n\r\n\thandleNameChange = (event) => {\r\n\t\tthis.setState({ name: event.target.value });\r\n\t};\r\n\r\n\thandleSurnameChange = (event) => {\r\n\t\tthis.setState({ surname: event.target.value });\r\n\t};\r\n\r\n\thandleAddressChange = (event) => {\r\n\t\tthis.setState({ address: event.target.value });\r\n\t};\r\n\r\n\thandlePhoneNumberChange = (event) => {\r\n\t\tthis.setState({ phoneNumber: event.target.value });\r\n\t};\r\n    handleSelectedValueSysAdminChange = (event) => {\r\n       \r\n\t\tthis.setState({ selectValue: \"sysadmin\" });\r\n        console.log(this.state.selectValue);\r\n\t};\r\n    handleSelectedValueSupplierChange = (event) => {\r\n      \r\n\t\tthis.setState({ selectValue: \"supplier\" });\r\n        console.log(this.state.selectValue);\r\n\t};\r\n    handleSelectedValueDermathologistChange = (event) => {\r\n       \r\n\t\tthis.setState({ selectValue: \"dermathologist\" });\r\n        console.log(this.state.selectValue);\r\n\t};\r\n    handleSelectedValuePharmacyAdminChange = (event) => {\r\n      \r\n\t\tthis.setState({ selectValue: \"pharmacyadmin\" });\r\n        console.log(this.state.selectValue);\r\n\t};\r\n    \r\n\r\n\tvalidateForm = (userDTO) => {\r\n\t\talert('test')\r\n\t\tthis.setState({\r\n\t\t\temailError: \"none\",\r\n\t\t\temailNotValid: \"none\",\r\n\t\t\tnameError: \"none\",\r\n\t\t\tsurnameError: \"none\",\r\n\t\t\taddressError: \"none\",\r\n\t\t\tphoneError: \"none\",\r\n\t\t});\r\n\r\n\t\tif (userDTO.email === \"\") {\r\n\t\t\tthis.setState({ emailError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (!userDTO.email.includes(\"@\")) {\r\n\t\t\tthis.setState({ emailNotValid: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.name === \"\") {\r\n\t\t\tthis.setState({ nameError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.surname === \"\") {\r\n\t\t\tthis.setState({ surnameError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.address === \"\") {\r\n\t\t\tthis.setState({ addressError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t} else if (userDTO.phoneNumber === \"\") {\r\n\t\t\tthis.setState({ phoneError: \"initial\" });\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t};\r\n\r\n\thandleModalClose = () => {\r\n\t\tthis.setState({ openModal: false });\r\n\t};\r\n\t\r\n\tonPharmacyChange  = (pharmacy) => {\r\n\t\tthis.state.selectedPharmacy = pharmacy;\r\n\t\tconsole.log(pharmacy, \"PHARMACy\");\r\n\t\r\n\t};\r\n\t\r\n\thandleSignUp = () => {\r\n\r\n\t\tif(this.state.surname !== \"\" &&\r\n\t\tthis.state.name !== \"\" &&\r\n\t\tthis.state.phoneNumber !== \"\" &&\r\n\t\tthis.state.email !== \"\"){\r\n\r\n\t\t\r\n\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\tlet userDTO = {\r\n\t\t\t\t\temail: this.state.email,\r\n\t\t\t\t\tname: this.state.name,\r\n\t\t\t\t\tsurname: this.state.surname,\r\n\t\t\t\t\taddress: this.state.address,\r\n\t\t\t\t\tphoneNumber: this.state.phoneNumber,\r\n\t\t\t\t\tpassword: \"test\",\r\n\t\t\t\t};\r\n\t\t\t\tif (this.validateForm(userDTO)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.state.selectValue == \"dermathologist\"){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tAxios.post(\"http://localhost:8080/reg/signup-dermathologist\", userDTO,{ headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\tif (res.status === 409) {\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\terrorHeader: \"Resource conflict!\",\r\n\t\t\t\t\t\t\t\t\t\terrorMessage: \"Email already exist.\",\r\n\t\t\t\t\t\t\t\t\t\thiddenErrorAlert: false,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else if (res.status === 500) {\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"USO\")\r\n\t\t\t\t\t\t\t\t\tthis.setState({ openModalData: true });\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t\t\t\topenModal: true,\r\n\t\t\t\t\t\t\t\t\t\tuserRegister: \"You have successfully registered staff with password \" + res.data,\r\n                                        redirect: true\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.state.selectValue == \"pharmacyadmin\"){\r\n\t\t\t\t\t\tconsole.log(this.state.selectedPharmacy.Id);\r\n\t\t\t\t\t\tAxios.post(\"http://localhost:8080/reg/signup-pharmacyadmin/\" + this.state.selectedPharmacy.Id, userDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t openModal: true,\r\n\t\t\t\t\t\t\t\t\t userRegister: \"You have successfully registered staff with password \" + res.data,\r\n                                     redirect: true\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.state.selectValue == \"sysadmin\"){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tAxios.post(\"http://localhost:8080/reg/signup-sysadmin\", userDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t\t\topenModal: true,\r\n\t\t\t\t\t\t\t\t\tuserRegister: \"You have successfully registered staff with password \" + res.data,\r\n                                    redirect: true\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.state.selectValue == \"supplier\"){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tAxios.post(\"http://localhost:8080/reg/signup-supplier\", userDTO, { headers: { Authorization: GetAuthorisation()}})\r\n\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Success\");\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\topenModal: true,\r\n\t\t\t\t\t\t\t\t\tuserRegister: \"You have successfully registered staff with password \" + res.data,\r\n                                    redirect: true\r\n\t\t\t\t\t\t\t\t });\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t};\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tthis.setState({\r\n\t\t\t\topenModalData: true,\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t};\r\n\thandleCloseAlert = () => {\r\n\t\tthis.setState({ hiddenErrorAlert: true });\r\n\t};\r\n\thandleSelectChange  = (event) => {\r\n\t\tthis.setState({ selectValue: event.target.value });\r\n\t};\r\n\r\n\r\nrender() {\r\n        if (this.state.redirect) return <Redirect push to=\"/\" />;\r\n        return(\r\n            <React.Fragment>\r\n            <Header/>\r\n            \r\n\r\n            <div className=\"container\" style={{ marginTop: \"8%\" }}>\r\n\r\n                       \r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h5 className=\" text-center  mb-0 text-uppercase\" style={{ marginTop: \"2rem\" }}>\r\n\t\t\t\t\t\tRegister staff\r\n\t\t\t\t\t</h5>\r\n\r\n                    \r\n\r\n\t\t\t\t\t<div className=\"row section-design\">\r\n\t\t\t\t\t\t<div className=\"col-lg-8 mx-auto\">\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<form id=\"contactForm\" name=\"sentMessage\" novalidate=\"novalidate\">\r\n\r\n                                    <div class=\"dropdown \" hidden={this.state.selectValue !== \"\"}>\r\n                                <button class=\"btn btn-secondary dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Dropdown button\r\n                                </button>\r\n                                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                    <a class=\"dropdown-item\" onClick={this.handleSelectedValueSysAdminChange} >System admin</a>\r\n                                    <a class=\"dropdown-item\" onClick={this.handleSelectedValueSupplierChange} >Supplier</a>\r\n                                    <a class=\"dropdown-item\" onClick={this.handleSelectedValueDermathologistChange} >Dermathologist</a>\r\n                                    <a class=\"dropdown-item\" onClick={this.handleSelectedValuePharmacyAdminChange} >Pharmacy Admin</a>\r\n                                </div>\r\n                                </div>\r\n\r\n                                     <div className=\"text\" hidden={this.state.selectValue == \"\"}>\r\n\t\t\t\t\t\t\t\t\t\tSelected: {this.state.selectValue}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                    <br />\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\" hidden={this.state.selectValue !== \"pharmacyadmin\"} >\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Pharmacy:</label><br></br>\r\n\t\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t       onChange={this.handlePharmacyChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.pharmacy}\r\n\t\t\t\t\t\t\t\t\t     >{this.state.pharmacies.map((pharmacy) => (\r\n\t\t\t\t\t\t\t\t\t\t  <option onClick={this.onPharmacyChange(pharmacy)}  id={pharmacy.Id} key={pharmacy.Id} value={pharmacy.EntityDTO.name}>{pharmacy.EntityDTO.name},{pharmacy.EntityDTO.address.street}, {pharmacy.EntityDTO.address.city},{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{pharmacy.EntityDTO.address.country}</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\t\r\n\t\t\t\t\t\t\t\t\t\t</select>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Email address:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email address\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleEmailChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.email}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.emailError }}>\r\n\t\t\t\t\t\t\t\t\t\tEmail address must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.emailNotValid }}>\r\n\t\t\t\t\t\t\t\t\t\tEmail address is not valid.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Name:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleNameChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.nameError }}>\r\n\t\t\t\t\t\t\t\t\t\tName must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Surname:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Surname\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"surname\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleSurnameChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.surname}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.surnameError }}>\r\n\t\t\t\t\t\t\t\t\t\tSurname must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n                                <div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Address:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Address\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"address\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleAddressChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.address}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.addressError }}>\r\n\t\t\t\t\t\t\t\t\t\tAddress must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group controls mb-0 pb-2\" style={{ color: \"#6c757d\", opacity: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<label>Phone number:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Phone number\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"phone\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handlePhoneNumberChange}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.phoneNumber}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.state.phoneError }}>\r\n\t\t\t\t\t\t\t\t\t\tPhone number must be entered.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tbackground: \"#1977cc\",\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: \"15px\",\r\n\t\t\t\t\t\t\t\t\t\t\tmarginLeft: \"40%\",\r\n\t\t\t\t\t\t\t\t\t\t\twidth: \"20%\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleSignUp}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-xl\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default registerStaff;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Header.js",["203"],"import React from 'react';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Header extends React.Component{\r\n\r\n\r\n      handleLogout = () => {\r\n      localStorage.removeItem(\"keyToken\");\r\n      localStorage.removeItem(\"keyRole\");\r\n      localStorage.removeItem(\"expireTime\");\r\n    };\r\n\r\n    hasRole = (requestRole) => {\r\n      let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n      if (currentRoles === null) return false;\r\n\r\n\r\n      for (let currentRole of currentRoles) {\r\n        if (currentRole === requestRole) return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    IsLogedIn = () => {\r\n      let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n      if (currentRoles === null) return false;\r\n\r\n      \r\n      return true;\r\n    };\r\n\r\n    render(){\r\n      \r\n      \r\n        \r\n    \r\n    \r\n          return(\r\n                  \r\n              \r\n\r\n                <div id=\"header\">\r\n\r\n          \r\n\r\n\r\n                <ReactBootStrap.Navbar collapseOnSelect expand=\"xl\" bg=\"primary\" variant=\"dark\">\r\n                <Link to=\"/\">\r\n                <ReactBootStrap.Navbar.Brand  style={{fontSize : \"35px\"}}>Health clinic</ReactBootStrap.Navbar.Brand>\r\n                </Link>\r\n                <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                \r\n                <ReactBootStrap.Navbar.Collapse  id=\"responsive-navbar-nav\">\r\n              \r\n                <ReactBootStrap.Nav className=\"ml-auto\" >\r\n            \r\n            \r\n            \r\n                <Link to=\"/drugs\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\">Drugs</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n\r\n                <Link to=\"/pharmacies\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\">Pharmacies</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n            \r\n\r\n                \r\n                <ReactBootStrap.NavDropdown alignRight title=\"My reports\" id=\"collasible-nav-dropdown\" hidden={!this.hasRole(\"ROLE_PATIENT\")} >\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/futureDermatologistAppointmentsForPatient\">Dermatologist</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider />\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/futurePharmaciesConsultationsForPatient\">Pharmacies</ReactBootStrap.NavDropdown.Item>\r\n                    \r\n                </ReactBootStrap.NavDropdown>\r\n\r\n\r\n\r\n\r\n                <ReactBootStrap.NavDropdown alignRight title=\"Apointment\" id=\"collasible-nav-dropdown\" hidden={!this.hasRole(\"ROLE_PATIENT\")} >\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/pharmacistAppointment\">Pharmacist</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider />\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/dermatologistAppointment\">Dermatologist</ReactBootStrap.NavDropdown.Item>\r\n                    \r\n                </ReactBootStrap.NavDropdown>\r\n\r\n                <ReactBootStrap.NavDropdown alignRight title=\"Register\" hidden={!this.hasRole(\"ROLE_SYSADMIN\")} id=\"collasible-nav-dropdown\">\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/registerStaff\" >Stuff member</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/registerPharmacies\" >Pharmacy</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/registerDrug\" >Drug</ReactBootStrap.NavDropdown.Item>\r\n                    \r\n                    \r\n                </ReactBootStrap.NavDropdown>\r\n\r\n                <Link to=\"/loyalityProgram\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\" hidden={!this.hasRole(\"ROLE_SYSADMIN\")} >Loyality Program</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n\r\n                <Link to=\"/orders\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\" hidden={!this.hasRole(\"ROLE_SUPPLIER\")} >Orders</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n\r\n                  \r\n                <ReactBootStrap.NavDropdown alignRight title=\"User\" id=\"collasible-nav-dropdown\">\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/login\" hidden={this.IsLogedIn()}>Login</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider hidden={this.IsLogedIn()} />\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/registration\" hidden={this.IsLogedIn()}>Register</ReactBootStrap.NavDropdown.Item>\r\n\r\n                    \r\n                    <ReactBootStrap.NavDropdown.Item href=\"/userProfile\" hidden={!this.hasRole(\"ROLE_PATIENT\")}>My profile</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider hidden={!this.IsLogedIn()} />\r\n                    <ReactBootStrap.NavDropdown.Item onClick={this.handleLogout} href=\"/login\" hidden={!this.IsLogedIn(\"*\")}>Log out</ReactBootStrap.NavDropdown.Item>\r\n\r\n                </ReactBootStrap.NavDropdown>\r\n            \r\n            \r\n                </ReactBootStrap.Nav>\r\n            \r\n              </ReactBootStrap.Navbar.Collapse>\r\n            \r\n            </ReactBootStrap.Navbar>\r\n            \r\n            \r\n                    </div>\r\n\r\n\r\n\r\n              )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Header;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\TopBar.js",["204","205"],"import React from 'react';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass TopBar extends React.Component{\r\n\r\n    handleLogout = () => {\r\n        localStorage.removeItem(\"keyToken\");\r\n        localStorage.removeItem(\"keyRole\");\r\n        localStorage.removeItem(\"expireTime\");\r\n      };\r\n  \r\n      \r\n  \r\n      IsLogedIn = () => {\r\n        let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n  \r\n        if (currentRoles === null) return false;\r\n  \r\n        \r\n        return true;\r\n      };\r\n    \r\n\r\n    render(){\r\n        const myStyle = {\r\n\t\t\tmargin: 10,\r\n\t\t};\r\n        return(\r\n            \r\n\r\n          <div id=\"topbar\" className=\"ml-auto\" >\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t<div className=\" ml-auto container register-login\">\r\n\t\t\t\t\t\t<Link to=\"/registration\" hidden={this.IsLogedIn()}>\r\n\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t</Link>\r\n            <i ></i>{\" \"}\r\n\t\t\t\t\t\t<Link to=\"/login\" hidden={this.IsLogedIn()}>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Link>\r\n            <i className=\"icofont-envelope\"></i>{\" \"}\r\n\t\t\t\t\t\t<Link onClick={this.handleLogout} to=\"/login\" hidden={!this.IsLogedIn()}>\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default TopBar;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Alerts\\UnsuccessfulAlert.js",[],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Funciton\\GetAuthorisation.js",[],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Alerts\\SuccessfulAlert.js",[],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\AllergensModal.js",["206","207","208"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nimport UnsuccessfulAlert from \"../Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Alerts/SuccessfulAlert\";\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass AllergensModal extends Component {\r\n\tstate = {\r\n\t\tallAllergens: [],\r\n        newAllergen : \"\"\r\n\t};\r\n\r\n\r\n    componentDidMount() {\r\n\t\tthis.setState({ allAllergens: this.props.userAllergens });\r\n\t}\r\n\r\n\r\n    handleChangeNewAllergen= (event) => {\r\n\t\tthis.setState({ newAllergen: event.target.value });\r\n\t};\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tshow={this.props.show}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tdialogClassName=\"modal-80w-80h\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\tscrollable\r\n\t\t\t\tonHide={this.props.onCloseModal}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">{this.props.header}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<SuccessfulAlert\r\n\t\t\t\t\t\thidden={this.props.hiddenAllergenSuccessfulAlert}\r\n\t\t\t\t\t\theader={this.props.successfulAllergenHeader}\r\n\t\t\t\t\t\tmessage={this.props.successfulAllergenMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.props.handleCloseAllergenAlertSuccessful}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<UnsuccessfulAlert\r\n\t\t\t\t\t\thidden={this.props.hiddenAllergenErrorAlert}\r\n\t\t\t\t\t\theader={this.props.errorAllergenHeader}\r\n\t\t\t\t\t\tmessage={this.props.errorAllergenMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.props.handleCloseAllergenAlertError}\r\n\t\t\t\t\t/>\r\n\r\n\r\n                    <div  className=\"form-group\">\r\n                    <div className=\"form-row justify-content-center mr-3\">\r\n                          \r\n                            <div  className=\"mr-2\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Add allergen\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChangeNewAllergen}\r\n\t\t\t\t\t\t\t\tvalue={this.state.newAllergen }\r\n\t\t\t\t\t\t\t/>\r\n                            </div>\r\n                            \r\n                            <div  className=\"mr-2\">\r\n                            <Button onClick={() => this.props.AddAllergen(this.state.newAllergen)} style={{ width: \"100%\" }} variant=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tAdd allergen\r\n\t\t\t\t\t\t\t</Button>\r\n                            </div>\r\n                            </div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<h4>{this.props.subheader}</h4>\r\n\t\t\t\t\t<table className=\"table\" style={{ width: \"100%\" }}>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<td className=\"col-md-3\">Allergen name</td>\r\n\t\t\t\t\t\t\t<td className=\"col-md-1\"></td>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.props.userAllergens.map((allergen) => (\r\n\t\t\t\t\t\t\t\t<tr id={allergen.Id} key={allergen.Id}>\r\n\t\t\t\t\t\t\t\t\t<td>{allergen.EntityDTO.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={() => this.props.RemoveAllergen(allergen.EntityDTO.name)} variant=\"danger\" >\r\n\t\t\t\t\t\t\t\t\t\t\tRemove\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AllergensModal;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\ChangePasswordModal.js",["209"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport HeadingAlert from \"../Alerts/UnsuccessfulAlert\";\r\n\r\nclass ChangePasswordModal extends Component {\r\n\tstate = {\r\n\t\toldPassword: \"\",\r\n\t\tnewPassword: \"\",\r\n\t\tnewPasswordRepeated: \"\",\r\n\t};\r\n\r\n\thandleOldPassword = (event) => {\r\n\t\tthis.setState({ oldPassword: event.target.value });\r\n\t};\r\n\r\n\thandleNewPasswordFirst = (event) => {\r\n\t\tthis.setState({ newPassword: event.target.value });\r\n\t};\r\n\r\n\thandleNewPasswordRepeat= (event) => {\r\n\t\tthis.setState({ newPasswordRepeated: event.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tshow={this.props.show}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tdialogClassName=\"modal-80w-80h\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\tonHide={this.props.onCloseModal}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">{this.props.header}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<HeadingAlert\r\n\t\t\t\t\t\thidden={this.props.hiddenPasswordErrorAlert}\r\n\t\t\t\t\t\theader={this.props.errorPasswordHeader}\r\n\t\t\t\t\t\tmessage={this.props.errorPasswordMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.props.handleCloseAlertPassword}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t<div className=\"form-group \" >\r\n\t\t\t\t\t\t\t<label>Old password:</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Old password\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleOldPassword}\r\n\t\t\t\t\t\t\t\tvalue={this.state.oldPassword}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.props.emptyOldPasswordError }}>\r\n\t\t\t\t\t\t\tOld password must be entered.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t<div className=\"form-group\" >\r\n\t\t\t\t\t\t\t<label>New password:</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"New password\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleNewPasswordFirst}\r\n\t\t\t\t\t\t\t\tvalue={this.state.newPassword}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.props.emptyNewPasswordError }}>\r\n\t\t\t\t\t\t\tNew password must be entered!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t<div className=\"form-group \" >\r\n\t\t\t\t\t\t\t<label>Repeat new password:</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Repeat new password\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleNewPasswordRepeat}\r\n\t\t\t\t\t\t\t\tvalue={this.state.newPasswordRepeated}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.props.emptyNewPasswordRepeatedError }}>\r\n\t\t\t\t\t\t\tRepeat the new password!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.props.newPasswordAndRepeatedNotSameError }}>\r\n\t\t\t\t\t\t\tPasswords must be same!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group text-center\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tstyle={{ background: \"#1977cc\", marginTop: \"15px\" }}\r\n\t\t\t\t\t\t\tonClick={() => this.props.changePassword(this.state.oldPassword, this.state.newPassword, this.state.newPasswordRepeated)}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-xl\"\r\n\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tChange password\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n            \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ChangePasswordModal;\r\n","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\PharmaciesAppointmentStartPage.js",["210","211","212","213","214","215"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport FoundPharmaciesForDateRange from \"../Components/Pharmacies/FoundPharmaciesForDateRange\"\r\nimport FoundPharmacistForPharmacyForDateRange from \"../Components/Pharmacies/FoundPharmacistForPharmacyForDateRange\"\r\nimport ReservedConsultationModal from \"../Components/Modal/ReservedConsultationModal\"\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass PharmaciesAppointmentStartPage extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        consultationDate: new Date(),\r\n\t\tselectedDate: new Date(),\r\n\t\thours: new Date().getHours(),\r\n\t\tminutes: new Date().getMinutes(),\r\n        pharmacies: [],\r\n\t\thiddenPharmacies: true,\r\n\t\tpharmacists : [],\r\n\t\thiddenPharmacists: true,\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n\t\tisPharmaciesEmpty : false,\r\n\t\tshowReservedConsultationModal: false,\r\n\t\terrorMessageForReservation : \"\",\r\n\t\thideSuccessfulModalText : true,\r\n\t\thideSuccessfulModalButton: true,\r\n\t\tmodalTitle: \"\",\r\n\t\tselectedPharmacyId : \"\"\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n  \r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n    handleDateChange = (date) => {\r\n\t\tthis.setState({ selectedDate: date });\r\n\t};\r\n\r\n\thandleMinutesChange = (event) => {\r\n\t\tif (event.target.value < 0) this.setState({ minutes: 0 });\r\n        else if (event.target.value > 59) this.setState({ minutes: 59 });\r\n\t\telse this.setState({ minutes: event.target.value });\r\n\t};\r\n\r\n\thandleHoursChange = (event) => {\r\n        if (event.target.value < 0) this.setState({ hours: 0 });\r\n\t\telse if (event.target.value > 23) this.setState({ hours: 23 });\r\n\t\telse this.setState({ hours: event.target.value });\r\n\t};\r\n    \r\n    \r\n    CheckAvailabilityAppointment = () => {\r\n        \r\n\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t});\r\n\r\n\t\tlet acceptableDate = new Date().getTime() + 3600;\r\n\t\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime();\r\n\r\n\t\t\r\n\t    \r\n             console.log(\"sok\");\r\n\t\t\tAxios.get( API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/\" + consultationDateSelected  , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() }},\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 200) {\r\n\t\t\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\t\t\tif(this.state.pharmacies.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: false, isPharmaciesEmpty: false });\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmaciesEmpty: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t if(res.status === 401){\r\n\t\t\t\t\t\t this.props.history.push(\"/login\");\r\n                        this.setState({ hiddenUnsuccessfulAlert: false, \r\n                            UnsuccessfulHeader: \"Internal server error\", \r\n                            UnsuccessfulMessage: res.data });\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    this.setState({ hiddenUnsuccessfulAlert: false, \r\n                        UnsuccessfulHeader: \"Error\", \r\n                        UnsuccessfulMessage: \"Some error\" });\r\n                    \r\n\t\t\t\t});\r\n\t\t\r\n\t};\r\n\r\n\r\n   \r\n\r\n\tshowPharmacistForPharmacy = (pharmacy) => {\r\n\t\tthis.setState({\r\n\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\tselectedPharmacyId: pharmacy.Id,\r\n\t\t});\r\n\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime(); \r\n\r\n\t\t\tconsole.log(\"idemooo\")\r\n\t\tAxios.get(\r\n\t\t\tAPI_URL +\r\n\t\t\t\t\"/users/freePharmacistsForSelectedPharmacyInDataRange/\" + pharmacy.Id + \"/\"+ consultationDateSelected,\r\n\t\t\t{ validateStatus: () => true, headers: { Authorization: GetAuthorisation() } }\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\tthis.props.history.push(\"/login\");\r\n\r\n\t\t\t\t} else if (res.status === 200) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\t\tthis.setState({ pharmacists: res.data });\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif(this.state.pharmacists.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: true, \r\n\t\t\t\t\t\t\t\tisPharmaciesEmpty: false,\r\n\t\t\t\t\t\t\t\t hiddenPharmacists: false,\r\n\t\t\t\t\t\t\t\t isPharmacistsEmpty: false });\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmacistsEmpty: true,hiddenPharmacists: true, hiddenPharmacies: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\tUnsuccessfulMessage: \"Some error\" });\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n\r\n\t\r\n\thandleClosePharmacistPage = () => {\r\n\t\tthis.setState({ hiddenPharmacists: true, hiddenPharmacies: false});\r\n\t};\r\n\r\n\r\n\thandleClosePharmaciesPage = () => {\r\n\t\tthis.setState({ hiddenPharmacists: true, hiddenPharmacies: true});\r\n\t};\r\n\r\n\r\n\r\n\treserveAppointmentForPharmacist = (pharmacist) => {\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t\terrorMessageForReservation: \"\"\r\n\t\t});\r\n\r\n\t\tconsole.log(this.state.selectedDate);\r\n\r\n\r\n\t\tlet reservationDTO = {\r\n\t\t\tpharmacistId: pharmacist.Id,\r\n\t\t\tstartDate: this.state.consultationDate,\r\n\t\t};\r\n\r\n\t\tAxios.post(\r\n\t\t\tAPI_URL + \"/appointment/reserveConsulationBySelectedPharmacist\", reservationDTO ,\r\n\t\t\t{ validateStatus: () => true, headers: { Authorization: GetAuthorisation() } }\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\tthis.props.history.push(\"/login\");\r\n\t\t\t\r\n\t\t\t\t} else if (res.status === 500) {\r\n\t\t\t\t\tthis.setState({ errorMessageForReservation : res.data,\r\n\t\t\t\t\t\t showReservedConsultationModal: true,\r\n\t\t\t\t\t\t  modalTitle : \"Error\" });\r\n\t\t\t\t } else if (res.status === 400) {\r\n\t\t\t\t\tthis.setState({ errorMessageForReservation : res.data, \r\n\t\t\t\t\t\tshowReservedConsultationModal: true,\r\n\t\t\t\t\t\tmodalTitle : \"Bad request\"});\r\n\t\t\t\t } else if (res.status === 201 ){\r\n\t\t\t\t\t\tconsole.log(\"uspesno zakao termin\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState({ showReservedConsultationModal: true,\r\n\t\t\t\t\t\t\t\t\t errorMessageForReservation : \"\",\r\n\t\t\t\t\t\t\t\t\t hideSuccessfulModalText : false,\r\n\t\t\t\t\t\t\t\t\t hideSuccessfulModalButton: false,\r\n\t\t\t\t\t\t\t\t\t modalTitle : \"Successful reservation\"\r\n\t\t\t\t\t\t\t  });\r\n\t\t\t\t  }\t\r\n\t\t\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ errorMessageForReservation : \"Some error happened\", modalTitle : \"Error\" });\r\n\t\t\t});\r\n\r\n\r\n\r\n\r\n\r\n\t};\r\n\r\n\tcloseReservedConsultationModal = () => {\r\n\t\tthis.setState({ showReservedConsultationModal: false,\r\n\t\t\t\t\t\t errorMessageForReservation : \"\",\r\n\t\t\t\t\t\t hideSuccessfulModalText : true,\r\n\t\t\t\t\t\t hideSuccessfulModalButton: true,\r\n\t\t\t\t\t\t modalTitle : \"\"\r\n\t\t\t\t  });\r\n\t\tthis.props.history.push(\"/\");\r\n\t};\r\n\r\n\tcloseModal= () => {\r\n\t\tthis.setState({ showReservedConsultationModal: false,\r\n\t\t\t\t\t errorMessageForReservation : \"\",\r\n\t\t\t\t\t hideSuccessfulModalText : true,\r\n\t\t\t\t\t hideSuccessfulModalButton: true,\r\n\t\t\t\t\t modalTitle : \"\"\r\n\t\t\t });\r\n\t\t\r\n\t};\r\n\t\r\n\r\n\r\n\thandleSortByPriceAscending = () => {\r\n        \r\n\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t});\r\n\r\n\t\t\r\n\t\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime();\r\n\r\n\t\t\r\n\t    \r\n             console.log(\"sok\");\r\n\t\t\tAxios.get( API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/SortByPriceAscending/\" + consultationDateSelected  , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() }},\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 200) {\r\n\t\t\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\t\t\tif(this.state.pharmacies.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: false, isPharmaciesEmpty: false });\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmaciesEmpty: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t if(res.status === 401){\r\n\t\t\t\t\t\t this.props.history.push(\"/login\");\r\n                        \r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    this.setState({ hiddenUnsuccessfulAlert: false, \r\n                        UnsuccessfulHeader: \"Error\", \r\n                        UnsuccessfulMessage: \"Some error\" });\r\n                    \r\n\t\t\t\t});\r\n\t\t\r\n\t};\r\n\r\n\r\n\r\n\thandleSortByPriceDescending = () => {\r\n        \r\n\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t});\r\n\r\n\t\t\r\n\t\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime();\r\n\r\n\t\t\r\n\t    \r\n             console.log(\"sok\");\r\n\t\t\tAxios.get( API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/SortByPriceDescending/\" + consultationDateSelected  , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() }},\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 200) {\r\n\t\t\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\t\t\tif(this.state.pharmacies.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: false, isPharmaciesEmpty: false });\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmaciesEmpty: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t if(res.status === 401){\r\n\t\t\t\t\t\t this.props.history.push(\"/login\");\r\n                        \r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    this.setState({ hiddenUnsuccessfulAlert: false, \r\n                        UnsuccessfulHeader: \"Error\", \r\n                        UnsuccessfulMessage: \"Some error\" });\r\n                    \r\n\t\t\t\t});\r\n\t\t\r\n\t};\r\n\r\n\r\n\r\n\thandleSortByPharmacyGradeAscending = () => {\r\n        \r\n\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t});\r\n\r\n\t\t\r\n\t\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime();\r\n\r\n\t\t\r\n\t    \r\n             console.log(\"sok\");\r\n\t\t\tAxios.get( API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/SortByPharmacyGradeAscending/\" + consultationDateSelected  , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() }},\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 200) {\r\n\t\t\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\t\t\tif(this.state.pharmacies.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: false, isPharmaciesEmpty: false });\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmaciesEmpty: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t if(res.status === 401){\r\n\t\t\t\t\t\t this.props.history.push(\"/login\");\r\n                        \r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    this.setState({ hiddenUnsuccessfulAlert: false, \r\n                        UnsuccessfulHeader: \"Error\", \r\n                        UnsuccessfulMessage: \"Some error\" });\r\n                    \r\n\t\t\t\t});\r\n\t\t\r\n\t};\r\n\r\n\r\n\thandleSortByPharmacyGradeDescending = () => {\r\n        \r\n\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t});\r\n\r\n\t\t\r\n\t\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime();\r\n\r\n\t\t\r\n\t    \r\n             console.log(\"sok\");\r\n\t\t\tAxios.get( API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/SortByPharmacyGradeDescending/\" + consultationDateSelected  , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() }},\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 200) {\r\n\t\t\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\t\t\tif(this.state.pharmacies.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: false, isPharmaciesEmpty: false });\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmaciesEmpty: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t if(res.status === 401){\r\n\t\t\t\t\t\t this.props.history.push(\"/login\");\r\n                        \r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    this.setState({ hiddenUnsuccessfulAlert: false, \r\n                        UnsuccessfulHeader: \"Error\", \r\n                        UnsuccessfulMessage: \"Some error\" });\r\n                    \r\n\t\t\t\t});\r\n\t\t\r\n\t};\r\n\r\n\r\n\r\n\r\n\thandleSortByPharmacistGradeAscending = () => {\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\t\t});\r\n\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime(); \r\n\r\n\t\t\tconsole.log(\"idemooo\")\r\n\t\tAxios.get(\r\n\t\t\tAPI_URL +\r\n\t\t\t\t\"/users/freePharmacistsForSelectedPharmacyInDataRange/sortByGradeAscending/\" + this.state.selectedPharmacyId + \"/\"+ consultationDateSelected,\r\n\t\t\t{ validateStatus: () => true, headers: { Authorization: GetAuthorisation() } }\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\tthis.props.history.push(\"/login\");\r\n\r\n\t\t\t\t} else if (res.status === 200) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\t\tthis.setState({ pharmacists: res.data });\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif(this.state.pharmacists.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: true, \r\n\t\t\t\t\t\t\t\tisPharmaciesEmpty: false,\r\n\t\t\t\t\t\t\t\t hiddenPharmacists: false,\r\n\t\t\t\t\t\t\t\t isPharmacistsEmpty: false });\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmacistsEmpty: true,hiddenPharmacists: true, hiddenPharmacies: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\tUnsuccessfulMessage: \"Some error\" });\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n\thandleSortByPharmacistGradeDescending = () => {\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\t\t});\r\n\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime(); \r\n\r\n\t\t\tconsole.log(\"idemooo\")\r\n\t\tAxios.get(\r\n\t\t\tAPI_URL +\r\n\t\t\t\t\"/users/freePharmacistsForSelectedPharmacyInDataRange/sortByGradeDescending/\" + this.state.selectedPharmacyId + \"/\"+ consultationDateSelected,\r\n\t\t\t{ validateStatus: () => true, headers: { Authorization: GetAuthorisation() } }\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\tthis.props.history.push(\"/login\");\r\n\r\n\t\t\t\t} else if (res.status === 200) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\t\tthis.setState({ pharmacists: res.data });\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif(this.state.pharmacists.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: true, \r\n\t\t\t\t\t\t\t\tisPharmaciesEmpty: false,\r\n\t\t\t\t\t\t\t\t hiddenPharmacists: false,\r\n\t\t\t\t\t\t\t\t isPharmacistsEmpty: false });\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmacistsEmpty: true,hiddenPharmacists: true, hiddenPharmacies: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\tUnsuccessfulMessage: \"Some error\" });\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n         <Header/>\r\n      \r\n         <div className=\"container\" hidden={!this.state.hiddenPharmacies || !this.state.hiddenPharmacists} >\r\n\r\n\r\n         <UnsuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t/>\r\n       \r\n\r\n\r\n         <h1  className=\"text-center  mt-3  \" >Please select the desired date for consultations with a pharmacist!</h1>\r\n         \r\n\t\t <h5 className=\" text-center  mt-3  text-danger\" hidden={!this.state.isPharmaciesEmpty}>\r\n\t\t\t\t\t\tWe couldn't find pharmacies with free pharmacists at desired time. Please change date and time.\r\n\t\t</h5>\r\n\r\n         <div className=\"control-group\" style={{ marginTop: \"5em\" }}>\r\n\t\t\t\t\t\t<div className=\"form-row justify-content-center\">\r\n                            <div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n                                    <b>Select date:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tminDate={new Date()}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => this.handleDateChange(date)}\r\n\t\t\t\t\t\t\t\t\tselected={this.state.selectedDate}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n\t\t\t\t\t\t\t\t\t<b>Hours:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input\r\n                                    type=\"number\"\r\n\t\t\t\t\t\t\t\t\tmin=\"00\"\r\n\t\t\t\t\t\t\t\t\tmax=\"23\"\r\n                                    className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleHoursChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.hours}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"12em\" }}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n                                    <b>Minutes:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tmin=\"00\"\r\n                                    max=\"59\"\r\n                                    type=\"number\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleMinutesChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.minutes}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"12em\" }}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col text-center\">\r\n\t\t\t\t\t\t            <button type=\"button\" class=\"btn btn-outline-primary btn-lg \"\r\n                                        onClick={() => this.CheckAvailabilityAppointment()}\r\n                                        style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n                                        >\r\n                                        <b>Check appointment </b>\r\n\r\n                                     </button>\r\n\r\n                                </div>\r\n                             </div>\r\n                        </div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\r\n          \r\n        </div>\r\n\r\n\r\n\t\t<FoundPharmaciesForDateRange\r\n\r\n\t\t\t\thiddenPharmacies= {this.state.hiddenPharmacies}\r\n\t\t\t\tpharmacies={this.state.pharmacies}\r\n\t\t\t\tshowPharmacistForPharmacy={this.showPharmacistForPharmacy}\r\n\t\t\t\tbackToSelectedDateRange= {this.handleClosePharmaciesPage}\r\n\r\n\t\t\t\thandleSortByPriceAscending= {this.handleSortByPriceAscending}\r\n\t\t\t\thandleSortByPriceDescending= {this.handleSortByPriceDescending}\r\n\t\t\t\thandleSortByPharmacyGradeAscending= {this.handleSortByPharmacyGradeAscending}\r\n\t\t\t\thandleSortByPharmacyGradeDescending= {this.handleSortByPharmacyGradeDescending}\r\n\r\n\t\t/>\r\n\r\n\t   <FoundPharmacistForPharmacyForDateRange\r\n\r\n\t\thiddenPharmacist= {this.state.hiddenPharmacists}\r\n\t\tpharmacists= {this.state.pharmacists}\r\n\t\treserveAppointmentForPharmacist={this.reserveAppointmentForPharmacist}\t\r\n\t\tbackToPharmacies= {this.handleClosePharmacistPage}\r\n\t\thandleSortByPharmacistGradeAscending= {this.handleSortByPharmacistGradeAscending}\r\n\t\thandleSortByPharmacistGradeDescending= {this.handleSortByPharmacistGradeDescending}\t\r\n\r\n\t   />\r\n\r\n\r\n\t\t<ReservedConsultationModal\t\r\n\t\t\t\tshow= {this.state.showReservedConsultationModal}\r\n\t\t\t\tcloseModal= {this.closeReservedConsultationModal}\r\n\t\t\t\tonCloseModal={this.closeModal}\r\n\t\t\t\terrorMessageForReservation= {this.state.errorMessageForReservation}\r\n\t\t\t\thideSuccessfulModalText = {this.state.hideSuccessfulModalText}\r\n\t\t\t\thideSuccessfulModalButton= {this.state.hideSuccessfulModalButton}\r\n\t\t\t\tmodalTitle= {this.state.modalTitle}\r\n\r\n\t\t/>\t\r\n\r\n\t\t\r\n\r\n\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PharmaciesAppointmentStartPage;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies\\FoundPharmaciesForDateRange.js",["216","217","218","219"],"import React, { Component } from \"react\";\r\nimport PharmacyLogoPicture from \"../../Images/pharmacyLogo.jpg\" ;\r\nimport Axios from \"axios\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\n\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass FoundPharmaciesForDateRange extends Component {\r\n\t\r\n    \r\n    \r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div hidden={this.props.hiddenPharmacies}>\r\n\r\n\r\n                <button  type=\"button\" class=\"btn btn-link btn-lg\"\r\n                        onClick={this.props.backToSelectedDateRange} \r\n                         style={{ width: \"100px\" , marginTop: \"40px\", marginLeft: \"5em\"}}>        \r\n                          Back\r\n                </button>\r\n\r\n\r\n               \r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"container\">\r\n                    \r\n\r\n                <div className=\"dropdown\" style={{  marginTop: \"3em\" }}>\r\n                        <button className=\"btn btn-primary btn-lg dropdown-toggle\"\r\n                            type=\"button\" id=\"dropdownMenu2\"\r\n                            data-toggle=\"dropdown\" \r\n                            aria-haspopup=\"true\" \r\n                            aria-expanded=\"false\">\r\n                            Sort\r\n                        </button>\r\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPriceAscending} >Sort by price ascending</button>\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPriceDescending} >Sort by price descending</button>\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPharmacyGradeAscending} >Sort by pharmacy grade ascending</button>\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPharmacyGradeDescending} >Sort by pharmacy grade descending</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                    \r\n                    <table className=\"table table-hover\" style={{ width: \"90%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n                                  <tbody>\r\n                                      {this.props.pharmacies.map((pharmacy) => (\r\n                                          <tr\r\n                                              id={pharmacy.Id}\r\n                                              key={pharmacy.Id}\r\n                                              style={{ cursor: \"pointer\" }}\r\n                                          >\r\n          \r\n                                            <td width=\"100px\">  \r\n                                            <img  src={PharmacyLogoPicture} style={{ width: \"85px\", marginTop: \"15px\" }}></img>                                 \r\n                                                            \r\n                                            </td>\r\n                                              \r\n                                              <td>\r\n                                                            \r\n                                                    <div>\r\n                                                        <b>Name: </b> {pharmacy.EntityDTO.name}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <b>Address: </b> {pharmacy.EntityDTO.address.street}, {pharmacy.EntityDTO.address.city},{\" \"}\r\n                                                        {pharmacy.EntityDTO.address.country}\r\n                                                    </div>\r\n\r\n                                                    <div>\r\n                                                        <b>Consultation price:</b>{\" \"}\r\n                                                        \r\n                                                        {pharmacy.EntityDTO.price}                \r\n                                                        <b> din</b>\r\n                                                    </div>\r\n\r\n                                                    <div>\r\n                                                        <b>Grade: </b> {pharmacy.EntityDTO.grade}\r\n                                                        <i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                                                    </div>\r\n                                            \r\n                                                  \r\n                                              </td>\r\n\r\n                                            <td>\r\n                                                <button\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-outline-primary\"\r\n                                                        style={{  marginTop: \"25px\" }}\r\n                                                        onClick={() => this.props.showPharmacistForPharmacy(pharmacy)}\r\n                                                >\r\n                                                        Show pharmacists\r\n                                                </button>\r\n                                            </td>\r\n\r\n\r\n\r\n                                          </tr>\r\n                                      ))}\r\n                                  </tbody>\r\n                              </table>\r\n                    </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FoundPharmaciesForDateRange;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies\\FoundPharmacistForPharmacyForDateRange.js",["220","221","222","223"],"import React, { Component } from \"react\";\r\nimport PharmacistPicture from \"../../Images/pharmacist.png\" ;\r\nimport Axios from \"axios\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\n\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass FoundPharmacistForPharmacyForDateRange extends Component {\r\n\t\r\n    \r\n    \r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div hidden={this.props.hiddenPharmacist} >\r\n\r\n                \r\n               \r\n                <button  type=\"button\" class=\"btn btn-link btn-lg\"\r\n                        onClick={this.props.backToPharmacies} \r\n                         style={{ width: \"100px\" , marginTop: \"40px\", marginLeft: \"5em\"}}>        \r\n                          Back\r\n                </button>\r\n\r\n                \r\n\r\n\r\n\t\t\t\t<div className=\"container\">\r\n                    \r\n\r\n\r\n                    \r\n                <div className=\"dropdown\" style={{  marginTop: \"3em\" }}>\r\n                        <button className=\"btn btn-primary btn-lg dropdown-toggle\"\r\n                            type=\"button\" id=\"dropdownMenu2\"\r\n                            data-toggle=\"dropdown\" \r\n                            aria-haspopup=\"true\" \r\n                            aria-expanded=\"false\">\r\n                            Sort\r\n                        </button>\r\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPharmacistGradeAscending} >Sort by pharmacist grade ascending</button>\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={this.props.handleSortByPharmacistGradeDescending} >Sort by pharmacist grade descending</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                    <table className=\"table table-hover\" style={{ width: \"90%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n                                  <tbody>\r\n                                      {this.props.pharmacists.map((pharmacist) => (\r\n                                          <tr\r\n                                              id={pharmacist.Id}\r\n                                              key={pharmacist.Id}\r\n                                              style={{ cursor: \"pointer\" }}\r\n                                          >\r\n          \r\n                                            <td width=\"100px\">  \r\n                                            <img  src={PharmacistPicture} style={{ width: \"85px\" }}></img>                                 \r\n                                                            \r\n                                            </td>\r\n                                              \r\n                                              <td>\r\n                                                            \r\n                                                    <div>\r\n                                                        <b>Name: </b> {pharmacist.EntityDTO.name}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <b>Surname: </b>{pharmacist.EntityDTO.surname}\r\n                                                    </div>\r\n\r\n                                                    \r\n\r\n                                                    <div>\r\n                                                        <b>Grade: </b> {pharmacist.EntityDTO.grade}\r\n                                                        <i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                                                    </div>\r\n                                            \r\n                                                  \r\n                                              </td>\r\n\r\n                                            <td>\r\n                                                <button\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-outline-primary\"\r\n                                                        style={{  marginTop: \"25px\" }}\r\n                                                        onClick={() => this.props.reserveAppointmentForPharmacist(pharmacist)}\r\n                                                >\r\n                                                        Reserve consultation\r\n                                                </button>\r\n                                            </td>\r\n\r\n\r\n\r\n                                          </tr>\r\n                                      ))}\r\n                                  </tbody>\r\n                              </table>\r\n                    </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FoundPharmacistForPharmacyForDateRange;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\ReservedConsultationModal.js",["224","225"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport UnsuccessfulAlert from \"../../Components/Alerts/UnsuccessfulAlert\";\r\n\r\nclass ReservedConsultationModal extends Component {\r\n\t\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tshow={this.props.show}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tdialogClassName=\"modal-80w-80h\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\tonHide={this.props.onCloseModal}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\" >{this.props.modalTitle}</Modal.Title>\r\n\t\t\t\t\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\r\n                <b1  className=\"text-center  mt-3  \" hidden={this.props.hideSuccessfulModalText} >You successful reserved pharmacist consultation! All information about it will be sent on your email!</b1>\r\n\r\n\t\t\t\t<div className=\"text-danger\" >\r\n\t\t\t\t\t\t\t\t\t\t{this.props.errorMessageForReservation }\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n                <div className=\"form-group text-center\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\thidden={this.props.hideSuccessfulModalButton}\r\n\t\t\t\t\t\t\tstyle={{ background: \"#1977cc\", marginTop: \"15px\" }}\r\n\t\t\t\t\t\t\tonClick={() => this.props.closeModal()}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-xl\"\r\n\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tOk\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n            \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ReservedConsultationModal;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\LoyalityProgram\\LoyalityProgram.js",[],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\SupplierPages\\OrdersPage.js",["226"],"\r\n\r\nimport { withRouter } from \"react-router\";\r\nimport Header from \"../../Components/Header\";\r\nimport Axios from \"axios\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport orderImage from \"../../Images/orderImage.png\";\r\nimport OfferModal from \"../../Components/SupplierPages/OfferModal\";\r\n\r\n\r\n\r\nclass OrdersPage extends Component {\r\n\tstate = {\r\n\t\tprice: \"\",\r\n\t\tselectedDate: new Date(),\r\n\t\thours: new Date().getHours(),\r\n        minutes: new Date().getMinutes(),\r\n\t\treplacingDrugs:[],\r\n\t\tpharmacyName:\"\",\r\n\t\tshowOfferModal: false,\r\n\t\torderId: \"\",\r\n\t\tshowOrderModal: false,\r\n\t\topenModalSuccess: false,\r\n\t\topenModal: false,\r\n\t\topenModalDrugs: false,\r\n\t\torders:[],\r\n\t\taddress:\"\",\r\n        redirect: false,\r\n        redirectUrl: '',\r\n\t};\r\n\r\n    componentDidMount() {\r\n        Axios.get(\"http://localhost:8080/order/getAllOrders\", { headers: { Authorization: GetAuthorisation() } })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    this.setState({\r\n                        orders: res.data\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"GRESKA\");\r\n                    console.log(err);\r\n                });\r\n        \r\n}\r\n\r\nhandlePriceChange = (event) => {\r\n\tthis.setState({ price: event.target.value });\r\n};\r\n\r\nhandleDateChange = (date) => {\r\n\tthis.setState({ selectedDate: date });\r\n};\r\n\r\nhandleMinutesChange = (event) => {\r\n\tif (event.target.value > 59) this.setState({ minutes: 59 });\r\n\telse if (event.target.value < 0) this.setState({ minutes: 0 });\r\n\telse this.setState({ minutes: event.target.value });\r\n};\r\n\r\nhandleHoursChange = (event) => {\r\n\tif (event.target.value > 23) this.setState({ hours: 23 });\r\n\telse if (event.target.value < 0) this.setState({ hours: 0 });\r\n\telse this.setState({ hours: event.target.value });\r\n};\r\n\r\nhandleOfferClick = (order) => {\r\n\tthis.setState({ \r\n\t\tprice: \"\",\r\n\t\tshowOfferModal: true,\r\n\t\torderId: order.Id,\r\n\t});\r\n\t\r\n};\r\n\r\nhandleModalClose = () => {\r\n\tthis.setState({ \r\n\t\topenModal: false,\r\n\t});\r\n};\r\n\r\nhandleModalDrugsClose = () => {\r\n\tthis.setState({ \r\n\t\topenModalDrugs: false,\r\n\t});\r\n};\r\n\r\nhandleModalSuccessClose = () => {\r\n\tthis.setState({ \r\n\t\topenModalSuccess: false,\r\n\t});\r\n};\r\n\r\nhandleOrderClick = (order) => {\r\n\tconsole.log(order,\"AA\");\r\n\tthis.setState({\r\n\t\t showOrderModal: true,\r\n\t\t address: order.pharmacy.EntityDTO.address.street +\", \"+ order.pharmacy.EntityDTO.address.city +\", \" +\r\n\t\t order.pharmacy.EntityDTO.address.country,\r\n\t\t pharmacyName: order.pharmacy.EntityDTO.name,\r\n\t\t replacingDrugs: order.order\r\n\t});\r\n};\r\n\r\nhandleOfferModalClose = () => {\r\n\tthis.setState({ showOfferModal: false });\r\n};\r\n\r\nhandleOrderModalClose = () => {\r\n\tthis.setState({ showOrderModal: false });\r\n};\r\n\r\nhandleDateChange = (date) => {\r\n\tthis.setState({ selectedDate: date });\r\n};\r\n\r\nhandleOffer = () => {\r\n\t\t\r\n\tif(this.state.price !==\"\"){\r\n\r\n\t\tlet offerDate = new Date(this.state.selectedDate.getFullYear(),this.state.selectedDate.getMonth(),this.state.selectedDate.getDate(),this.state.hours,this.state.minutes,0,0);\r\n\t\tlet OfferDTO = {\r\n\t\t\t\t\t\t\tprice: this.state.price,\r\n\t\t\t\t\t\t\tdateToDelivery: offerDate,\r\n\t\t\t\t\t\t\tid: this.state.orderId,\r\n\t\t\t\t\t\t}\r\n\t\tAxios.put(\"http://localhost:8080/offer/drugsCheck\", OfferDTO ,{ headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(\"usao u drugs check\");\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\tif(res.data){\r\n\t\t\t\t\t\tAxios.post(\"http://localhost:8080/offer\", OfferDTO ,{ headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\topenModalSuccess: true,\r\n\t\t\t\t\t\t\t\t\tshowOfferModal: false,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tAxios.get(\"http://localhost:8080/order/getAllOrders\", { headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\torders: res.data\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"GRESKA\");\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"CREATE GRESKA\");\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\topenModalDrugs: true,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(\"GRESKA\");\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\r\n\t\tconsole.log(OfferDTO, \"AJDE RADI\")\r\n\t}else{\r\n\t\tthis.setState({\r\n\t\t\topenModal: true,\r\n\t\t})\r\n\t}\r\n\t\t\r\n};\r\n\r\n\r\n    render() {\r\n\t\tif (this.state.redirect) return <Redirect push to={this.state.redirectUrl} />;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\r\n\t\t\t\t<Header />\r\n\r\n\t\t\t\t<div className=\"container\" style={{ marginTop: \"2%\" }}>\r\n\t\t\t\t\t<h5 className=\" text-center mb-0 mt-2 text-uppercase\">Orders </h5>\r\n\r\n\t\t\t\t\t<table className=\"table table-hover\" style={{ width: \"100%\", marginTop: \"3rem\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.orders.map((order) => (\r\n\t\t\t\t\t\t\t\t<tr className=\"rounded\">\r\n\t\t\t\t\t\t\t\t\t<td width=\"190em\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={orderImage}  width=\"150em\" />\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Date : </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(order.EntityDTO.date).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Pharmacy : </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{order.EntityDTO.pharmacy.EntityDTO.name}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Address: </b> {order.EntityDTO.pharmacy.EntityDTO.address.street}, {order.EntityDTO.pharmacy.EntityDTO.address.city},{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{order.EntityDTO.pharmacy.EntityDTO.address.country}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"align-middle\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"mt-2\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleOfferClick(order)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCreate an offer\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<OfferModal\r\n\t\t\t\t\tbuttonName=\"Send offer\"\r\n\t\t\t\t\theader=\"Make an offer\"\r\n\t\t\t\t\thandlePriceChange={this.handlePriceChange}\r\n\t\t\t\t\tshow={this.state.showOfferModal}\r\n\t\t\t\t\tprice={this.state.price}\r\n\t\t\t\t\tonCloseModal={this.handleOfferModalClose}\r\n\t\t\t\t\tgiveOffer={this.handleOffer}\r\n\t\t\t\t\thandleDateChange={this.handleDateChange}\r\n\t\t\t\t\tselectedDate={this.state.selectedDate}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n}export default withRouter(OrdersPage);","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\SupplierPages\\OfferModal.js",["227"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\"\r\nimport datepicker from \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nclass OfferModal extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tshow={this.props.show}\r\n\t\t\t\tdialogClassName=\"modal-80w-150h\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\tonHide={this.props.onCloseModal}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">\r\n\t\t\t\t\t\t{this.props.header}\r\n\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<h5>Give offer</h5>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<label>Price:</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Price\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tid=\"complaints\"\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.props.price}\r\n\t\t\t\t\t\t\t\t\tonChange={this.props.handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<label>Due to date:</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tminDate={new Date()}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => this.props.handleDateChange(date)}\r\n\t\t\t\t\t\t\t\t\tselected={this.props.selectedDate}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Button className=\"mt-3\" onClick={this.props.giveOffer}>\r\n\t\t\t\t\t\t\t\t\t{this.props.buttonName}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.props.onCloseModal}>Close</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default OfferModal;\r\n","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\FuturePharmaciesConsultationsForPatient.js",["228","229","230","231"],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Consultations\\HistoryPharmacistConsultation.js",["232","233","234","235"],{"ruleId":"236","severity":1,"message":"237","line":7,"column":8,"nodeType":"238","messageId":"239","endLine":7,"endColumn":9},{"ruleId":"236","severity":1,"message":"240","line":8,"column":8,"nodeType":"238","messageId":"239","endLine":8,"endColumn":14},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"236","severity":1,"message":"245","line":1,"column":8,"nodeType":"238","messageId":"239","endLine":1,"endColumn":12},{"ruleId":"236","severity":1,"message":"246","line":23,"column":3,"nodeType":"238","messageId":"239","endLine":23,"endColumn":7},{"ruleId":"236","severity":1,"message":"247","line":2,"column":13,"nodeType":"238","messageId":"239","endLine":2,"endColumn":27},{"ruleId":"236","severity":1,"message":"248","line":4,"column":8,"nodeType":"238","messageId":"239","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"250","line":243,"column":41,"nodeType":"251","endLine":243,"endColumn":84},{"ruleId":"252","severity":1,"message":"253","line":243,"column":19,"nodeType":"254","messageId":"255","endLine":243,"endColumn":54,"fix":"256"},{"ruleId":"249","severity":1,"message":"250","line":280,"column":41,"nodeType":"251","endLine":280,"endColumn":85},{"ruleId":"257","severity":1,"message":"258","line":68,"column":17,"nodeType":"259","messageId":"260","endLine":68,"endColumn":24},{"ruleId":"236","severity":1,"message":"261","line":5,"column":10,"nodeType":"238","messageId":"239","endLine":5,"endColumn":18},{"ruleId":"236","severity":1,"message":"262","line":6,"column":8,"nodeType":"238","messageId":"239","endLine":6,"endColumn":24},{"ruleId":"263","severity":1,"message":"264","line":30,"column":3,"nodeType":"265","messageId":"266","endLine":32,"endColumn":2},{"ruleId":"252","severity":1,"message":"253","line":276,"column":19,"nodeType":"254","messageId":"255","endLine":276,"endColumn":54,"fix":"267"},{"ruleId":"249","severity":1,"message":"250","line":321,"column":41,"nodeType":"251","endLine":321,"endColumn":85},{"ruleId":"236","severity":1,"message":"268","line":5,"column":8,"nodeType":"238","messageId":"239","endLine":5,"endColumn":27},{"ruleId":"263","severity":1,"message":"264","line":59,"column":2,"nodeType":"265","messageId":"266","endLine":61,"endColumn":3},{"ruleId":"269","severity":1,"message":"270","line":275,"column":44,"nodeType":"271","messageId":"272","endLine":275,"endColumn":45,"suggestions":"273"},{"ruleId":"269","severity":1,"message":"270","line":275,"column":63,"nodeType":"271","messageId":"272","endLine":275,"endColumn":64,"suggestions":"274"},{"ruleId":"236","severity":1,"message":"261","line":5,"column":10,"nodeType":"238","messageId":"239","endLine":5,"endColumn":18},{"ruleId":"249","severity":1,"message":"250","line":304,"column":22,"nodeType":"251","endLine":304,"endColumn":115},{"ruleId":"236","severity":1,"message":"275","line":8,"column":9,"nodeType":"238","messageId":"239","endLine":8,"endColumn":16},{"ruleId":"236","severity":1,"message":"261","line":8,"column":18,"nodeType":"238","messageId":"239","endLine":8,"endColumn":26},{"ruleId":"263","severity":1,"message":"264","line":31,"column":5,"nodeType":"265","messageId":"266","endLine":33,"endColumn":6},{"ruleId":"249","severity":1,"message":"250","line":224,"column":22,"nodeType":"251","endLine":224,"endColumn":111},{"ruleId":"236","severity":1,"message":"275","line":8,"column":9,"nodeType":"238","messageId":"239","endLine":8,"endColumn":16},{"ruleId":"236","severity":1,"message":"261","line":8,"column":18,"nodeType":"238","messageId":"239","endLine":8,"endColumn":26},{"ruleId":"263","severity":1,"message":"264","line":31,"column":5,"nodeType":"265","messageId":"266","endLine":33,"endColumn":6},{"ruleId":"249","severity":1,"message":"250","line":145,"column":22,"nodeType":"251","endLine":145,"endColumn":111},{"ruleId":"236","severity":1,"message":"276","line":7,"column":10,"nodeType":"238","messageId":"239","endLine":7,"endColumn":18},{"ruleId":"277","severity":1,"message":"278","line":107,"column":5,"nodeType":"254","endLine":107,"endColumn":15},{"ruleId":"263","severity":1,"message":"264","line":133,"column":5,"nodeType":"265","messageId":"266","endLine":135,"endColumn":3},{"ruleId":"277","severity":1,"message":"278","line":138,"column":3,"nodeType":"254","endLine":138,"endColumn":13},{"ruleId":"236","severity":1,"message":"279","line":202,"column":22,"nodeType":"238","messageId":"239","endLine":202,"endColumn":27},{"ruleId":"236","severity":1,"message":"279","line":337,"column":24,"nodeType":"238","messageId":"239","endLine":337,"endColumn":29},{"ruleId":"236","severity":1,"message":"279","line":376,"column":24,"nodeType":"238","messageId":"239","endLine":376,"endColumn":29},{"ruleId":"277","severity":1,"message":"278","line":174,"column":3,"nodeType":"254","endLine":174,"endColumn":13},{"ruleId":"280","severity":1,"message":"281","line":202,"column":32,"nodeType":"282","messageId":"260","endLine":202,"endColumn":34},{"ruleId":"280","severity":1,"message":"281","line":228,"column":32,"nodeType":"282","messageId":"260","endLine":228,"endColumn":34},{"ruleId":"280","severity":1,"message":"281","line":244,"column":32,"nodeType":"282","messageId":"260","endLine":244,"endColumn":34},{"ruleId":"280","severity":1,"message":"281","line":259,"column":32,"nodeType":"282","messageId":"260","endLine":259,"endColumn":34},{"ruleId":"283","severity":1,"message":"284","line":320,"column":37,"nodeType":"251","endLine":320,"endColumn":112},{"ruleId":"283","severity":1,"message":"284","line":321,"column":37,"nodeType":"251","endLine":321,"endColumn":112},{"ruleId":"283","severity":1,"message":"284","line":322,"column":37,"nodeType":"251","endLine":322,"endColumn":118},{"ruleId":"283","severity":1,"message":"284","line":323,"column":37,"nodeType":"251","endLine":323,"endColumn":117},{"ruleId":"280","severity":1,"message":"281","line":327,"column":91,"nodeType":"282","messageId":"260","endLine":327,"endColumn":93},{"ruleId":"236","severity":1,"message":"285","line":4,"column":22,"nodeType":"238","messageId":"239","endLine":4,"endColumn":28},{"ruleId":"236","severity":1,"message":"247","line":2,"column":13,"nodeType":"238","messageId":"239","endLine":2,"endColumn":27},{"ruleId":"236","severity":1,"message":"286","line":26,"column":15,"nodeType":"238","messageId":"239","endLine":26,"endColumn":22},{"ruleId":"236","severity":1,"message":"287","line":3,"column":8,"nodeType":"238","messageId":"239","endLine":3,"endColumn":13},{"ruleId":"236","severity":1,"message":"262","line":4,"column":8,"nodeType":"238","messageId":"239","endLine":4,"endColumn":24},{"ruleId":"236","severity":1,"message":"288","line":8,"column":7,"nodeType":"238","messageId":"239","endLine":8,"endColumn":14},{"ruleId":"236","severity":1,"message":"289","line":2,"column":10,"nodeType":"238","messageId":"239","endLine":2,"endColumn":16},{"ruleId":"236","severity":1,"message":"290","line":5,"column":8,"nodeType":"238","messageId":"239","endLine":5,"endColumn":39},{"ruleId":"236","severity":1,"message":"291","line":7,"column":8,"nodeType":"238","messageId":"239","endLine":7,"endColumn":23},{"ruleId":"236","severity":1,"message":"275","line":8,"column":9,"nodeType":"238","messageId":"239","endLine":8,"endColumn":16},{"ruleId":"236","severity":1,"message":"261","line":8,"column":18,"nodeType":"238","messageId":"239","endLine":8,"endColumn":26},{"ruleId":"263","severity":1,"message":"264","line":46,"column":5,"nodeType":"265","messageId":"266","endLine":48,"endColumn":6},{"ruleId":"236","severity":1,"message":"292","line":121,"column":7,"nodeType":"238","messageId":"239","endLine":121,"endColumn":21},{"ruleId":"236","severity":1,"message":"287","line":3,"column":8,"nodeType":"238","messageId":"239","endLine":3,"endColumn":13},{"ruleId":"236","severity":1,"message":"262","line":4,"column":8,"nodeType":"238","messageId":"239","endLine":4,"endColumn":24},{"ruleId":"236","severity":1,"message":"288","line":9,"column":7,"nodeType":"238","messageId":"239","endLine":9,"endColumn":14},{"ruleId":"249","severity":1,"message":"250","line":64,"column":45,"nodeType":"251","endLine":64,"endColumn":122},{"ruleId":"236","severity":1,"message":"287","line":3,"column":8,"nodeType":"238","messageId":"239","endLine":3,"endColumn":13},{"ruleId":"236","severity":1,"message":"262","line":4,"column":8,"nodeType":"238","messageId":"239","endLine":4,"endColumn":24},{"ruleId":"236","severity":1,"message":"288","line":9,"column":7,"nodeType":"238","messageId":"239","endLine":9,"endColumn":14},{"ruleId":"249","severity":1,"message":"250","line":61,"column":45,"nodeType":"251","endLine":61,"endColumn":101},{"ruleId":"236","severity":1,"message":"289","line":2,"column":10,"nodeType":"238","messageId":"239","endLine":2,"endColumn":16},{"ruleId":"236","severity":1,"message":"293","line":3,"column":8,"nodeType":"238","messageId":"239","endLine":3,"endColumn":25},{"ruleId":"249","severity":1,"message":"250","line":194,"column":11,"nodeType":"251","endLine":194,"endColumn":72},{"ruleId":"236","severity":1,"message":"294","line":4,"column":8,"nodeType":"238","messageId":"239","endLine":4,"endColumn":18},{"ruleId":"236","severity":1,"message":"275","line":8,"column":9,"nodeType":"238","messageId":"239","endLine":8,"endColumn":16},{"ruleId":"236","severity":1,"message":"261","line":8,"column":18,"nodeType":"238","messageId":"239","endLine":8,"endColumn":26},{"ruleId":"263","severity":1,"message":"264","line":35,"column":5,"nodeType":"265","messageId":"266","endLine":37,"endColumn":6},{"ruleId":"249","severity":1,"message":"250","line":280,"column":22,"nodeType":"251","endLine":280,"endColumn":108},{"ruleId":"236","severity":1,"message":"287","line":3,"column":8,"nodeType":"238","messageId":"239","endLine":3,"endColumn":13},{"ruleId":"236","severity":1,"message":"262","line":4,"column":8,"nodeType":"238","messageId":"239","endLine":4,"endColumn":24},{"ruleId":"236","severity":1,"message":"288","line":9,"column":7,"nodeType":"238","messageId":"239","endLine":9,"endColumn":14},{"ruleId":"249","severity":1,"message":"250","line":34,"column":22,"nodeType":"251","endLine":34,"endColumn":97},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["295"],"no-negated-in-lhs",["296"],"'logo' is defined but never used.","'Link' is defined but never used.","'ReactBootStrap' is defined but never used.","'TopBar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-whitespace-before-property","Unexpected whitespace before property handleSearchCountryNameChange.","MemberExpression","unexpectedWhitespace",{"range":"297","text":"298"},"no-dupe-keys","Duplicate key 'address'.","ObjectExpression","unexpected","'Redirect' is defined but never used.","'GetAuthorisation' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",{"range":"299","text":"298"},"'PharmacyLogoPicture' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["300","301"],["302","303"],"'NavLink' is defined but never used.","'getRoles' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","'value' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Router' is defined but never used.","'myStyle' is assigned a value but never used.","'Axios' is defined but never used.","'API_URL' is assigned a value but never used.","'Button' is defined but never used.","'DermatologistAppointmentPicture' is defined but never used.","'SuccessfulAlert' is defined but never used.","'acceptableDate' is assigned a value but never used.","'UnsuccessfulAlert' is defined but never used.","'datepicker' is defined but never used.","no-global-assign","no-unsafe-negation",[5430,5432],".",[6284,6286],{"messageId":"304","fix":"305","desc":"306"},{"messageId":"307","fix":"308","desc":"309"},{"messageId":"304","fix":"310","desc":"306"},{"messageId":"307","fix":"311","desc":"309"},"removeEscape",{"range":"312","text":"313"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"314","text":"315"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"316","text":"313"},{"range":"317","text":"315"},[6582,6583],"",[6582,6582],"\\",[6601,6602],[6601,6601]]