[{"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\index.js":"1","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\reportWebVitals.js":"2","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\App.js":"3","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\RegistrationPage.js":"4","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Drugs.js":"5","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\LoginPage.js":"6","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\UserProfile.js":"7","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies.js":"8","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\HomePage.js":"9","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\registerStaff.js":"10","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Header.js":"11","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\TopBar.js":"12","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Funciton\\GetAuthorisation.js":"13","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Alerts\\UnsuccessfulAlert.js":"14","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Alerts\\SuccessfulAlert.js":"15","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\ChangePasswordModal.js":"16","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\AllergensModal.js":"17"},{"size":673,"mtime":1620305180542,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1270,"mtime":1620305493640,"results":"21","hashOfConfig":"19"},{"size":4983,"mtime":1620491760728,"results":"22","hashOfConfig":"19"},{"size":6768,"mtime":1618692512441,"results":"23","hashOfConfig":"19"},{"size":3012,"mtime":1620305180523,"results":"24","hashOfConfig":"19"},{"size":19927,"mtime":1620998585149,"results":"25","hashOfConfig":"19"},{"size":7921,"mtime":1618692512443,"results":"26","hashOfConfig":"19"},{"size":1507,"mtime":1620305180521,"results":"27","hashOfConfig":"19"},{"size":4143,"mtime":1620305180527,"results":"28","hashOfConfig":"19"},{"size":4214,"mtime":1620305398619,"results":"29","hashOfConfig":"19"},{"size":1244,"mtime":1617301349544,"results":"30","hashOfConfig":"19"},{"size":318,"mtime":1618697534939,"results":"31","hashOfConfig":"19"},{"size":540,"mtime":1620680246832,"results":"32","hashOfConfig":"19"},{"size":537,"mtime":1620680216454,"results":"33","hashOfConfig":"19"},{"size":3422,"mtime":1620927191606,"results":"34","hashOfConfig":"19"},{"size":3168,"mtime":1620998354409,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"10t86ml",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\index.js",["81","82"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["83","84"],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\reportWebVitals.js",[],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\App.js",["85","86"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport HomePage from \"./Components/HomePage\"\r\nimport Drugs from \"./Components/Drugs\"\r\nimport Pharmacies from \"./Components/Pharmacies\"\r\nimport RegisterPage from \"./Components/RegistrationPage\"\r\nimport LoginPage from \"./Components/LoginPage\"\r\nimport UserProfilePage from \"./Pages/UserProfile\"\r\nimport registerStaff from \"./Components/adminRegistration/registerStaff\"\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Route,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    \r\n    \r\n    <Router>\r\n      \r\n        <Switch>\r\n        <Route exact to =\"/\"  path =\"/\" component={HomePage}/>\r\n        <Route  to =\"/drugs\" path =\"/drugs\"  component={Drugs}/>\r\n        <Route  to =\"/pharmacies\" path =\"/pharmacies\"  component={Pharmacies}/>       \r\n        <Route  to =\"/registration\" path =\"/registration\"  component={RegisterPage}/>\r\n        <Route  to =\"/login\" path =\"/login\"  component={LoginPage}/>\r\n        <Route  to =\"/userProfile\" path =\"/userProfile\"  component={UserProfilePage}/>\r\n        <Route  to =\"/registerStaff\" path =\"/registerStaff\"  component={registerStaff}/>\r\n\r\n        </Switch>\r\n    </Router>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\RegistrationPage.js",["87"],"import React, { Component } from \"react\";\r\nimport Header from './Header';\r\nimport Axios from \"axios\";\r\n\r\nclass RegisterPage extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n\t\tpassword: \"\",\r\n\t\trepeatPassword: \"\",\r\n        name: \"\",\r\n\t\tsurname: \"\",\r\n\t\taddress: \"\",\r\n\t\tphoneNumber: \"\",\r\n        \r\n\r\n\r\n\r\n    };\r\n\r\n    handleEmailChange = (event) => {\r\n\t\tthis.setState({ email: event.target.value });\r\n\t};\r\n    handlePasswordChange = (event) => {\r\n\t\tthis.setState({ password: event.target.value });\r\n\t};\r\n\t\r\n\thandleRepeatPasswordChange = (event) => {\r\n\t\tthis.setState({ repeatPassword: event.target.value });\r\n\t};\r\n\r\n\thandleNameChange = (event) => {\r\n\t\tthis.setState({ name: event.target.value });\r\n\t};\r\n\r\n\thandleSurnameChange = (event) => {\r\n\t\tthis.setState({ surname: event.target.value });\r\n\t};\r\n\r\n\thandleAddressChange = (event) => {\r\n\t\tthis.setState({ address: event.target.value });\r\n\t};\r\n\r\n\thandlePhoneNumberChange = (event) => {\r\n\t\tthis.setState({ phoneNumber: event.target.value });\r\n        console.log(\"Nemanja\");\r\n\t};\r\n\r\n    handleSignUp = () => {\r\n\r\n           \r\n            let userDTO = {\r\n                email: this.state.email,\r\n                name: this.state.name,\r\n                surname: this.state.surname,\r\n                address: this.state.address,\r\n                phoneNumber: this.state.phoneNumber,\r\n                password: this.state.password,\r\n            };\r\n\r\n            this.setState({\r\n                address:\"\",\r\n                email:\"\",\r\n                password:\"\",\r\n                repeatPassword:\"\",\r\n                name:\"\",\r\n                surname:\"\",\r\n                address:\"\",\r\n                phoneNumber:\"\"\r\n            });\r\n\r\n            console.log(userDTO);\r\n            Axios.post(\"http://localhost:8080/reg/patsignup\", userDTO, { validateStatus: () => true })\r\n            .then((res) => {\r\n                \r\n                \r\n            })\r\n\r\n            \r\n    };\r\n\r\n\r\n    render() {\r\n        return(\r\n\r\n        <React.Fragment>\r\n            <Header/>  \r\n\r\n            <h5 className=\" text-center  mb-0 text-uppercase\" style={{ marginTop: \"2rem\" }}>\r\n\t\t\t\t\t\tRegistration\r\n\t\t\t\t\t</h5>\r\n\r\n            <br/>        \r\n\r\n            <div class=\"container\" style={{maxWidth: \"40%\"}}>\r\n                <form>\r\n                    <div class=\"form-group\">\r\n                        <label style={{textAlign:\"start !important\"}} for=\"exampleInputEmail1\">Email address</label>\r\n                        <input type=\"text\" onChange={this.handleEmailChange} value={this.state.email} class=\"form-control\" id=\"emailAddress\" aria-describedby=\"emailHelp\" placeholder=\"Email address\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputName1\">Name</label>\r\n                        <input type=\"text\" onChange={this.handleNameChange} value={this.state.name} class=\"form-control\" id=\"name\" placeholder=\"Name\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Surname</label>\r\n                        <input type=\"text\" onChange={this.handleSurnameChange} value={this.state.surname} class=\"form-control\" id=\"surname\" placeholder=\"Surname\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Address</label>\r\n                        <input type=\"text\" onChange={this.handleAddressChange} value={this.state.address} class=\"form-control\" id=\"address\" placeholder=\"Address\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Phone number</label>\r\n                        <input type=\"text\" onChange={this.handlePhoneNumberChange} value={this.state.phoneNumber} class=\"form-control\" id=\"phoneNumber\" placeholder=\"Phone number\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Password</label>\r\n                        <input type=\"Password\" onChange={this.handlePasswordChange} value={this.state.password} class=\"form-control\" id=\"password\" placeholder=\"Password\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Repeat password</label>\r\n                        <input type=\"Password\" onChange={this.handleRepeatPasswordChange} value={this.state.repeatPassword} class=\"form-control\" id=\"passwordRepeat\" placeholder=\"Repeat password\"/>\r\n                    </div>\r\n                    \r\n                    <div class=\"text-center\">\r\n                    <button type=\"button\" class=\"btn btn-primary \" style={{width: \"20%\"}} onClick={this.handleSignUp}>Submit</button>\r\n                        </div>\r\n                </form>\r\n            </div>  \r\n\r\n        </React.Fragment>\r\n\r\n\r\n\r\n        );\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default RegisterPage;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Drugs.js",["88"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from './Header';\r\nimport MedicamentPicture from \"../Images/medicament.jpg\" ;\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass Drugs extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n\t\tallDrugs: [],\r\n    drugSearchName: \"\",\r\n    drugSearchProducerName: \"\",\r\n    drugSearchFabricCode: \"\",\r\n    showSearchedForm: false,\r\n    showResetSearced: false,\r\n    inputError : \"none\"\r\n\t\t\r\n\r\n\r\n  };\r\n\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n\t\t\r\n\r\n\t\tAxios.get(API_URL + \"/drug/allDrugs\")\r\n\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ allDrugs: res.data });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n  \r\n         \r\n\t}\r\n\r\n\r\n   handleSearchForm = () => {    \r\n   \r\n    if(this.state.inputError=== \"initial\")\r\n      this.setState({inputError :\"none\"});\r\n      \r\n   \r\n    this.setState({showSearchedForm : !this.state.showSearchedForm,\r\n                    showResetSearced: false});\r\n\r\n                    if(this.state.showSearchedForm===false){\r\n\r\n                      this.setState({\r\n    \r\n                        showResetSearced: true,\r\n                        drugSearchName: \"\",\r\n                        drugSearchProducerName: \"\",\r\n                        drugSearchFabricCode: \"\", \r\n                        inputError : \"none\"     \r\n                      \r\n                      });\r\n\r\n                    }\r\n\r\n                    \r\n   }\r\n\r\n   handleSearchNameChange = (event) => {\r\n\t\tthis.setState({ drugSearchName: event.target.value });\r\n\t};\r\n\r\n  handleSearchProducerNameChange= (event) => {\r\n\t\tthis.setState({ drugSearchProducerName: event.target.value });\r\n\t};\r\n\r\n  handleSearchFabricCodeChange= (event) => {\r\n\t\tthis.setState({ drugSearchFabricCode: event.target.value });\r\n\t};\r\n\r\n  \r\n\r\n\r\n   SearchDrugs = () => {\r\n\r\n\r\n  if (this.state.drugSearchName === \"\" && this.state.drugSearchProducerName === \"\" &&  this.state.drugSearchFabricCode=== \"\" ) {\r\n        this.setState({ inputError : \"initial\" });\r\n           return false;\r\n  } \r\n\r\n  this.setState({ inputError : \"none\" });\r\n\r\n    const searchDTO = {\r\n\r\n      name : this.state.drugSearchName,\r\n      producerName : this.state.drugSearchProducerName,\r\n      fabricCode : \"\",\r\n\r\n\r\n     };\r\n          \r\n\t\tAxios.post(API_URL + \"/drug/searchDrugs\", searchDTO)\r\n\r\n\t\t.then((res) => {\r\n      this.setState({\r\n        allDrugs: res.data,\r\n        showResetSearced : true,\r\n        showSearchedForm : false,      \r\n      \r\n      });\r\n     \r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      \r\n    });\r\n\r\n\t\t\r\n\t};\r\n\r\n  resetSearch = () => {\r\n\r\n   \r\n    this.setState({\r\n    \r\n     showResetSearced : false,\r\n     showSearchedForm : false, \r\n     drugSearchName: \"\",\r\n     drugSearchProducerName: \"\",\r\n     drugSearchFabricCode: \"\", \r\n     inputError : \"none\"     \r\n   \r\n   });\r\n\r\n          \r\n    Axios.get(API_URL + \"/drug/allDrugs\")\r\n\r\n    .then((res) => {\r\n      this.setState({ allDrugs: res.data });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n\r\n\t\t\r\n\t};\r\n\r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n      <div id=\"allDrugs\">\r\n\r\n            \r\n           \r\n           \r\n            <div style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }} width=\"100%\">\r\n\r\n            <div className=\"inline\" >\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg mr-3\" onClick={this.handleSearchForm}>\r\n               \r\n                {this.state.showSearchedForm ? \"Close search\" : \"Open search\"}\r\n                                \r\n            </button>\r\n\r\n            <button hidden={!this.state.showResetSearced} type=\"button\" class=\"btn btn-outline-primary btn-lg mr-3\" onClick={this.resetSearch}>\r\n               \r\n               Reset search\r\n                               \r\n           </button>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <form hidden={!this.state.showSearchedForm} className=\"form-inline\" width=\"100%\" id=\"searchForm\">\r\n\t\t\t\t\t\t\r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.drugSearchName}\r\n\t\t\t\t\t\t\t/>             \r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Producer name\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchProducerNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.drugSearchProducerName}\r\n\t\t\t\t\t\t\t/>\r\n              \r\n\r\n              \r\n             \r\n              \r\n\t\t\t\t\t\t\t<button\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonClick={this.SearchDrugs}\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-lg \"\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n                \r\n\t\t\t\t\t\t\t>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t</button>\r\n             \r\n\r\n\t\t\t\t\t</form>\r\n\r\n          <div className=\"text-danger\" style={{ display: this.state.inputError, fontSize: \"17px\"}}>\r\n\t\t\t\t\t\t\t\t\t\tEnter something in field!\r\n\t\t\t\t\t</div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n        <div className=\"container\">\r\n                    <h1 >All drugs</h1>\r\n                    <table className=\"table\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n                        \r\n                        <tbody>\r\n                            {\r\n                                this.state.allDrugs.map((drug) => (\r\n                                    <tr key={drug.Id} id={drug.Id} >\r\n                                       \r\n\r\n                                      <td width=\"100px\">  \r\n                                       \r\n                                        <img src={MedicamentPicture } width=\"70px\"></img>                                 \r\n                                     \r\n                                      </td>\r\n\r\n\r\n                                      <td>\r\n                                        \r\n                                        <div>  \r\n                                        <b>Name: </b>{drug.EntityDTO.name}\r\n                                        </div>  \r\n\r\n                                        <div>  \r\n                                        <b>Producer name: </b> {drug.EntityDTO.producerName}\r\n                                        </div> \r\n\r\n                                        <div>  \r\n                                        <b>Fabric code: </b>{drug.EntityDTO.fabricCode}\r\n                                        </div>\r\n\r\n                                      </td>\r\n\r\n\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Drugs;\r\n","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\LoginPage.js",[],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Pages\\UserProfile.js",["89","90","91","92"],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Pharmacies.js",["93","94"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from './Header';\r\nimport PharmacyLogoPicture from \"../Images/pharmacyLogo.jpg\" ;\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass Pharmacies extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n\t\r\n        allPharmacies: [],\r\n        pharmacySearchName: \"\",\r\n        searchCountryName: \"\",\r\n        searchStreetName: \"\",\r\n        searchCityName: \"\",\r\n        showSearchedForm: false,\r\n        showResetSearced: false,\r\n        inputError : \"none\"\r\n\t\t\r\n\r\n\r\n  };\r\n\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n\t\t\r\n\r\n\t\tAxios.get(API_URL + \"/pharmacy/allPharmacies\")\r\n\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ allPharmacies: res.data });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n  \r\n         \r\n\t}\r\n\r\n\r\n   handleSearchForm = () => {    \r\n   \r\n    if(this.state.inputError=== \"initial\")\r\n      this.setState({inputError :\"none\"});\r\n      \r\n   \r\n    this.setState({showSearchedForm : !this.state.showSearchedForm,\r\n                    showResetSearced: false});\r\n          \r\n                    if(this.state.showSearchedForm===false){\r\n\r\n                      this.setState({\r\n    \r\n                        showResetSearced: true,\r\n                        pharmacySearchName: \"\",\r\n                        searchCountryName: \"\",\r\n                        searchStreetName: \"\",\r\n                        searchCityName: \"\",\r\n                        inputError : \"none\"     \r\n                      \r\n                      });\r\n\r\n                    }\r\n\r\n                    \r\n   }\r\n\r\n   handlePharmacySearchNameChange = (event) => {\r\n\t\tthis.setState({ pharmacySearchName: event.target.value });\r\n\t};\r\n\r\n  handleSearchCountryNameChange= (event) => {\r\n\t\tthis.setState({ searchCountryName: event.target.value });\r\n\t};\r\n\r\n  handleSearchStreetNameChange= (event) => {\r\n\t\tthis.setState({ searchStreetName: event.target.value });\r\n\t};\r\n\r\n  \r\n  handleSearchCityNameChange= (event) => {\r\n\t\tthis.setState({ searchCityName: event.target.value });\r\n\t};\r\n\r\n\r\n\r\n    SearchPharmacies = () => {\r\n\r\n\r\n    if (this.state.pharmacySearchName === \"\" && this.state.searchCityName === \"\" \r\n          &&  this.state.searchCountryName=== \"\" &&  this.state.searchStreetName=== \"\" ) {\r\n          this.setState({ inputError : \"initial\" });\r\n             return false;\r\n    } \r\n  \r\n    this.setState({ inputError : \"none\" });\r\n  \r\n      const searchDTO = {\r\n  \r\n        name : this.state.pharmacySearchName,\r\n        street : this.state.searchStreetName,\r\n        city: this.state.searchCityName,\r\n        country : this.state.searchCountryName,\r\n  \r\n  \r\n       };\r\n\r\n      \r\n\r\n      Axios.post(API_URL + \"/pharmacy/searchPharmacies\", searchDTO)\r\n  \r\n      .then((res) => {\r\n        this.setState({\r\n          allPharmacies: res.data,\r\n          showResetSearced : true,\r\n          showSearchedForm : false,      \r\n        \r\n        });\r\n       \r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        \r\n      });\r\n  \r\n      \r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    resetSearch = () => {\r\n\r\n   \r\n    this.setState({\r\n    \r\n     showResetSearced : false,\r\n     showSearchedForm : false, \r\n     pharmacySearchName: \"\",\r\n     searchCountryName: \"\",\r\n     searchStreetName: \"\",\r\n     searchCityName: \"\",\r\n     inputError : \"none\"     \r\n   \r\n   });\r\n\r\n          \r\n    Axios.get(API_URL + \"/pharmacy/allPharmacies\")\r\n\r\n    .then((res) => {\r\n      this.setState({ allPharmacies\r\n        : res.data });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n\r\n\t\t\r\n\t};\r\n\r\n\r\n   \r\n\r\n \r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n      <div id=\"allPharmacies\">\r\n\r\n            \r\n           \r\n           \r\n            <div style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }} width=\"100%\">\r\n\r\n            <div className=\"inline\" >\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg mr-3\" onClick={this.handleSearchForm}>\r\n               \r\n                {this.state.showSearchedForm ? \"Close search\" : \"Open search\"}\r\n                                \r\n            </button>\r\n\r\n            <button hidden={!this.state.showResetSearced} type=\"button\" class=\"btn btn-outline-primary btn-lg mr-3\" onClick={this.resetSearch}>\r\n               \r\n               Reset search\r\n                               \r\n           </button>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <form hidden={!this.state.showSearchedForm} className=\"form-inline\" width=\"100%\" id=\"searchForm\">\r\n\t\t\t\t\t\t\r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Pharmacy name\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handlePharmacySearchNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.pharmacySearchName}\r\n\t\t\t\t\t\t\t/>             \r\n              \r\n             \r\n              \r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Street\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchStreetNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchStreetName}\r\n\t\t\t\t\t\t\t/>\r\n\r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"City\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearchCityNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchCityName}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t  \t\r\n\r\n              <input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Country\"\r\n                class=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={this. handleSearchCountryNameChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.searchCountryName}\r\n\t\t\t\t\t\t\t/>\r\n              \r\n              \r\n\t\t\t\t\t\t\t<button\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonClick={this.SearchPharmacies}\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-lg \"\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n                \r\n\t\t\t\t\t\t\t>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t</button>\r\n             \r\n\r\n\t\t\t\t\t</form>\r\n\r\n          <div className=\"text-danger\" style={{ display: this.state.inputError, fontSize: \"17px\"}}>\r\n\t\t\t\t\t\t\t\t\t\tEnter something in field!\r\n\t\t\t\t\t</div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n        <div className=\"container\">\r\n                    <h1 >All pharmacies</h1>\r\n                    <table className=\"table\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n                        \r\n                        <tbody>\r\n                            {\r\n                                this.state.allPharmacies.map((pharmacy) => (\r\n                                    <tr key={pharmacy.Id} id={pharmacy.Id} >\r\n                                       \r\n\r\n                                      <td width=\"100px\">  \r\n                                       \r\n                                        <img src={PharmacyLogoPicture} width=\"70px\"></img>                                 \r\n                                     \r\n                                      </td>\r\n\r\n\r\n                                      <td>\r\n                                        \r\n                                        <div>  \r\n                                        <b>Name: </b>{pharmacy.EntityDTO.name}\r\n                                        </div>  \r\n\r\n                                        <div>  \r\n                                        <b>Location: </b> {pharmacy.EntityDTO.address.street}, {\" \"} {pharmacy.EntityDTO.address.city},{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t                                      {pharmacy.EntityDTO.address.country}\r\n                                        </div> \r\n\r\n                                        <div>  \r\n                                        <b>Description: </b>{pharmacy.EntityDTO.description}\r\n                                        </div>\r\n\r\n                                      </td>\r\n\r\n\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Pharmacies;\r\n","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\HomePage.js",["95","96"],"import React from 'react';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport Header from './Header';\r\nimport TopBar from './TopBar';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass HomePage extends React.Component {\r\n\r\n\r\n      hasSpecificRole = (reqRole) => {\r\n      let roles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n      if (roles === null) return false;\r\n\r\n      for (let role of roles) {\r\n        if (role === reqRole) return true;\r\n      }\r\n      return false;\r\n      };\r\n\r\n      hasAnyRole = (reqRole) => {\r\n        let roles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n  \r\n        if (roles === null) return false;\r\n\r\n        return true;\r\n        };\r\n\r\n    \r\n    \r\n    render() {\r\n    return (\r\n     \r\n      <React.Fragment>\r\n     \r\n          <Header/>\r\n          <div >\r\n\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          <section id=\"homePageSection\" className=\"d-flex \">\r\n\t\t\t\t\t<div className=\"container\" style={{textAlign: \"center\"}}>\r\n\t\t\t\t\t\t<h1>Welcome to Health Clinic </h1>\r\n\r\n            <Link  to=\"/login\" hidden={this.hasSpecificRole(\"ROLE_PATIENT\")} className=\"btn-Login-Register\">\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<Link  to=\"/registration\" hidden={this.hasSpecificRole(\"ROLE_PATIENT\")} className=\"btn-Login-Register\">\r\n\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t</Link>\r\n      \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t  </section>\r\n\r\n             \r\n        \r\n          </div>\r\n          \r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n  \r\n  export default HomePage;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\adminRegistration\\registerStaff.js",["97","98","99","100","101"],"import Header from \"../../Components/Header\";\r\nimport React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\nclass registerStaff extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n\t\tpassword: \"\",\r\n        errorHeader: \"\",\r\n        redirect: false,\r\n        selected:\"\",\r\n        hidden: false\r\n        \r\n\r\n\r\n\r\n    };\r\n\r\n    handleChangeType = (event) => {\r\n        console.log(\"USAO\");\r\n\t\tthis.setState({ selected: \"Pharmacy admin\" });\r\n        console.log(this.state.selected);\r\n\t};\r\n    handleChangeHidden = (event) => {\r\n        console.log(\"USAO1\");\r\n\t\tthis.setState({ hidden: true });\r\n        \r\n\t};\r\n\r\n\r\nrender() {\r\n        if (this.state.redirect) return <Redirect push to=\"/\" />;\r\n        return(\r\n            <React.Fragment>\r\n            <Header/>\r\n            \r\n\r\n            <h5 className=\" text-center  mb-0 text-uppercase\" style={{ marginTop: \"2rem\" }}>\r\n\t\t\t\t\t\tRegister Staff\r\n\t\t\t\t\t</h5>\r\n\r\n            <br/> \r\n\r\n            \r\n\r\n            <div class=\"container\" style={{maxWidth: \"40%\"}}>\r\n                <form>\r\n\r\n                        <div class=\"dropdown\" hidden={this.state.hidden}>\r\n                        <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Choose\r\n                        </button>\r\n                        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                            <a class=\"dropdown-item\" onClick={this.handleChangeType} value={\"Pharmacy admin\"}>Pharmacy admin</a>\r\n                            <a class=\"dropdown-item\" href=\"#\">Dermatologist</a>\r\n                            <a class=\"dropdown-item\" href=\"#\">Supplier</a>\r\n                            <a class=\"dropdown-item\" href=\"#\">System Admin</a>\r\n                        </div>\r\n                        </div>\r\n\r\n                        <br/> \r\n                    \r\n                    <label >{this.state.selected}</label>\r\n                        \r\n\r\n                    <div class=\"form-group\">\r\n                        <label style={{textAlign:\"start !important\"}} for=\"exampleInputEmail1\">Email address</label>\r\n                        <input type=\"text\" onChange={this.handleEmailChange} value={this.state.email} class=\"form-control\" id=\"emailAddress\" aria-describedby=\"emailHelp\" placeholder=\"Email address\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputName1\">Name</label>\r\n                        <input type=\"text\" onChange={this.handleNameChange} value={this.state.name} class=\"form-control\" id=\"name\" placeholder=\"Name\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Surname</label>\r\n                        <input type=\"text\" onChange={this.handleSurnameChange} value={this.state.surname} class=\"form-control\" id=\"surname\" placeholder=\"Surname\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Address</label>\r\n                        <input type=\"text\" onChange={this.handleAddressChange} value={this.state.address} class=\"form-control\" id=\"address\" placeholder=\"Address\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Phone number</label>\r\n                        <input type=\"text\" onChange={this.handlePhoneNumberChange} value={this.state.phoneNumber} class=\"form-control\" id=\"phoneNumber\" placeholder=\"Phone number\"/>\r\n                    </div>\r\n                    \r\n                    \r\n                    <div class=\"text-center\">\r\n                    <button type=\"button\" class=\"btn btn-primary \" style={{width: \"20%\"}} onClick={this.handleSignUp}>Submit</button>\r\n                        </div>\r\n                </form>\r\n            </div>  \r\n\r\n\r\n\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default registerStaff;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Header.js",["102"],"import React from 'react';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Header extends React.Component{\r\n\r\n\r\n      handleLogout = () => {\r\n      localStorage.removeItem(\"keyToken\");\r\n      localStorage.removeItem(\"keyRole\");\r\n      localStorage.removeItem(\"expireTime\");\r\n    };\r\n\r\n    hasRole = (requestRole) => {\r\n      let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n      if (currentRoles === null) return false;\r\n\r\n\r\n      for (let currentRole of currentRoles) {\r\n        if (currentRole === requestRole) return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    IsLogedIn = () => {\r\n      let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n      if (currentRoles === null) return false;\r\n\r\n      \r\n      return true;\r\n    };\r\n\r\n    render(){\r\n      \r\n      \r\n        \r\n    \r\n    \r\n          return(\r\n                  \r\n              \r\n\r\n                <div id=\"header\">\r\n\r\n          \r\n\r\n\r\n                <ReactBootStrap.Navbar collapseOnSelect expand=\"xl\" bg=\"primary\" variant=\"dark\">\r\n                <Link to=\"/\">\r\n                <ReactBootStrap.Navbar.Brand  style={{fontSize : \"35px\"}}>Health clinic</ReactBootStrap.Navbar.Brand>\r\n                </Link>\r\n                <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                \r\n                <ReactBootStrap.Navbar.Collapse  id=\"responsive-navbar-nav\">\r\n              \r\n                <ReactBootStrap.Nav className=\"ml-auto\" >\r\n            \r\n            \r\n            \r\n                <Link to=\"/drugs\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\">Drugs</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n\r\n                <Link to=\"/pharmacies\">\r\n                <ReactBootStrap.Nav.Link href=\"#deets\">Pharmacies</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n            \r\n                <ReactBootStrap.NavDropdown alignRight title=\"Apointment\" id=\"collasible-nav-dropdown\">\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/pharmacistApointment\">Pharmacist</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider />\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/dermatologistApointment\">Dermatologist</ReactBootStrap.NavDropdown.Item>\r\n                    \r\n                </ReactBootStrap.NavDropdown>\r\n\r\n                <ReactBootStrap.NavDropdown alignRight title=\"Register\" id=\"collasible-nav-dropdown\">\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/registerStaff\" >Stuff member</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Item >Pharmacy</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Item >Drug</ReactBootStrap.NavDropdown.Item>\r\n                    \r\n                    \r\n                </ReactBootStrap.NavDropdown>\r\n\r\n                  \r\n                <ReactBootStrap.NavDropdown alignRight title=\"User\" id=\"collasible-nav-dropdown\">\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/login\" hidden={this.IsLogedIn()}>Login</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider hidden={this.IsLogedIn()} />\r\n                    <ReactBootStrap.NavDropdown.Item href=\"/registration\" hidden={this.IsLogedIn()}>Register</ReactBootStrap.NavDropdown.Item>\r\n\r\n                    \r\n                    <ReactBootStrap.NavDropdown.Item href=\"/userProfile\" hidden={!this.hasRole(\"ROLE_PATIENT\")}>My profile</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider hidden={!this.IsLogedIn()} />\r\n                    <ReactBootStrap.NavDropdown.Item onClick={this.handleLogout} href=\"/login\" hidden={!this.IsLogedIn(\"*\")}>Log out</ReactBootStrap.NavDropdown.Item>\r\n\r\n                </ReactBootStrap.NavDropdown>\r\n            \r\n            \r\n                </ReactBootStrap.Nav>\r\n            \r\n              </ReactBootStrap.Navbar.Collapse>\r\n            \r\n            </ReactBootStrap.Navbar>\r\n            \r\n            \r\n                    </div>\r\n\r\n\r\n\r\n              )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Header;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\TopBar.js",["103","104"],"import React from 'react';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass TopBar extends React.Component{\r\n\r\n    handleLogout = () => {\r\n        localStorage.removeItem(\"keyToken\");\r\n        localStorage.removeItem(\"keyRole\");\r\n        localStorage.removeItem(\"expireTime\");\r\n      };\r\n  \r\n      \r\n  \r\n      IsLogedIn = () => {\r\n        let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n  \r\n        if (currentRoles === null) return false;\r\n  \r\n        \r\n        return true;\r\n      };\r\n    \r\n\r\n    render(){\r\n        const myStyle = {\r\n\t\t\tmargin: 10,\r\n\t\t};\r\n        return(\r\n            \r\n\r\n          <div id=\"topbar\" className=\"ml-auto\" >\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t<div className=\" ml-auto container register-login\">\r\n\t\t\t\t\t\t<Link to=\"/registration\" hidden={this.IsLogedIn()}>\r\n\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t</Link>\r\n            <i ></i>{\" \"}\r\n\t\t\t\t\t\t<Link to=\"/login\" hidden={this.IsLogedIn()}>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Link>\r\n            <i className=\"icofont-envelope\"></i>{\" \"}\r\n\t\t\t\t\t\t<Link onClick={this.handleLogout} to=\"/login\" hidden={!this.IsLogedIn()}>\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default TopBar;","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Funciton\\GetAuthorisation.js",[],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Alerts\\UnsuccessfulAlert.js",[],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Alerts\\SuccessfulAlert.js",[],"C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\ChangePasswordModal.js",["105"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport HeadingAlert from \"../Alerts/UnsuccessfulAlert\";\r\n\r\nclass ChangePasswordModal extends Component {\r\n\tstate = {\r\n\t\toldPassword: \"\",\r\n\t\tnewPassword: \"\",\r\n\t\tnewPasswordRepeated: \"\",\r\n\t};\r\n\r\n\thandleOldPassword = (event) => {\r\n\t\tthis.setState({ oldPassword: event.target.value });\r\n\t};\r\n\r\n\thandleNewPasswordFirst = (event) => {\r\n\t\tthis.setState({ newPassword: event.target.value });\r\n\t};\r\n\r\n\thandleNewPasswordRepeat= (event) => {\r\n\t\tthis.setState({ newPasswordRepeated: event.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tshow={this.props.show}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tdialogClassName=\"modal-80w-80h\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t\tonHide={this.props.onCloseModal}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">{this.props.header}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<HeadingAlert\r\n\t\t\t\t\t\thidden={this.props.hiddenPasswordErrorAlert}\r\n\t\t\t\t\t\theader={this.props.errorPasswordHeader}\r\n\t\t\t\t\t\tmessage={this.props.errorPasswordMessage}\r\n\t\t\t\t\t\thandleCloseAlert={this.props.handleCloseAlertPassword}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t<div className=\"form-group \" >\r\n\t\t\t\t\t\t\t<label>Old password:</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Old password\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleOldPassword}\r\n\t\t\t\t\t\t\t\tvalue={this.state.oldPassword}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.props.emptyOldPasswordError }}>\r\n\t\t\t\t\t\t\tOld password must be entered.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t<div className=\"form-group\" >\r\n\t\t\t\t\t\t\t<label>New password:</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"New password\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleNewPasswordFirst}\r\n\t\t\t\t\t\t\t\tvalue={this.state.newPassword}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.props.emptyNewPasswordError }}>\r\n\t\t\t\t\t\t\tNew password must be entered!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"control-group\">\r\n\t\t\t\t\t\t<div className=\"form-group \" >\r\n\t\t\t\t\t\t\t<label>Repeat new password:</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"Repeat new password\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleNewPasswordRepeat}\r\n\t\t\t\t\t\t\t\tvalue={this.state.newPasswordRepeated}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.props.emptyNewPasswordRepeatedError }}>\r\n\t\t\t\t\t\t\tRepeat the new password!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-danger\" style={{ display: this.props.newPasswordAndRepeatedNotSameError }}>\r\n\t\t\t\t\t\t\tPasswords must be same!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group text-center\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tstyle={{ background: \"#1977cc\", marginTop: \"15px\" }}\r\n\t\t\t\t\t\t\tonClick={() => this.props.changePassword(this.state.oldPassword, this.state.newPassword, this.state.newPasswordRepeated)}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-xl\"\r\n\t\t\t\t\t\t\tid=\"sendMessageButton\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tChange password\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n            \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ChangePasswordModal;\r\n","C:\\Users\\stefan\\Desktop\\ISA-projekat\\ISA-projekat\\ISA-front\\src\\Components\\Modal\\AllergensModal.js",["106","107","108"],{"ruleId":"109","severity":1,"message":"110","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":9},{"ruleId":"109","severity":1,"message":"113","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":14},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"109","severity":1,"message":"118","line":1,"column":8,"nodeType":"111","messageId":"112","endLine":1,"endColumn":12},{"ruleId":"109","severity":1,"message":"119","line":14,"column":3,"nodeType":"111","messageId":"112","endLine":14,"endColumn":7},{"ruleId":"120","severity":1,"message":"121","line":68,"column":17,"nodeType":"122","messageId":"123","endLine":68,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":243,"column":41,"nodeType":"126","endLine":243,"endColumn":84},{"ruleId":"109","severity":1,"message":"127","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":27},{"ruleId":"128","severity":1,"message":"129","line":59,"column":2,"nodeType":"130","messageId":"131","endLine":61,"endColumn":3},{"ruleId":"132","severity":1,"message":"133","line":272,"column":44,"nodeType":"134","messageId":"135","endLine":272,"endColumn":45,"suggestions":"136"},{"ruleId":"132","severity":1,"message":"133","line":272,"column":63,"nodeType":"134","messageId":"135","endLine":272,"endColumn":64,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":243,"column":19,"nodeType":"140","messageId":"141","endLine":243,"endColumn":54,"fix":"142"},{"ruleId":"124","severity":1,"message":"125","line":280,"column":41,"nodeType":"126","endLine":280,"endColumn":85},{"ruleId":"109","severity":1,"message":"143","line":2,"column":13,"nodeType":"111","messageId":"112","endLine":2,"endColumn":27},{"ruleId":"109","severity":1,"message":"144","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":14},{"ruleId":"109","severity":1,"message":"145","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":13},{"ruleId":"146","severity":1,"message":"147","line":58,"column":29,"nodeType":"126","endLine":58,"endColumn":111},{"ruleId":"146","severity":1,"message":"148","line":59,"column":29,"nodeType":"126","endLine":59,"endColumn":63},{"ruleId":"146","severity":1,"message":"148","line":60,"column":29,"nodeType":"126","endLine":60,"endColumn":63},{"ruleId":"146","severity":1,"message":"148","line":61,"column":29,"nodeType":"126","endLine":61,"endColumn":63},{"ruleId":"109","severity":1,"message":"149","line":4,"column":22,"nodeType":"111","messageId":"112","endLine":4,"endColumn":28},{"ruleId":"109","severity":1,"message":"143","line":2,"column":13,"nodeType":"111","messageId":"112","endLine":2,"endColumn":27},{"ruleId":"109","severity":1,"message":"150","line":26,"column":15,"nodeType":"111","messageId":"112","endLine":26,"endColumn":22},{"ruleId":"109","severity":1,"message":"151","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":16},{"ruleId":"109","severity":1,"message":"145","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":13},{"ruleId":"109","severity":1,"message":"152","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":24},{"ruleId":"109","severity":1,"message":"153","line":8,"column":7,"nodeType":"111","messageId":"112","endLine":8,"endColumn":14},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["154"],"no-negated-in-lhs",["155"],"'logo' is defined but never used.","'Link' is defined but never used.","no-dupe-keys","Duplicate key 'address'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PharmacyLogoPicture' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["156","157"],["158","159"],"no-whitespace-before-property","Unexpected whitespace before property handleSearchCountryNameChange.","MemberExpression","unexpectedWhitespace",{"range":"160","text":"161"},"'ReactBootStrap' is defined but never used.","'TopBar' is defined but never used.","'Axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Router' is defined but never used.","'myStyle' is assigned a value but never used.","'Button' is defined but never used.","'GetAuthorisation' is defined but never used.","'API_URL' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"162","fix":"163","desc":"164"},{"messageId":"165","fix":"166","desc":"167"},{"messageId":"162","fix":"168","desc":"164"},{"messageId":"165","fix":"169","desc":"167"},[5430,5432],".","removeEscape",{"range":"170","text":"171"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"172","text":"173"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"174","text":"171"},{"range":"175","text":"173"},[6437,6438],"",[6437,6437],"\\",[6456,6457],[6456,6456]]