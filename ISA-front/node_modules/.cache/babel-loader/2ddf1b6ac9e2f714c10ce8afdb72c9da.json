{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stefan\\\\Desktop\\\\ISA-projekat\\\\ISA-projekat\\\\ISA-front\\\\src\\\\Pages\\\\PharmaciesAppointmentStartPage.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport Header from '../Components/Header';\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\";\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport FoundPharmaciesForDateRange from \"../Components/Pharmacies/FoundPharmaciesForDateRange\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\n\nclass PharmaciesAppointmentStartPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDate: new Date(),\n      hours: new Date().getHours(),\n      minutes: new Date().getMinutes(),\n      pharmacies: [],\n      hiddenPharmacies: true,\n      hiddenUnsuccessfulAlert: true,\n      UnsuccessfulHeader: \"\",\n      UnsuccessfulMessage: \"\",\n      isPharmaciesEmpty: false\n    };\n\n    this.hasRole = requestRole => {\n      let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\n      if (currentRoles === null) return false;\n\n      for (let currentRole of currentRoles) {\n        if (currentRole === requestRole) return true;\n      }\n\n      return false;\n    };\n\n    this.handleCloseSuccessfulAlert = () => {\n      this.setState({\n        hiddenSuccessfulAlert: true\n      });\n    };\n\n    this.handleCloseUnsuccessfulAlert = () => {\n      this.setState({\n        hiddenUnsuccessfulAlert: true\n      });\n    };\n\n    this.handleDateChange = date => {\n      this.setState({\n        selectedDate: date\n      });\n    };\n\n    this.handleMinutesChange = event => {\n      if (event.target.value < 0) this.setState({\n        minutes: 0\n      });else if (event.target.value > 59) this.setState({\n        minutes: 59\n      });else this.setState({\n        minutes: event.target.value\n      });\n    };\n\n    this.handleHoursChange = event => {\n      if (event.target.value < 0) this.setState({\n        hours: 0\n      });else if (event.target.value > 23) this.setState({\n        hours: 23\n      });else this.setState({\n        hours: event.target.value\n      });\n    };\n\n    this.CheckAvailabilityAppointment = () => {\n      this.setState({\n        consultationDate: new Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate(), this.state.hours, this.state.minutes, 0, 0).getTime(),\n        hiddenUnsuccessfulAlert: true,\n        UnsuccessfulHeader: \"\",\n        UnsuccessfulMessage: \"\"\n      });\n      let acceptableDate = new Date().getTime() + 3600;\n      let consultationDateSelected = new Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate(), this.state.hours, this.state.minutes, 0, 0).getTime();\n      console.log(\"sok\");\n      Axios.get(API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/\" + consultationDateSelected, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          this.setState({\n            pharmacies: res.data\n          });\n\n          if (this.state.pharmacies.length !== 0) {\n            this.setState({\n              hiddenPharmacies: false,\n              isPharmaciesEmpty: false\n            });\n          } else {\n            this.setState({\n              isPharmaciesEmpty: true\n            });\n          }\n\n          console.log(res.data);\n        }\n\n        if (res.status === 401) {\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Internal server error\",\n            UnsuccessfulMessage: res.data\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          hiddenUnsuccessfulAlert: false,\n          UnsuccessfulHeader: \"Error\",\n          UnsuccessfulMessage: \"Some error\"\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        hidden: !this.state.hiddenPharmacies,\n        children: [/*#__PURE__*/_jsxDEV(UnsuccessfulAlert, {\n          hidden: this.state.hiddenUnsuccessfulAlert,\n          header: this.state.UnsuccessfulHeader,\n          message: this.state.UnsuccessfulMessage,\n          handleCloseAlert: this.handleCloseUnsuccessfulAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center  mt-3  \",\n          children: \"Please select the desired date for consultations with a pharmacist!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \" text-center  mt-3  text-danger\",\n          hidden: !this.state.isPharmaciesEmpty,\n          children: \"We couldn't find pharmacies with free pharmacists at desired time. Please change date and time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          style: {\n            marginTop: \"5em\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Select date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"form-control\",\n                minDate: new Date(),\n                onChange: date => this.handleDateChange(date),\n                selected: this.state.selectedDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Hours:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"00\",\n                max: \"23\",\n                className: \"form-control\",\n                onChange: this.handleHoursChange,\n                value: this.state.hours,\n                style: {\n                  width: \"12em\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Minutes:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                min: \"00\",\n                max: \"59\",\n                type: \"number\",\n                className: \"form-control\",\n                onChange: this.handleMinutesChange,\n                value: this.state.minutes,\n                style: {\n                  width: \"12em\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  class: \"btn btn-outline-primary btn-lg \",\n                  onClick: () => this.CheckAvailabilityAppointment(),\n                  style: {\n                    marginTop: \"2em\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Check appointment \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(FoundPharmaciesForDateRange, {\n        hiddenPharmacies: this.state.hiddenPharmacies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PharmaciesAppointmentStartPage;","map":{"version":3,"sources":["C:/Users/stefan/Desktop/ISA-projekat/ISA-projekat/ISA-front/src/Pages/PharmaciesAppointmentStartPage.js"],"names":["React","Component","Axios","Header","GetAuthorisation","DermatologistAppointmentPicture","UnsuccessfulAlert","SuccessfulAlert","NavLink","Redirect","DatePicker","FoundPharmaciesForDateRange","API_URL","PharmaciesAppointmentStartPage","constructor","props","state","selectedDate","Date","hours","getHours","minutes","getMinutes","pharmacies","hiddenPharmacies","hiddenUnsuccessfulAlert","UnsuccessfulHeader","UnsuccessfulMessage","isPharmaciesEmpty","hasRole","requestRole","currentRoles","JSON","parse","localStorage","getItem","currentRole","handleCloseSuccessfulAlert","setState","hiddenSuccessfulAlert","handleCloseUnsuccessfulAlert","handleDateChange","date","handleMinutesChange","event","target","value","handleHoursChange","CheckAvailabilityAppointment","consultationDate","getFullYear","getMonth","getDate","getTime","acceptableDate","consultationDateSelected","console","log","get","validateStatus","headers","Authorization","then","res","status","data","length","catch","err","componentDidMount","history","push","render","marginTop","fontSize","width","marginLeft","marginRight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,+BAAP,MAA4C,2BAA5C;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAiC,kBAAjC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAOC,2BAAP,MAAwC,sDAAxC;;AAGA,MAAMC,OAAO,GAAC,uBAAd;;AAEA,MAAMC,8BAAN,SAA6CZ,SAA7C,CAAuD;AAoBnDa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAhBnBC,KAgBmB,GAhBX;AAEJC,MAAAA,YAAY,EAAE,IAAIC,IAAJ,EAFV;AAGVC,MAAAA,KAAK,EAAE,IAAID,IAAJ,GAAWE,QAAX,EAHG;AAIVC,MAAAA,OAAO,EAAE,IAAIH,IAAJ,GAAWI,UAAX,EAJC;AAKJC,MAAAA,UAAU,EAAE,EALR;AAMVC,MAAAA,gBAAgB,EAAE,IANR;AAQJC,MAAAA,uBAAuB,EAAE,IARrB;AASJC,MAAAA,kBAAkB,EAAE,EAThB;AAUJC,MAAAA,mBAAmB,EAAE,EAVjB;AAYVC,MAAAA,iBAAiB,EAAG;AAZV,KAgBW;;AAAA,SAgBrBC,OAhBqB,GAgBVC,WAAD,IAAiB;AACzB,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAnB;AAEA,UAAIJ,YAAY,KAAK,IAArB,EAA2B,OAAO,KAAP;;AAG3B,WAAK,IAAIK,WAAT,IAAwBL,YAAxB,EAAsC;AACpC,YAAIK,WAAW,KAAKN,WAApB,EAAiC,OAAO,IAAP;AAClC;;AACD,aAAO,KAAP;AACD,KA1BoB;;AAAA,SA6BrBO,0BA7BqB,GA6BQ,MAAM;AACnC,WAAKC,QAAL,CAAc;AAAEC,QAAAA,qBAAqB,EAAE;AAAzB,OAAd;AACA,KA/BqB;;AAAA,SAiCtBC,4BAjCsB,GAiCQ,MAAM;AACnC,WAAKF,QAAL,CAAc;AAAEb,QAAAA,uBAAuB,EAAE;AAA3B,OAAd;AACA,KAnCqB;;AAAA,SAsCnBgB,gBAtCmB,GAsCCC,IAAD,IAAU;AAC/B,WAAKJ,QAAL,CAAc;AAAErB,QAAAA,YAAY,EAAEyB;AAAhB,OAAd;AACA,KAxCqB;;AAAA,SA0CtBC,mBA1CsB,GA0CCC,KAAD,IAAW;AAChC,UAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,GAAqB,CAAzB,EAA4B,KAAKR,QAAL,CAAc;AAAEjB,QAAAA,OAAO,EAAE;AAAX,OAAd,EAA5B,KACW,IAAIuB,KAAK,CAACC,MAAN,CAAaC,KAAb,GAAqB,EAAzB,EAA6B,KAAKR,QAAL,CAAc;AAAEjB,QAAAA,OAAO,EAAE;AAAX,OAAd,EAA7B,KACN,KAAKiB,QAAL,CAAc;AAAEjB,QAAAA,OAAO,EAAEuB,KAAK,CAACC,MAAN,CAAaC;AAAxB,OAAd;AACL,KA9CqB;;AAAA,SAgDtBC,iBAhDsB,GAgDDH,KAAD,IAAW;AACxB,UAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,GAAqB,CAAzB,EAA4B,KAAKR,QAAL,CAAc;AAAEnB,QAAAA,KAAK,EAAE;AAAT,OAAd,EAA5B,KACD,IAAIyB,KAAK,CAACC,MAAN,CAAaC,KAAb,GAAqB,EAAzB,EAA6B,KAAKR,QAAL,CAAc;AAAEnB,QAAAA,KAAK,EAAE;AAAT,OAAd,EAA7B,KACA,KAAKmB,QAAL,CAAc;AAAEnB,QAAAA,KAAK,EAAEyB,KAAK,CAACC,MAAN,CAAaC;AAAtB,OAAd;AACL,KApDqB;;AAAA,SAuDnBE,4BAvDmB,GAuDY,MAAM;AAGvC,WAAKV,QAAL,CAAc;AAEbW,QAAAA,gBAAgB,EAAE,IAAI/B,IAAJ,CACjB,KAAKF,KAAL,CAAWC,YAAX,CAAwBiC,WAAxB,EADiB,EAEjB,KAAKlC,KAAL,CAAWC,YAAX,CAAwBkC,QAAxB,EAFiB,EAGjB,KAAKnC,KAAL,CAAWC,YAAX,CAAwBmC,OAAxB,EAHiB,EAIjB,KAAKpC,KAAL,CAAWG,KAJM,EAKjB,KAAKH,KAAL,CAAWK,OALM,EAMjB,CANiB,EAOjB,CAPiB,EAQhBgC,OARgB,EAFL;AAYb5B,QAAAA,uBAAuB,EAAE,IAZZ;AAabC,QAAAA,kBAAkB,EAAE,EAbP;AAcbC,QAAAA,mBAAmB,EAAE;AAdR,OAAd;AAiBA,UAAI2B,cAAc,GAAG,IAAIpC,IAAJ,GAAWmC,OAAX,KAAuB,IAA5C;AAEA,UAAIE,wBAAwB,GAAE,IAAIrC,IAAJ,CAC7B,KAAKF,KAAL,CAAWC,YAAX,CAAwBiC,WAAxB,EAD6B,EAE7B,KAAKlC,KAAL,CAAWC,YAAX,CAAwBkC,QAAxB,EAF6B,EAG7B,KAAKnC,KAAL,CAAWC,YAAX,CAAwBmC,OAAxB,EAH6B,EAI7B,KAAKpC,KAAL,CAAWG,KAJkB,EAK7B,KAAKH,KAAL,CAAWK,OALkB,EAM7B,CAN6B,EAO7B,CAP6B,EAQ5BgC,OAR4B,EAA9B;AAYWG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACVvD,MAAAA,KAAK,CAACwD,GAAN,CAAW9C,OAAO,GAAG,yDAAV,GAAsE2C,wBAAjF,EAA6G;AAC7GI,QAAAA,cAAc,EAAE,MAAM,IADuF;AAE7GC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEzD,gBAAgB;AAAjC;AAFoG,OAA7G,EAIE0D,IAJF,CAIQC,GAAD,IAAS;AACb,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACxB,eAAK1B,QAAL,CAAc;AAAEf,YAAAA,UAAU,EAAEwC,GAAG,CAACE;AAAlB,WAAd;;AACA,cAAG,KAAKjD,KAAL,CAAWO,UAAX,CAAsB2C,MAAtB,KAA+B,CAAlC,EAAoC;AACnC,iBAAK5B,QAAL,CAAc;AAACd,cAAAA,gBAAgB,EAAE,KAAnB;AAA0BI,cAAAA,iBAAiB,EAAE;AAA7C,aAAd;AACA,WAFD,MAEK;AACJ,iBAAKU,QAAL,CAAc;AAACV,cAAAA,iBAAiB,EAAE;AAApB,aAAd;AACA;;AACD4B,UAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACE,IAAhB;AACA;;AACA,YAAGF,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAsB;AACJ,eAAK1B,QAAL,CAAc;AAAEb,YAAAA,uBAAuB,EAAE,KAA3B;AACVC,YAAAA,kBAAkB,EAAE,uBADV;AAEVC,YAAAA,mBAAmB,EAAEoC,GAAG,CAACE;AAFf,WAAd;AAGH;AAChB,OAnBF,EAoBEE,KApBF,CAoBSC,GAAD,IAAS;AACfZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACe,aAAK9B,QAAL,CAAc;AAAEb,UAAAA,uBAAuB,EAAE,KAA3B;AACVC,UAAAA,kBAAkB,EAAE,OADV;AAEVC,UAAAA,mBAAmB,EAAE;AAFX,SAAd;AAIf,OA1BF;AA4BD,KAtHqB;AAElB;;AAIH0C,EAAAA,iBAAiB,GAAG;AAElB,QAAI,CAAC,KAAKxC,OAAL,CAAa,cAAb,CAAL,EAAmC;AACpC,WAAKd,KAAL,CAAWuD,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACE;AAGH;;AA8GDC,EAAAA,MAAM,GAAG;AAGR,wBAEI,QAAC,KAAD,CAAO,QAAP;AAAA,8BAEG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFH,eAIG;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,MAAM,EAAE,CAAC,KAAKxD,KAAL,CAAWQ,gBAA/C;AAAA,gCAGA,QAAC,iBAAD;AACL,UAAA,MAAM,EAAE,KAAKR,KAAL,CAAWS,uBADd;AAEL,UAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,kBAFd;AAGL,UAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW,mBAHf;AAIL,UAAA,gBAAgB,EAAE,KAAKa;AAJlB;AAAA;AAAA;AAAA;AAAA,gBAHA,eAYA;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZA,eAcN;AAAI,UAAA,SAAS,EAAC,iCAAd;AAAgD,UAAA,MAAM,EAAE,CAAC,KAAKxB,KAAL,CAAWY,iBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdM,eAkBA;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,KAAK,EAAE;AAAE6C,YAAAA,SAAS,EAAE;AAAb,WAAtC;AAAA,kCACH;AAAK,YAAA,SAAS,EAAC,iCAAf;AAAA,oCACsB;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACpB;AAAK,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,QAAQ,EAAE;AAAZ,iBAAZ;AAAA,uCAC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD5B;AAAA;AAAA;AAAA;AAAA,sBADoB,eAKpB,QAAC,UAAD;AACC,gBAAA,SAAS,EAAC,cADX;AAEC,gBAAA,OAAO,EAAE,IAAIxD,IAAJ,EAFV;AAGC,gBAAA,QAAQ,EAAGwB,IAAD,IAAU,KAAKD,gBAAL,CAAsBC,IAAtB,CAHrB;AAIC,gBAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWC;AAJtB;AAAA;AAAA;AAAA;AAAA,sBALoB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADtB,eAaC;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACC;AAAK,gBAAA,KAAK,EAAE;AAAEyD,kBAAAA,QAAQ,EAAE;AAAZ,iBAAZ;AAAA,uCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,sBADD,eAIC;AAC4B,gBAAA,IAAI,EAAC,QADjC;AAEC,gBAAA,GAAG,EAAC,IAFL;AAGC,gBAAA,GAAG,EAAC,IAHL;AAI4B,gBAAA,SAAS,EAAC,cAJtC;AAKC,gBAAA,QAAQ,EAAE,KAAK3B,iBALhB;AAMC,gBAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWG,KANnB;AAOC,gBAAA,KAAK,EAAE;AAAEwD,kBAAAA,KAAK,EAAE;AAAT;AAPR;AAAA;AAAA;AAAA;AAAA,sBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbD,eA4BC;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACC;AAAK,gBAAA,KAAK,EAAE;AAAED,kBAAAA,QAAQ,EAAE;AAAZ,iBAAZ;AAAA,uCAC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD5B;AAAA;AAAA;AAAA;AAAA,sBADD,eAIC;AACC,gBAAA,GAAG,EAAC,IADL;AAE4B,gBAAA,GAAG,EAAC,IAFhC;AAG4B,gBAAA,IAAI,EAAC,QAHjC;AAIC,gBAAA,SAAS,EAAC,cAJX;AAKC,gBAAA,QAAQ,EAAE,KAAK/B,mBALhB;AAMC,gBAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWK,OANnB;AAOC,gBAAA,KAAK,EAAE;AAAEsD,kBAAAA,KAAK,EAAE;AAAT;AAPR;AAAA;AAAA;AAAA;AAAA,sBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5BD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADG,eA+CH;AAAK,YAAA,KAAK,EAAC,WAAX;AAAA,mCACsB;AAAK,cAAA,KAAK,EAAC,KAAX;AAAA,qCACI;AAAK,gBAAA,KAAK,EAAC,iBAAX;AAAA,uCACd;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,KAAK,EAAC,iCAA5B;AACsB,kBAAA,OAAO,EAAE,MAAM,KAAK3B,4BAAL,EADrC;AAEsB,kBAAA,KAAK,EAAE;AAAGyB,oBAAAA,SAAS,EAAE,KAAd;AAAqBG,oBAAAA,UAAU,EAAE,MAAjC;AAAwCC,oBAAAA,WAAW,EAAE;AAArD,mBAF7B;AAAA,yCAIsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJtB;AAAA;AAAA;AAAA;AAAA;AADc;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADtB;AAAA;AAAA;AAAA;AAAA,kBA/CG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJH,eA2FJ,QAAC,2BAAD;AAEE,QAAA,gBAAgB,EAAG,KAAK7D,KAAL,CAAWQ;AAFhC;AAAA;AAAA;AAAA;AAAA,cA3FI;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAgHA;;AAlQqD;;AAqQvD,eAAeX,8BAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport FoundPharmaciesForDateRange from \"../Components/Pharmacies/FoundPharmaciesForDateRange\"\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass PharmaciesAppointmentStartPage extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        selectedDate: new Date(),\r\n\t\thours: new Date().getHours(),\r\n\t\tminutes: new Date().getMinutes(),\r\n        pharmacies: [],\r\n\t\thiddenPharmacies: true,\r\n\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n\r\n\t\tisPharmaciesEmpty : false\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n  \r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n    handleDateChange = (date) => {\r\n\t\tthis.setState({ selectedDate: date });\r\n\t};\r\n\r\n\thandleMinutesChange = (event) => {\r\n\t\tif (event.target.value < 0) this.setState({ minutes: 0 });\r\n        else if (event.target.value > 59) this.setState({ minutes: 59 });\r\n\t\telse this.setState({ minutes: event.target.value });\r\n\t};\r\n\r\n\thandleHoursChange = (event) => {\r\n        if (event.target.value < 0) this.setState({ hours: 0 });\r\n\t\telse if (event.target.value > 23) this.setState({ hours: 23 });\r\n\t\telse this.setState({ hours: event.target.value });\r\n\t};\r\n    \r\n    \r\n    CheckAvailabilityAppointment = () => {\r\n        \r\n\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t});\r\n\r\n\t\tlet acceptableDate = new Date().getTime() + 3600;\r\n\t\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime();\r\n\r\n\t\t\r\n\t    \r\n             console.log(\"sok\");\r\n\t\t\tAxios.get( API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/\" + consultationDateSelected  , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() }},\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 200) {\r\n\t\t\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\t\t\tif(this.state.pharmacies.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: false, isPharmaciesEmpty: false });\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmaciesEmpty: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t if(res.status === 401){\r\n                        this.setState({ hiddenUnsuccessfulAlert: false, \r\n                            UnsuccessfulHeader: \"Internal server error\", \r\n                            UnsuccessfulMessage: res.data });\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    this.setState({ hiddenUnsuccessfulAlert: false, \r\n                        UnsuccessfulHeader: \"Error\", \r\n                        UnsuccessfulMessage: \"Some error\" });\r\n                    \r\n\t\t\t\t});\r\n\t\t\r\n\t};\r\n\r\n\r\n   \r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n         <Header/>\r\n      \r\n         <div className=\"container\" hidden={!this.state.hiddenPharmacies} >\r\n\r\n\r\n         <UnsuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t/>\r\n       \r\n\r\n\r\n         <h1  className=\"text-center  mt-3  \" >Please select the desired date for consultations with a pharmacist!</h1>\r\n         \r\n\t\t <h5 className=\" text-center  mt-3  text-danger\" hidden={!this.state.isPharmaciesEmpty}>\r\n\t\t\t\t\t\tWe couldn't find pharmacies with free pharmacists at desired time. Please change date and time.\r\n\t\t</h5>\r\n\r\n         <div className=\"control-group\" style={{ marginTop: \"5em\" }}>\r\n\t\t\t\t\t\t<div className=\"form-row justify-content-center\">\r\n                            <div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n                                    <b>Select date:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tminDate={new Date()}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => this.handleDateChange(date)}\r\n\t\t\t\t\t\t\t\t\tselected={this.state.selectedDate}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n\t\t\t\t\t\t\t\t\t<b>Hours:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input\r\n                                    type=\"number\"\r\n\t\t\t\t\t\t\t\t\tmin=\"00\"\r\n\t\t\t\t\t\t\t\t\tmax=\"23\"\r\n                                    className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleHoursChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.hours}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"12em\" }}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n                                    <b>Minutes:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tmin=\"00\"\r\n                                    max=\"59\"\r\n                                    type=\"number\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleMinutesChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.minutes}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"12em\" }}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col text-center\">\r\n\t\t\t\t\t\t            <button type=\"button\" class=\"btn btn-outline-primary btn-lg \"\r\n                                        onClick={() => this.CheckAvailabilityAppointment()}\r\n                                        style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n                                        >\r\n                                        <b>Check appointment </b>\r\n\r\n                                     </button>\r\n\r\n                                </div>\r\n                             </div>\r\n                        </div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\r\n          \r\n        </div>\r\n\r\n\r\n\t\t<FoundPharmaciesForDateRange\r\n\r\n\t\t\t\thiddenPharmacies= {this.state.hiddenPharmacies}\r\n\r\n\r\n\r\n\t\t/>\r\n\r\n\t\t\t\r\n\r\n\r\n\r\n\r\n\t\t\r\n\r\n\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PharmaciesAppointmentStartPage;"]},"metadata":{},"sourceType":"module"}