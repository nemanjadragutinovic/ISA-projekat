{"ast":null,"code":"/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\nimport * as utils from './utils'; // Browser shims.\n\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim'; // Shimming starts here.\n\nexport function adapterFactory({\n  window\n} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  }; // Shim browser if found.\n\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection || !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming chrome.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = chromeShim; // Must be called before shimPeerConnection.\n\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection || !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming firefox.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = firefoxShim; // Must be called before shimPeerConnection.\n\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming edge.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = edgeShim;\n      edgeShim.shimGetUserMedia(window, browserDetails);\n      edgeShim.shimGetDisplayMedia(window, browserDetails);\n      edgeShim.shimPeerConnection(window, browserDetails);\n      edgeShim.shimReplaceTrack(window, browserDetails); // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming safari.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = safariShim; // Must be called before shimCallbackAPI.\n\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}","map":{"version":3,"sources":["C:/Users/stefan/Desktop/ISA-projekat/ISA-projekat/ISA-front/node_modules/webrtc-adapter/src/js/adapter_factory.js"],"names":["utils","chromeShim","edgeShim","firefoxShim","safariShim","commonShim","adapterFactory","window","options","shimChrome","shimFirefox","shimEdge","shimSafari","logging","log","browserDetails","detectBrowser","adapter","extractVersion","disableLog","disableWarnings","browser","shimPeerConnection","version","browserShim","shimAddIceCandidateNullOrEmpty","shimGetUserMedia","shimMediaStream","shimOnTrack","shimAddTrackRemoveTrack","shimGetSendersWithDtmf","shimGetStats","shimSenderReceiverGetStats","fixNegotiationNeeded","shimRTCIceCandidate","shimConnectionState","shimMaxMessageSize","shimSendThrowTypeError","removeExtmapAllowMixed","shimRemoveStream","shimSenderGetStats","shimReceiverGetStats","shimRTCDataChannel","shimAddTransceiver","shimGetParameters","shimCreateOffer","shimCreateAnswer","shimGetDisplayMedia","shimReplaceTrack","shimRTCIceServerUrls","shimCreateOfferLegacy","shimCallbacksAPI","shimLocalStreamsAPI","shimRemoteStreamsAPI","shimTrackEventTransceiver","shimAudioContext"],"mappings":"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","sourcesContent":["/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\nimport * as utils from './utils';\r\n\r\n  // Browser shims.\r\nimport * as chromeShim from './chrome/chrome_shim';\r\nimport * as edgeShim from './edge/edge_shim';\r\nimport * as firefoxShim from './firefox/firefox_shim';\r\nimport * as safariShim from './safari/safari_shim';\r\nimport * as commonShim from './common_shim';\r\n\r\n// Shimming starts here.\r\nexport function adapterFactory({window} = {}, options = {\r\n  shimChrome: true,\r\n  shimFirefox: true,\r\n  shimEdge: true,\r\n  shimSafari: true,\r\n}) {\r\n  // Utils.\r\n  const logging = utils.log;\r\n  const browserDetails = utils.detectBrowser(window);\r\n\r\n  const adapter = {\r\n    browserDetails,\r\n    commonShim,\r\n    extractVersion: utils.extractVersion,\r\n    disableLog: utils.disableLog,\r\n    disableWarnings: utils.disableWarnings\r\n  };\r\n\r\n  // Shim browser if found.\r\n  switch (browserDetails.browser) {\r\n    case 'chrome':\r\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\r\n          !options.shimChrome) {\r\n        logging('Chrome shim is not included in this adapter release.');\r\n        return adapter;\r\n      }\r\n      if (browserDetails.version === null) {\r\n        logging('Chrome shim can not determine version, not shimming.');\r\n        return adapter;\r\n      }\r\n      logging('adapter.js shimming chrome.');\r\n      // Export to the adapter global object visible in the browser.\r\n      adapter.browserShim = chromeShim;\r\n\r\n      // Must be called before shimPeerConnection.\r\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\r\n\r\n      chromeShim.shimGetUserMedia(window, browserDetails);\r\n      chromeShim.shimMediaStream(window, browserDetails);\r\n      chromeShim.shimPeerConnection(window, browserDetails);\r\n      chromeShim.shimOnTrack(window, browserDetails);\r\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\r\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\r\n      chromeShim.shimGetStats(window, browserDetails);\r\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\r\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\r\n\r\n      commonShim.shimRTCIceCandidate(window, browserDetails);\r\n      commonShim.shimConnectionState(window, browserDetails);\r\n      commonShim.shimMaxMessageSize(window, browserDetails);\r\n      commonShim.shimSendThrowTypeError(window, browserDetails);\r\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\r\n      break;\r\n    case 'firefox':\r\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\r\n          !options.shimFirefox) {\r\n        logging('Firefox shim is not included in this adapter release.');\r\n        return adapter;\r\n      }\r\n      logging('adapter.js shimming firefox.');\r\n      // Export to the adapter global object visible in the browser.\r\n      adapter.browserShim = firefoxShim;\r\n\r\n      // Must be called before shimPeerConnection.\r\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\r\n\r\n      firefoxShim.shimGetUserMedia(window, browserDetails);\r\n      firefoxShim.shimPeerConnection(window, browserDetails);\r\n      firefoxShim.shimOnTrack(window, browserDetails);\r\n      firefoxShim.shimRemoveStream(window, browserDetails);\r\n      firefoxShim.shimSenderGetStats(window, browserDetails);\r\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\r\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\r\n      firefoxShim.shimAddTransceiver(window, browserDetails);\r\n      firefoxShim.shimGetParameters(window, browserDetails);\r\n      firefoxShim.shimCreateOffer(window, browserDetails);\r\n      firefoxShim.shimCreateAnswer(window, browserDetails);\r\n\r\n      commonShim.shimRTCIceCandidate(window, browserDetails);\r\n      commonShim.shimConnectionState(window, browserDetails);\r\n      commonShim.shimMaxMessageSize(window, browserDetails);\r\n      commonShim.shimSendThrowTypeError(window, browserDetails);\r\n      break;\r\n    case 'edge':\r\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\r\n        logging('MS edge shim is not included in this adapter release.');\r\n        return adapter;\r\n      }\r\n      logging('adapter.js shimming edge.');\r\n      // Export to the adapter global object visible in the browser.\r\n      adapter.browserShim = edgeShim;\r\n\r\n      edgeShim.shimGetUserMedia(window, browserDetails);\r\n      edgeShim.shimGetDisplayMedia(window, browserDetails);\r\n      edgeShim.shimPeerConnection(window, browserDetails);\r\n      edgeShim.shimReplaceTrack(window, browserDetails);\r\n\r\n      // the edge shim implements the full RTCIceCandidate object.\r\n\r\n      commonShim.shimMaxMessageSize(window, browserDetails);\r\n      commonShim.shimSendThrowTypeError(window, browserDetails);\r\n      break;\r\n    case 'safari':\r\n      if (!safariShim || !options.shimSafari) {\r\n        logging('Safari shim is not included in this adapter release.');\r\n        return adapter;\r\n      }\r\n      logging('adapter.js shimming safari.');\r\n      // Export to the adapter global object visible in the browser.\r\n      adapter.browserShim = safariShim;\r\n\r\n      // Must be called before shimCallbackAPI.\r\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\r\n\r\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\r\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\r\n      safariShim.shimCallbacksAPI(window, browserDetails);\r\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\r\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\r\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\r\n      safariShim.shimGetUserMedia(window, browserDetails);\r\n      safariShim.shimAudioContext(window, browserDetails);\r\n\r\n      commonShim.shimRTCIceCandidate(window, browserDetails);\r\n      commonShim.shimMaxMessageSize(window, browserDetails);\r\n      commonShim.shimSendThrowTypeError(window, browserDetails);\r\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\r\n      break;\r\n    default:\r\n      logging('Unsupported browser!');\r\n      break;\r\n  }\r\n\r\n  return adapter;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}