{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.register = register;\n\nfunction toOnEventName(name) {\n  return \"on\" + name.substr(0, 1).toUpperCase() + name.substr(1);\n}\n/**\n * Register event callback on api instance\n * @param  {Object} controller\n * @param  {Object} props React component `props`\n * @param  {Array} eventsList Events supported in API (specific for different objects)\n */\n\n\nfunction register(controller, props, eventsList) {\n  eventsList.forEach(function (eventName) {\n    var onEventName = toOnEventName(eventName);\n\n    if (props.hasOwnProperty(onEventName)) {\n      controller.events.add(eventName, props[onEventName]);\n    }\n  });\n}","map":{"version":3,"sources":["E:/aca/isa/nasa-isa/ISA-projekat/ISA-front/node_modules/yandex-map-react/lib/utils/eventsHandler.js"],"names":["Object","defineProperty","exports","value","register","toOnEventName","name","substr","toUpperCase","controller","props","eventsList","forEach","eventName","onEventName","hasOwnProperty","events","add"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;AAGAD,OAAO,CAACE,QAAR,GAAmBA,QAAnB;;AAGA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AACzB,SAAO,OAAOA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkBC,WAAlB,EAAP,GAAyCF,IAAI,CAACC,MAAL,CAAY,CAAZ,CAAhD;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASH,QAAT,CAAkBK,UAAlB,EAA8BC,KAA9B,EAAqCC,UAArC,EAAiD;AAC7CA,EAAAA,UAAU,CAACC,OAAX,CAAmB,UAAUC,SAAV,EAAqB;AACpC,QAAIC,WAAW,GAAGT,aAAa,CAACQ,SAAD,CAA/B;;AACA,QAAIH,KAAK,CAACK,cAAN,CAAqBD,WAArB,CAAJ,EAAuC;AACnCL,MAAAA,UAAU,CAACO,MAAX,CAAkBC,GAAlB,CAAsBJ,SAAtB,EAAiCH,KAAK,CAACI,WAAD,CAAtC;AACH;AACJ,GALD;AAMH","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.register = register;\n\n\nfunction toOnEventName(name) {\n    return \"on\" + name.substr(0, 1).toUpperCase() + name.substr(1);\n}\n\n/**\n * Register event callback on api instance\n * @param  {Object} controller\n * @param  {Object} props React component `props`\n * @param  {Array} eventsList Events supported in API (specific for different objects)\n */\nfunction register(controller, props, eventsList) {\n    eventsList.forEach(function (eventName) {\n        var onEventName = toOnEventName(eventName);\n        if (props.hasOwnProperty(onEventName)) {\n            controller.events.add(eventName, props[onEventName]);\n        }\n    });\n}"]},"metadata":{},"sourceType":"script"}