{"ast":null,"code":"var _jsxFileName = \"E:\\\\aca\\\\isa\\\\nasa-isa\\\\ISA-projekat\\\\ISA-front\\\\src\\\\Components\\\\Modal\\\\AddAppointmentModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport Axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\nimport HeadingAlert from \"../Alerts/UnsuccessfulAlert\";\nimport HeadingSuccessAlert from \"../Alerts/SuccessfulAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\n\nclass AddAppointmentModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedDate: new Date(),\n      dermatologist: '',\n      duration: '',\n      periods: [],\n      selectedPeriod: null,\n      price: 1,\n      hiddenSuccessAlert: true,\n      successHeader: \"\",\n      successMessage: \"\",\n      hiddenFailAlert: true,\n      failHeader: \"\",\n      failMessage: \"\"\n    };\n\n    this.handleCloseAlertSuccess = () => {\n      this.setState({\n        hiddenSuccessAlert: true\n      });\n    };\n\n    this.handleCloseAlertFail = () => {\n      this.setState({\n        hiddenFailAlert: true\n      });\n    };\n\n    this.handleAddAppointment = () => {\n      if (this.state.selectedPeriod != null) {\n        let appointmentDTO = {\n          dermatologistId: this.props.dermatologist,\n          phId: this.props.pharmacyId,\n          startDateTime: this.state.selectedPeriod.startDate,\n          endDateTime: this.state.selectedPeriod.endDate,\n          price: this.state.price\n        };\n        Axios.post(BASE_URL + \"/appointment/createDermatologistsExaminatoin\", appointmentDTO, {\n          validateStatus: () => true,\n          headers: {\n            Authorization: GetAuthorisation()\n          }\n        }).then(res => {\n          console.log(res.data);\n\n          if (res.status === 200) {\n            this.setState({\n              hiddenSuccessAlert: false,\n              hiddenFailAlert: true,\n              successHeader: \"Success\",\n              successMessage: \"You successfully add new appointment.\"\n            });\n            Axios.get(BASE_URL + \"/api/appointment/getFreePeriod\", {\n              params: {\n                dermatologistId: this.state.dermatologist,\n                pharmacyId: this.props.pharmacyId,\n                date: this.state.selectedDate,\n                duration: this.state.duration\n              },\n              headers: {\n                Authorization: GetAuthorisation()\n              }\n            }).then(res => {\n              this.setState({\n                periods: res.data,\n                selectedPeriod: res.data[0]\n              });\n              console.log(res.data);\n            }).catch(err => {\n              console.log(err);\n            });\n          } else if (res.status === 400) {\n            this.setState({\n              hiddenSuccessAlert: true,\n              hiddenFailAlert: false,\n              failHeader: \"Unsuccess\",\n              failMessage: \"Dermatologist has absence at this day\"\n            });\n          } else if (res.status === 500) {\n            this.setState({\n              hiddenSuccessAlert: true,\n              hiddenFailAlert: false,\n              failHeader: \"Unsuccess\",\n              failMessage: \"We have internal server problem. Please try later.\"\n            });\n          }\n        }).catch(err => {\n          this.setState({\n            hiddenSuccessAlert: true,\n            hiddenFailAlert: false,\n            failHeader: \"Unsuccess\",\n            failMessage: \"Please enter a valid data\"\n          });\n        });\n      } else {\n        this.setState({\n          hiddenSuccessAlert: true,\n          hiddenFailAlert: false,\n          failHeader: \"Unsuccess\",\n          failMessage: \"Please enter a valid data\"\n        });\n      }\n    };\n\n    this.handleCloseAppointment = () => {\n      this.setState({\n        selectedDate: new Date(),\n        duration: '',\n        periods: [],\n        selectedPeriod: '',\n        price: 1,\n        hiddenSuccessAlert: true,\n        hiddenFailAlert: true\n      });\n      this.props.onCloseModal();\n    };\n\n    this.handleDermatologistChange = event => {\n      this.setState({\n        dermatologist: event.target.value\n      });\n    };\n\n    this.handlePeriodsChange = event => {\n      this.setState({\n        selectedPeriod: this.state.periods[event.target.value]\n      });\n    };\n\n    this.handleDateChange = date => {\n      this.setState({\n        selectedDate: date,\n        selectedPeriod: null,\n        periods: [],\n        duration: 0\n      });\n    };\n\n    this.handlePriceChange = event => {\n      if (event.target.value < 1) {\n        this.setState({\n          price: 1\n        });\n      } else {\n        this.setState({\n          price: event.target.value\n        });\n      }\n    };\n\n    this.convertDate = str => {\n      str = str.toString();\n      let parts = str.split(\" \");\n      let months = {\n        Jan: \"01\",\n        Feb: \"02\",\n        Mar: \"03\",\n        Apr: \"04\",\n        May: \"05\",\n        Jun: \"06\",\n        Jul: \"07\",\n        Aug: \"08\",\n        Sep: \"09\",\n        Oct: \"10\",\n        Nov: \"11\",\n        Dec: \"12\"\n      };\n      return months[parts[1]] + \"/\" + parts[2] + \"/\" + parts[3];\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        price: 1\n      });\n    };\n\n    this.handleSelectDurationChange = event => {\n      this.setState({\n        duration: event.target.value\n      });\n      let paramsAAA = {\n        dermatologistId: this.props.dermatologistId,\n        phId: this.props.pharmacyId,\n        date: this.state.selectedDate,\n        duration: event.target.value\n      };\n      console.log(`Bearer ${localStorage.getItem(\"keyToken\")}`);\n      console.log(paramsAAA);\n\n      if (event.target.value >= 10 && event.target.value <= 60) {\n        Axios.post(API_URL + \"/appointment/generateSuggestionsForTimePeriod\", paramsAAA, {\n          headers: {\n            Authorization: GetAuthorisation()\n          }\n        }).then(res => {\n          this.setState({\n            periods: res.data\n          });\n          console.log(res.data);\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      onCloseModal: this.handleCloseModal,\n      show: this.props.show,\n      size: \"md\",\n      dialogClassName: \"modal-80w-100h\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          style: {\n            marginLeft: '28%'\n          },\n          id: \"contained-modal-title-vcenter\",\n          children: this.props.header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(HeadingSuccessAlert, {\n          hidden: this.state.hiddenSuccessAlert,\n          header: this.state.successHeader,\n          message: this.state.successMessage,\n          handleCloseAlert: this.handleCloseAlertSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HeadingAlert, {\n          hidden: this.state.hiddenFailAlert,\n          header: this.state.failHeader,\n          message: this.state.failMessage,\n          handleCloseAlert: this.handleCloseAlertFail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"control-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                style: ({\n                  width: '100%'\n                }, {\n                  marginLeft: '7%'\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Select date:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                      className: \"form-control\",\n                      style: {\n                        width: \"18em\"\n                      },\n                      minDate: this.state.selectedDate,\n                      onChange: date => this.handleDateChange(date),\n                      selected: this.state.selectedDate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Select duration:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      placeholder: \"Duration\",\n                      className: \"form-control\",\n                      style: {\n                        width: \"15.8em\"\n                      },\n                      type: \"number\",\n                      min: \"10\",\n                      max: \"60\",\n                      onChange: this.handleSelectDurationChange,\n                      value: this.state.duration\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Select period:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      onChange: this.handlePeriodsChange,\n                      className: \"form-control\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \" \"\n                      }, \"1\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 123\n                      }, this), this.state.periods.map((period, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: index,\n                        children: [new Date(period.startDate).toLocaleTimeString(), \" - \", new Date(period.endDate).toLocaleTimeString()]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 200\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Price:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      placeholder: \"Price\",\n                      className: \"form-control\",\n                      style: {\n                        width: \"15.8em\"\n                      },\n                      type: \"number\",\n                      min: \"1\",\n                      onChange: this.handlePriceChange,\n                      value: this.state.price\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group text-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mt-3\",\n                  onClick: () => this.handleAddAppointment(),\n                  children: \"Add appointment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.handleCloseAppointment(),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddAppointmentModal;","map":{"version":3,"sources":["E:/aca/isa/nasa-isa/ISA-projekat/ISA-front/src/Components/Modal/AddAppointmentModal.js"],"names":["React","Component","Button","Modal","Axios","DatePicker","GetAuthorisation","HeadingAlert","HeadingSuccessAlert","API_URL","AddAppointmentModal","state","selectedDate","Date","dermatologist","duration","periods","selectedPeriod","price","hiddenSuccessAlert","successHeader","successMessage","hiddenFailAlert","failHeader","failMessage","handleCloseAlertSuccess","setState","handleCloseAlertFail","handleAddAppointment","appointmentDTO","dermatologistId","props","phId","pharmacyId","startDateTime","startDate","endDateTime","endDate","post","BASE_URL","validateStatus","headers","Authorization","then","res","console","log","data","status","get","params","date","catch","err","handleCloseAppointment","onCloseModal","handleDermatologistChange","event","target","value","handlePeriodsChange","handleDateChange","handlePriceChange","convertDate","str","toString","parts","split","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","handleCloseModal","handleSelectDurationChange","paramsAAA","localStorage","getItem","render","show","marginLeft","header","width","map","period","index","toLocaleTimeString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nimport HeadingAlert from \"../Alerts/UnsuccessfulAlert\"\r\nimport HeadingSuccessAlert from \"../Alerts/SuccessfulAlert\"\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass AddAppointmentModal extends Component {\r\n    state = {\r\n        selectedDate:new Date(),\r\n        dermatologist:'',\r\n        duration:'',\r\n        periods:[],\r\n        selectedPeriod: null,\r\n        price:1,\r\n        hiddenSuccessAlert: true,\r\n\t\tsuccessHeader: \"\",\r\n\t\tsuccessMessage: \"\",\r\n\t\thiddenFailAlert: true,\r\n\t\tfailHeader: \"\",\r\n\t\tfailMessage: \"\",\r\n\r\n    }\r\n\r\n\r\n    handleCloseAlertSuccess = () => {\r\n\t\tthis.setState({ hiddenSuccessAlert: true });\r\n    };\r\n    \r\n    handleCloseAlertFail = () => {\r\n\t\tthis.setState({ hiddenFailAlert: true });\r\n\t};\r\n\r\n    handleAddAppointment = () => {\r\n        \r\n       if(this.state.selectedPeriod!=null){\r\n            let appointmentDTO = {\r\n                dermatologistId : this.props.dermatologist,\r\n                phId: this.props.pharmacyId, \r\n                startDateTime: this.state.selectedPeriod.startDate, \r\n                endDateTime:this.state.selectedPeriod.endDate,\r\n                price: this.state.price, \r\n                \r\n            };\r\n\r\n        Axios\r\n        .post(BASE_URL + \"/appointment/createDermatologistsExaminatoin\", appointmentDTO, {\r\n            validateStatus: () => true,\r\n            headers: { Authorization:  GetAuthorisation() },\r\n        }).then((res) =>{\r\n            console.log(res.data);\r\n            if (res.status === 200) {\r\n                this.setState({\r\n                    hiddenSuccessAlert: false,\r\n                    hiddenFailAlert:true,\r\n                    successHeader: \"Success\",\r\n                    successMessage: \"You successfully add new appointment.\",\r\n                })\r\n                Axios.get(BASE_URL + \"/api/appointment/getFreePeriod\", {\r\n                    params:{\r\n                        dermatologistId: this.state.dermatologist,\r\n                        pharmacyId:this.props.pharmacyId,\r\n                        date: this.state.selectedDate,\r\n                        duration: this.state.duration,\r\n                    },\r\n                    headers: { Authorization:  GetAuthorisation() },\r\n                }).then((res) => {\r\n                        this.setState({ periods: res.data, selectedPeriod:res.data[0]\r\n                        });\r\n                        console.log(res.data);\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                    });\r\n            }else if(res.status===400){\r\n                this.setState({ \r\n                    hiddenSuccessAlert: true,\r\n                    hiddenFailAlert: false, \r\n                    failHeader: \"Unsuccess\", \r\n                    failMessage: \"Dermatologist has absence at this day\"\r\n                });\r\n                \r\n            }else if(res.status===500){\r\n                this.setState({ \r\n                    hiddenSuccessAlert: true,\r\n                    hiddenFailAlert: false, \r\n                    failHeader: \"Unsuccess\", \r\n                    failMessage: \"We have internal server problem. Please try later.\"\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            this.setState({ \r\n                hiddenSuccessAlert: true,\r\n                hiddenFailAlert: false, \r\n                failHeader: \"Unsuccess\", \r\n                failMessage: \"Please enter a valid data\"\r\n            });\r\n        });       \r\n        }\r\n        else{\r\n            this.setState({ \r\n                hiddenSuccessAlert: true,\r\n                hiddenFailAlert: false, \r\n                failHeader: \"Unsuccess\", \r\n                failMessage: \"Please enter a valid data\"\r\n            });        } \r\n    }\r\n\r\n    handleCloseAppointment= () => {\r\n        this.setState({\r\n            selectedDate:new Date(),\r\n            duration:'',\r\n            periods:[],\r\n            selectedPeriod:'',\r\n            price:1,\r\n            hiddenSuccessAlert: true,\r\n            hiddenFailAlert: true, \r\n        });\r\n        this.props.onCloseModal();\r\n    }\r\n\r\n    handleDermatologistChange = (event) => {\r\n        this.setState({ dermatologist: event.target.value });\r\n    };\r\n\r\n    handlePeriodsChange = (event) => {\r\n        this.setState({ selectedPeriod: this.state.periods[event.target.value] });\r\n    }\r\n\r\n    handleDateChange = (date) => {\r\n        this.setState({\r\n            selectedDate:date,\r\n            selectedPeriod:null,\r\n            periods:[],\r\n            duration:0,\r\n        });\r\n\r\n    }\r\n    \r\n    \r\n    handlePriceChange = (event) =>{\r\n\r\n        if(event.target.value<1){\r\n            this.setState({\r\n                price:1,\r\n            });\r\n        }else{\r\n            this.setState({\r\n                price:event.target.value,\r\n            });\r\n        }\r\n    }\r\n\r\n    convertDate = str => {\r\n        str = str.toString();\r\n        let parts = str.split(\" \");\r\n        let months = {\r\n          Jan: \"01\",\r\n          Feb: \"02\",\r\n          Mar: \"03\",\r\n          Apr: \"04\",\r\n          May: \"05\",\r\n          Jun: \"06\",\r\n          Jul: \"07\",\r\n          Aug: \"08\",\r\n          Sep: \"09\",\r\n          Oct: \"10\",\r\n          Nov: \"11\",\r\n          Dec: \"12\"\r\n        };\r\n        return months[parts[1]] + \"/\" + parts[2] + \"/\" + parts[3];\r\n      };\r\n\r\n    handleCloseModal = () => {\r\n        this.setState({\r\n            price:1,\r\n        });    \r\n    }\r\n\r\n    handleSelectDurationChange = (event) => {\r\n        this.setState({\r\n            duration:event.target.value,\r\n        });\r\n\r\n        let paramsAAA = {\r\n            dermatologistId: this.props.dermatologistId,\r\n            phId:this.props.pharmacyId,\r\n            date: this.state.selectedDate,\r\n            duration: event.target.value\r\n        };\r\n        console.log(`Bearer ${localStorage.getItem(\"keyToken\")}`);\r\n        console.log(paramsAAA);\r\n        if(event.target.value>=10 && event.target.value<=60){\r\n            Axios.post(API_URL + \"/appointment/generateSuggestionsForTimePeriod\",paramsAAA, {\r\n                headers: { Authorization:  GetAuthorisation() },\r\n            }).then((res) => {\r\n                    this.setState({ periods: res.data });\r\n                    console.log(res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <Modal\r\n                onCloseModal={this.handleCloseModal}\r\n                show = {this.props.show}\r\n                size = \"md\"\r\n                dialogClassName=\"modal-80w-100h\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n                <Modal.Header >\r\n                    <Modal.Title style={{marginLeft:'28%'}} id=\"contained-modal-title-vcenter\">\r\n                        {this.props.header}\r\n                    </Modal.Title>\r\n\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <HeadingSuccessAlert\r\n                            hidden={this.state.hiddenSuccessAlert}\r\n                            header={this.state.successHeader}\r\n                            message={this.state.successMessage}\r\n                            handleCloseAlert={this.handleCloseAlertSuccess}\r\n                        />\r\n                        <HeadingAlert\r\n                                hidden={this.state.hiddenFailAlert}\r\n                                header={this.state.failHeader}\r\n                                message={this.state.failMessage}\r\n                                handleCloseAlert={this.handleCloseAlertFail}\r\n                        />\r\n                    <div >\r\n                        <form >\r\n                            <div  className=\"control-group\" >\r\n                                        <table style={{width:'100%'},{marginLeft:'7%'}}>\r\n                                            \r\n                                            <tr>\r\n                                                <td>\r\n                                                    <label>Select date:</label>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <DatePicker className=\"form-control\"  style={{width: \"18em\"}} minDate={this.state.selectedDate} onChange={date => this.handleDateChange(date)} selected={this.state.selectedDate}/>\r\n                                                    \r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <label>Select duration:</label>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <input placeholder=\"Duration\" className=\"form-control\" style={{width: \"15.8em\"}} type=\"number\" min=\"10\" max=\"60\" onChange={this.handleSelectDurationChange} value={this.state.duration} />\r\n                                                </td>\r\n                                            </tr>\r\n\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <label>Select period:</label>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <select onChange={this.handlePeriodsChange} className=\"form-control\" ><option key=\"1\" value=\"\"> </option>{this.state.periods.map((period,index) => <option key={index} value={index}>{new Date(period.startDate).toLocaleTimeString()} - {new Date(period.endDate).toLocaleTimeString()}</option>)}</select>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <label>Price:</label>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <input placeholder=\"Price\" className=\"form-control\" style={{width: \"15.8em\"}} type=\"number\" min=\"1\" onChange={this.handlePriceChange} value={this.state.price} />\r\n                                                </td>\r\n                                            </tr>\r\n                                        </table>\r\n                                        <div  className=\"form-group text-center\">\r\n                                            <Button className=\"mt-3\"  onClick = {() => this.handleAddAppointment()} >Add appointment</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => this.handleCloseAppointment()}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddAppointmentModal;"]},"metadata":{},"sourceType":"module"}