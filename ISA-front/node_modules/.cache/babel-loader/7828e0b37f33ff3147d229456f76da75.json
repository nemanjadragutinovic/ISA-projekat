{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stefan\\\\Desktop\\\\ISA-projekat\\\\ISA-projekat\\\\ISA-front\\\\src\\\\Pages\\\\PharmaciesAppointmentStartPage.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport Header from '../Components/Header';\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\";\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\n\nclass PharmaciesAppointmentStartPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pharmacyId: \"\",\n      appointments: [],\n      hiddenSuccessfulAlert: true,\n      successfulHeader: \"\",\n      successfulMessage: \"\",\n      hiddenUnsuccessfulAlert: true,\n      UnsuccessfulHeader: \"\",\n      UnsuccessfulMessage: \"\"\n    };\n\n    this.hasRole = requestRole => {\n      let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\n      if (currentRoles === null) return false;\n\n      for (let currentRole of currentRoles) {\n        if (currentRole === requestRole) return true;\n      }\n\n      return false;\n    };\n\n    this.handleCloseSuccessfulAlert = () => {\n      this.setState({\n        hiddenSuccessfulAlert: true\n      });\n    };\n\n    this.handleCloseUnsuccessfulAlert = () => {\n      this.setState({\n        hiddenUnsuccessfulAlert: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\n      this.props.history.push('/login');\n    }\n\n    Axios.get(API_URL + \"/appointment/dermatologist\", {\n      validateStatus: () => true,\n      headers: {\n        Authorization: GetAuthorisation()\n      }\n    }).then(res => {\n      if (res.status === 401) {\n        this.props.history.push('/login');\n      } else {\n        this.setState({\n          appointments: res.data\n        });\n        console.log(res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          hidden: this.state.appointments.length === 0,\n          className: \"text-center  mt-3  \",\n          children: \"Your history appointments!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          hidden: this.state.appointments.length !== 0,\n          className: \"text-center  mt-3 text-danger\",\n          children: \"You don't have future appointments!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(SuccessfulAlert, {\n          hidden: this.state.hiddenSuccessfulAlert,\n          header: this.state.successfulHeader,\n          message: this.state.successfulMessage,\n          handleCloseAlert: this.handleCloseSuccessfulAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(UnsuccessfulAlert, {\n          hidden: this.state.hiddenUnsuccessfulAlert,\n          header: this.state.UnsuccessfulHeader,\n          message: this.state.UnsuccessfulMessage,\n          handleCloseAlert: this.handleCloseUnsuccessfulAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PharmaciesAppointmentStartPage;","map":{"version":3,"sources":["C:/Users/stefan/Desktop/ISA-projekat/ISA-projekat/ISA-front/src/Pages/PharmaciesAppointmentStartPage.js"],"names":["React","Component","Axios","Header","GetAuthorisation","DermatologistAppointmentPicture","UnsuccessfulAlert","SuccessfulAlert","NavLink","Redirect","API_URL","PharmaciesAppointmentStartPage","constructor","props","state","pharmacyId","appointments","hiddenSuccessfulAlert","successfulHeader","successfulMessage","hiddenUnsuccessfulAlert","UnsuccessfulHeader","UnsuccessfulMessage","hasRole","requestRole","currentRoles","JSON","parse","localStorage","getItem","currentRole","handleCloseSuccessfulAlert","setState","handleCloseUnsuccessfulAlert","componentDidMount","history","push","get","validateStatus","headers","Authorization","then","res","status","data","console","log","catch","err","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass PharmaciesAppointmentStartPage extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        pharmacyId: \"\",\r\n        appointments : [],\r\n        hiddenSuccessfulAlert: true,\r\n        successfulHeader: \"\",\r\n        successfulMessage: \"\",\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n\r\n\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n    \r\n    Axios.get(API_URL + \"/appointment/dermatologist\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\r\n    \r\n \r\n   \r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n         <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n\r\n       \r\n\r\n\r\n         <h1 hidden={this.state.appointments.length === 0} className=\"text-center  mt-3  \" >Your history appointments!</h1>\r\n         <h1 hidden={this.state.appointments.length !== 0} className=\"text-center  mt-3 text-danger\"  >You don't have future appointments!</h1>\r\n\r\n\r\n\r\n         <SuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\theader={this.state.successfulHeader}\r\n\t\t\t\tmessage={this.state.successfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n\t\t/>\r\n\t\t<UnsuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t/>\r\n\r\n        \r\n   \r\n        \r\n\r\n\r\n\r\n          \r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PharmaciesAppointmentStartPage;"]},"metadata":{},"sourceType":"module"}