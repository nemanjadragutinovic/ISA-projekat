{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\faks\\\\4.god 1.semestar\\\\ISA\\\\ISA Projekat\\\\ISA-projekat\\\\ISA-front\\\\src\\\\Pages\\\\Appointment\\\\DermatologistScheduleAppointment.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../../Components/Header\";\nimport Axios from \"axios\";\nimport ModalDialog from \"../../Components/ModalDialog\";\nimport GetAuthorisation from '../../Funciton/GetAuthorisation';\nimport { withRouter } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\n\nclass DermatologistScheduleAppointment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: \"\",\n      appointments: [],\n      openModalSuccess: false,\n      redirect: false,\n      redirectUrl: ''\n    };\n\n    this.handleAppointmentClick = appointmentId => {\n      Axios.post(API_URL + \"/appointment/schedule-appointment\", {\n        appointmentId: appointmentId,\n        patientId: this.props.match.params.id\n      }, {\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        this.setState({\n          openModalSuccess: true\n        });\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n        alert(\"Appointment can't be scheduled\");\n      });\n    };\n\n    this.handleModalSuccessClose = () => {\n      this.setState({\n        openModalSuccess: false,\n        redirect: true,\n        redirectUrl: \"/patient-profile/\" + this.state.id\n      });\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.setState({\n      id: id\n    });\n    Axios.get(API_URL + \"/appointment/dermatologist-created-appointment\", {\n      validateStatus: () => true,\n      headers: {\n        Authorization: GetAuthorisation()\n      }\n    }).then(res => {\n      if (res.status === 401) {\n        this.setState({\n          redirect: true,\n          redirectUrl: \"/unauthorized\"\n        });\n      } else if (res.status == 200) {\n        this.setState({\n          appointments: res.data\n        });\n        console.log(res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    if (this.state.redirect) return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: this.state.redirectUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 35\n    }, this);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          marginTop: \"10%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \" text-center mb-0 mt-2 text-uppercase\",\n          children: \"Schedule Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0 mt-5\",\n          children: \"Click on appointment to schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover\",\n          style: {\n            width: \"70%\",\n            marginTop: \"3rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n              id: appointment.Id,\n              onClick: () => this.handleAppointmentClick(appointment.Id),\n              className: \"rounded\",\n              style: {\n                cursor: \"pointer\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                width: \"190em\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Date: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 12\n                  }, this), \" \", new Date(appointment.EntityDTO.startDateTime).toLocaleDateString(\"en-US\", {\n                    day: \"2-digit\",\n                    month: \"2-digit\",\n                    year: \"numeric\"\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Time from: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 12\n                  }, this), \" \", new Date(appointment.EntityDTO.startDateTime).toLocaleTimeString(\"en-US\", {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Time to: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 12\n                  }, this), \" \", new Date(appointment.EntityDTO.endDateTime).toLocaleTimeString(\"en-US\", {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Price: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 12\n                  }, this), \" \", appointment.EntityDTO.price, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"din\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 10\n              }, this)]\n            }, appointment.Id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalDialog, {\n        show: this.state.openModalSuccess,\n        onCloseModal: this.handleModalSuccessClose,\n        header: \"Successfully scheduled appointment for patient\",\n        text: \"Start examination for scheduled appointment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(DermatologistScheduleAppointment);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/faks/4.god 1.semestar/ISA/ISA Projekat/ISA-projekat/ISA-front/src/Pages/Appointment/DermatologistScheduleAppointment.js"],"names":["React","Component","Header","Axios","ModalDialog","GetAuthorisation","withRouter","Redirect","API_URL","DermatologistScheduleAppointment","state","id","appointments","openModalSuccess","redirect","redirectUrl","handleAppointmentClick","appointmentId","post","patientId","props","match","params","headers","Authorization","then","res","setState","console","log","data","catch","err","alert","handleModalSuccessClose","componentDidMount","get","validateStatus","status","render","marginTop","width","map","appointment","Id","cursor","Date","EntityDTO","startDateTime","toLocaleDateString","day","month","year","toLocaleTimeString","hour","minute","endDateTime","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AACA,MAAMC,OAAO,GAAC,uBAAd;;AAEA,MAAMC,gCAAN,SAA+CR,SAA/C,CAAyD;AAAA;AAAA;AAAA,SACxDS,KADwD,GAChD;AACPC,MAAAA,EAAE,EAAE,EADG;AAEPC,MAAAA,YAAY,EAAE,EAFP;AAGPC,MAAAA,gBAAgB,EAAE,KAHX;AAIPC,MAAAA,QAAQ,EAAE,KAJH;AAKDC,MAAAA,WAAW,EAAE;AALZ,KADgD;;AAAA,SAgCxDC,sBAhCwD,GAgC9BC,aAAD,IAAmB;AAC3Cd,MAAAA,KAAK,CAACe,IAAN,CAAWV,OAAO,GAAG,mCAArB,EACC;AAAES,QAAAA,aAAa,EAAEA,aAAjB;AAAgCE,QAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBX;AAAnE,OADD,EAEC;AAAEY,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEnB,gBAAgB;AAAjC;AAAX,OAFD,EAIEoB,IAJF,CAIQC,GAAD,IAAS;AACd,aAAKC,QAAL,CAAc;AAAEd,UAAAA,gBAAgB,EAAE;AAApB,SAAd;AACAe,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACA,OAPF,EAQEC,KARF,CAQSC,GAAD,IAAS;AACfJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAC,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACA,OAXF;AAYA,KA7CuD;;AAAA,SA+CxDC,uBA/CwD,GA+C9B,MAAM;AAC/B,WAAKP,QAAL,CAAc;AACbd,QAAAA,gBAAgB,EAAE,KADL;AAEbC,QAAAA,QAAQ,EAAE,IAFG;AAGbC,QAAAA,WAAW,EAAE,sBAAsB,KAAKL,KAAL,CAAWC;AAHjC,OAAd;AAKA,KArDuD;AAAA;;AASxDwB,EAAAA,iBAAiB,GAAG;AACnB,UAAMxB,EAAE,GAAG,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBX,EAAnC;AACA,SAAKgB,QAAL,CAAc;AACbhB,MAAAA,EAAE,EAACA;AADU,KAAd;AAIAR,IAAAA,KAAK,CAACiC,GAAN,CAAU5B,OAAO,GAAG,gDAApB,EAAsE;AAAE6B,MAAAA,cAAc,EAAE,MAAM,IAAxB;AAA8Bd,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEnB,gBAAgB;AAAjC;AAAvC,KAAtE,EACEoB,IADF,CACQC,GAAD,IAAS;AACd,UAAIA,GAAG,CAACY,MAAJ,KAAe,GAAnB,EAAwB;AACvB,aAAKX,QAAL,CAAc;AACbb,UAAAA,QAAQ,EAAE,IADG;AAEbC,UAAAA,WAAW,EAAE;AAFA,SAAd;AAIA,OALD,MAKO,IAAIW,GAAG,CAACY,MAAJ,IAAc,GAAlB,EAAuB;AAC7B,aAAKX,QAAL,CAAc;AAAEf,UAAAA,YAAY,EAAEc,GAAG,CAACI;AAApB,SAAd;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACA;AACD,KAXF,EAYEC,KAZF,CAYSC,GAAD,IAAS;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,KAdF;AAeA;;AAyBDO,EAAAA,MAAM,GAAG;AAER,QAAI,KAAK7B,KAAL,CAAWI,QAAf,EAAyB,oBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,MAAd;AAAe,MAAA,EAAE,EAAE,KAAKJ,KAAL,CAAWK;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAP;AAEzB,wBACC,QAAC,KAAD,CAAO,QAAP;AAAA,8BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAGC;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAAEyB,UAAAA,SAAS,EAAE;AAAb,SAAlC;AAAA,gCACC;AAAI,UAAA,SAAS,EAAC,uCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAGC;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,eAOC;AACC,UAAA,SAAS,EAAC,mBADX;AAEC,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,KAAT;AAAgBD,YAAAA,SAAS,EAAE;AAA3B,WAFR;AAAA,iCAIC;AAAA,sBACE,KAAK9B,KAAL,CAAWE,YAAX,CAAwB8B,GAAxB,CAA6BC,WAAD,iBAC5B;AACC,cAAA,EAAE,EAAEA,WAAW,CAACC,EADjB;AAGC,cAAA,OAAO,EAAE,MAAM,KAAK5B,sBAAL,CAA4B2B,WAAW,CAACC,EAAxC,CAHhB;AAIC,cAAA,SAAS,EAAC,SAJX;AAKC,cAAA,KAAK,EAAE;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eALR;AAAA,sCAOC;AAAI,gBAAA,KAAK,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,sBAPD,eASC;AAAA,wCACC;AAAA,0CACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,EACe,GADf,EAEE,IAAIC,IAAJ,CACAH,WAAW,CAACI,SAAZ,CAAsBC,aADtB,EAECC,kBAFD,CAEoB,OAFpB,EAE6B;AAC7BC,oBAAAA,GAAG,EAAE,SADwB;AAE7BC,oBAAAA,KAAK,EAAE,SAFsB;AAG7BC,oBAAAA,IAAI,EAAE;AAHuB,mBAF7B,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,eAWC;AAAA,0CACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,EACoB,GADpB,EAEE,IAAIN,IAAJ,CACAH,WAAW,CAACI,SAAZ,CAAsBC,aADtB,EAECK,kBAFD,CAEoB,OAFpB,EAE6B;AAC7BC,oBAAAA,IAAI,EAAE,SADuB;AAE7BC,oBAAAA,MAAM,EAAE;AAFqB,mBAF7B,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXD,eAoBC;AAAA,0CACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,EACkB,GADlB,EAEE,IAAIT,IAAJ,CACAH,WAAW,CAACI,SAAZ,CAAsBS,WADtB,EAECH,kBAFD,CAEoB,OAFpB,EAE6B;AAC7BC,oBAAAA,IAAI,EAAE,SADuB;AAE7BC,oBAAAA,MAAM,EAAE;AAFqB,mBAF7B,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBApBD,eA6BC;AAAA,0CACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,OACiBZ,WAAW,CAACI,SAAZ,CAAsBU,KADvC,oBAC8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,wBA7BD;AAAA;AAAA;AAAA;AAAA;AAAA,sBATD;AAAA,eAEMd,WAAW,CAACC,EAFlB;AAAA;AAAA;AAAA;AAAA,oBADA;AADF;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,eA+DC,QAAC,WAAD;AACC,QAAA,IAAI,EAAE,KAAKlC,KAAL,CAAWG,gBADlB;AAEC,QAAA,YAAY,EAAE,KAAKqB,uBAFpB;AAGC,QAAA,MAAM,EAAC,gDAHR;AAIC,QAAA,IAAI,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,cA/DD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAwEA;;AAnIuD;;AAsIzD,oBAAe5B,UAAU,CAACG,gCAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\r\nimport Header from \"../../Components/Header\";\r\nimport Axios from \"axios\";\r\nimport ModalDialog from \"../../Components/ModalDialog\";\r\nimport GetAuthorisation from '../../Funciton/GetAuthorisation';\r\nimport { withRouter } from \"react-router\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass DermatologistScheduleAppointment extends Component {\r\n\tstate = {\r\n\t\tid: \"\",\r\n\t\tappointments: [],\r\n\t\topenModalSuccess: false,\r\n\t\tredirect: false,\r\n        redirectUrl: ''\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst id = this.props.match.params.id;\r\n\t\tthis.setState({\r\n\t\t\tid:id\r\n\t\t});\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/dermatologist-created-appointment\", { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tredirect: true,\r\n\t\t\t\t\t\tredirectUrl: \"/unauthorized\"\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (res.status == 200) {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\thandleAppointmentClick = (appointmentId) => {\r\n\t\tAxios.post(API_URL + \"/appointment/schedule-appointment\",\r\n\t\t\t{ appointmentId: appointmentId, patientId: this.props.match.params.id },\r\n\t\t\t{ headers: { Authorization: GetAuthorisation() } }\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ openModalSuccess: true });\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\talert(\"Appointment can't be scheduled\");\r\n\t\t\t});\r\n\t};\r\n\r\n\thandleModalSuccessClose = () => {\r\n\t\tthis.setState({\r\n\t\t\topenModalSuccess: false,\r\n\t\t\tredirect: true,\r\n\t\t\tredirectUrl: \"/patient-profile/\" + this.state.id\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\r\n\t\tif (this.state.redirect) return <Redirect push to={this.state.redirectUrl} />;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Header />\r\n\r\n\t\t\t\t<div className=\"container\" style={{ marginTop: \"10%\" }}>\r\n\t\t\t\t\t<h3 className=\" text-center mb-0 mt-2 text-uppercase\">Schedule Appointment</h3>\r\n\r\n\t\t\t\t\t<h5 className=\"mb-0 mt-5\">\r\n\t\t\t\t\t\tClick on appointment to schedule\r\n\t\t\t\t\t</h5>\r\n\r\n\t\t\t\t\t<table\r\n\t\t\t\t\t\tclassName=\"table table-hover\"\r\n\t\t\t\t\t\tstyle={{ width: \"70%\", marginTop: \"3rem\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.appointments.map((appointment) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tkey={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.handleAppointmentClick(appointment.Id)}\r\n\t\t\t\t\t\t\t\t\tclassName=\"rounded\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<td width=\"190em\">\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(\r\n\t\t\t\t\t\t\t\t\t\t\t\tappointment.EntityDTO.startDateTime\r\n\t\t\t\t\t\t\t\t\t\t\t).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Time from: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(\r\n\t\t\t\t\t\t\t\t\t\t\t\tappointment.EntityDTO.startDateTime\r\n\t\t\t\t\t\t\t\t\t\t\t).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Time to: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(\r\n\t\t\t\t\t\t\t\t\t\t\t\tappointment.EntityDTO.endDateTime\r\n\t\t\t\t\t\t\t\t\t\t\t).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price: </b> {appointment.EntityDTO.price} <b>din</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ModalDialog\r\n\t\t\t\t\tshow={this.state.openModalSuccess}\r\n\t\t\t\t\tonCloseModal={this.handleModalSuccessClose}\r\n\t\t\t\t\theader=\"Successfully scheduled appointment for patient\"\r\n\t\t\t\t\ttext=\"Start examination for scheduled appointment.\"\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(DermatologistScheduleAppointment);\r\n"]},"metadata":{},"sourceType":"module"}