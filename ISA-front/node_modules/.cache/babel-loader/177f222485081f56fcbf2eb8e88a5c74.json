{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\faks\\\\4.god 1.semestar\\\\ISA\\\\ISA Projekat\\\\ISA-projekat\\\\ISA-front\\\\src\\\\Components\\\\Examination\\\\Calendar.js\";\nimport React, { Component } from \"react\";\nimport Header from './Header';\nimport TopBar from \"./TopBar\"; //import { BASE_URL } from \"../../constants.js\";\n\nimport Axios from \"axios\"; //import getAuthHeader from \"../../GetHeader\";\n\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar'; //import moment from 'moment'\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css'; //import EventDetailsModal from \"../../components/EventDetailsModal\";\n\nimport { Redirect } from \"react-router-dom\";\nimport ModalDialog from \"../../components/ModalDialog\"; //const localizer = momentLocalizer(moment)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CalendarPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pharmacies: [],\n      events: [],\n      appointments: [],\n      openModalInfo: false,\n      name: \"\",\n      surname: \"\",\n      startDateTime: \"\",\n      endDateTime: \"\",\n      price: \"\",\n      pharmacy: {},\n      pharmacyName: \"\",\n      redirect: false,\n      redirectUrl: '',\n      id: '',\n      openModalSuccess: false,\n      appointmentStatus: \"\"\n    };\n\n    this.hasRole = reqRole => {\n      let roles = JSON.parse(localStorage.getItem(\"keyRole\"));\n      if (roles === null) return false;\n      if (reqRole === \"*\") return true;\n\n      for (let role of roles) {\n        if (role === reqRole) return true;\n      }\n\n      return false;\n    };\n\n    this.handleModalInfoClose = () => {\n      this.setState({\n        openModalInfo: false\n      });\n    };\n\n    this.handleEventClick = appointment => {\n      console.log(appointment);\n      let name = appointment.EntityDTO.patient == undefined || null ? \"\" : appointment.EntityDTO.patient.EntityDTO.name;\n      let surname = appointment.EntityDTO.patient == undefined || null ? \"\" : appointment.EntityDTO.patient.EntityDTO.surname;\n      this.setState({\n        name: name,\n        surname: surname,\n        startDateTime: appointment.EntityDTO.startDateTime,\n        endDateTime: appointment.EntityDTO.endDateTime,\n        price: appointment.EntityDTO.price,\n        openModalInfo: true,\n        id: appointment.Id,\n        appointmentStatus: appointment.EntityDTO.appointmentStatus\n      });\n    };\n\n    this.generateEventTitle = appointment => {\n      let name = appointment.EntityDTO.patient == null ? \"\" : appointment.EntityDTO.patient.EntityDTO.name;\n      let surname = appointment.EntityDTO.patient == null ? \"\" : appointment.EntityDTO.patient.EntityDTO.surname;\n      if (name === \"\" && surname === \"\") return \"Free appointment\";else return name + \" \" + surname;\n    };\n\n    this.mapAppointmentsToEvents = () => {\n      this.setState({\n        events: this.state.appointments.map(appointment => ({\n          start: new Date(appointment.EntityDTO.startDateTime),\n          end: new Date(appointment.EntityDTO.endDateTime),\n          title: this.generateEventTitle(appointment),\n          allDay: false,\n          resource: appointment\n        }))\n      });\n      console.log(this.state.events);\n    };\n\n    this.fetchDermatologistCalendar = () => {\n      Axios.get(BASE_URL + \"/api/users/dermatologist/pharmacies\", {\n        validateStatus: () => true,\n        headers: {\n          Authorization: getAuthHeader()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.setState({\n            redirect: true,\n            redirectUrl: \"/unauthorized\"\n          });\n        } else {\n          this.setState({\n            pharmacies: res.data,\n            pharmacy: res.data[0],\n            pharmacyName: res.data[0].EntityDTO.name\n          });\n          console.log(res.data);\n          Axios.get(BASE_URL + \"/api/appointment/dermatologist/calendar-for-pharmacy/\" + this.state.pharmacy.Id, {\n            validateStatus: () => true,\n            headers: {\n              Authorization: getAuthHeader()\n            }\n          }).then(res => {\n            this.setState({\n              appointments: res.data\n            });\n            console.log(res.data);\n            this.mapAppointmentsToEvents();\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.fetchFarmacistCalendar = () => {\n      Axios.get(BASE_URL + \"/api/users/pharmacist/pharmacy\", {\n        validateStatus: () => true,\n        headers: {\n          Authorization: getAuthHeader()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.setState({\n            redirect: true,\n            redirectUrl: \"/unauthorized\"\n          });\n        } else {\n          this.setState({\n            pharmacy: res.data,\n            pharmacyName: res.data.EntityDTO.name\n          });\n          console.log(res.data);\n          Axios.get(BASE_URL + \"/api/appointment/pharmacist/calendar/\" + this.state.pharmacy.Id, {\n            validateStatus: () => true,\n            headers: {\n              Authorization: getAuthHeader()\n            }\n          }).then(res => {\n            this.setState({\n              appointments: res.data\n            });\n            console.log(res.data);\n            this.mapAppointmentsToEvents();\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handlePharmacyChange = event => {\n      this.setState({\n        pharmacy: event.target.value\n      }, () => {\n        Axios.get(BASE_URL + \"/api/appointment/dermatologist/calendar-for-pharmacy/\" + this.state.pharmacy, {\n          validateStatus: () => true,\n          headers: {\n            Authorization: getAuthHeader()\n          }\n        }).then(res => {\n          this.setState({\n            appointments: res.data\n          });\n          console.log(res.data);\n          this.mapAppointmentsToEvents();\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    };\n\n    this.handleExamine = () => {\n      this.setState({\n        redirect: true,\n        redirectUrl: \"/treatment-report/\" + this.state.id\n      });\n    };\n\n    this.handleDidNotShowUp = () => {\n      Axios.put(BASE_URL + \"/api/appointment/did-not-show-up\", {\n        id: this.state.id\n      }, {\n        headers: {\n          Authorization: getAuthHeader()\n        }\n      }).then(res => {\n        this.handleModalInfoClose();\n        if (this.hasRole(\"ROLE_DERMATHOLOGIST\")) this.fetchDermatologistCalendar();else this.fetchFarmacistCalendar();\n        console.log(res.data);\n        this.setState({\n          openModalSuccess: true\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleModalSuccessClose = () => {\n      this.setState({\n        openModalSuccess: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.hasRole(\"ROLE_DERMATHOLOGIST\")) this.fetchDermatologistCalendar();else this.fetchFarmacistCalendar();\n  }\n\n  render() {\n    if (this.state.redirect) return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: this.state.redirectUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 41\n    }, this);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          marginTop: \"10%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center mb-5 mt-2 text-uppercase\",\n          children: \"Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          hidden: !this.hasRole(\"ROLE_DERMATHOLOGIST\"),\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-left mt-2\",\n            children: \"Working calendar for selected pharmacy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-5 mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: this.handlePharmacyChange,\n              className: \"form-control\",\n              children: this.state.pharmacies.map(pharmacy => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pharmacy.Id,\n                children: [\"Dr \", pharmacy.EntityDTO.name]\n              }, pharmacy.Id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 74\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          hidden: !this.hasRole(\"ROLE_PHARMACIST\"),\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-left mb-5 mt-2\",\n            children: \"Working calendar for \" + this.state.pharmacyName + \" pharmacy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          selectable: true,\n          onSelectEvent: event => this.handleEventClick(event.resource),\n          popup: true,\n          defaultView: Views.DAY,\n          localizer: localizer,\n          events: this.state.events,\n          startAccessor: \"start\",\n          endAccessor: \"end\",\n          style: {\n            height: 500\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EventDetailsModal, {\n        header: \"Appointment information\",\n        show: this.state.openModalInfo,\n        onCloseModal: this.handleModalInfoClose,\n        name: this.state.name,\n        surname: this.state.surname,\n        startDateTime: this.state.startDateTime,\n        endDateTime: this.state.endDateTime,\n        price: this.state.price,\n        handleExamine: this.handleExamine,\n        handleDidNotShowUp: this.handleDidNotShowUp,\n        appointmentStatus: this.state.appointmentStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalDialog, {\n        show: this.state.openModalSuccess,\n        onCloseModal: this.handleModalSuccessClose,\n        header: \"Successfully added penalty to patient\",\n        text: \"You can start examination for another patient.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CalendarPage;","map":{"version":3,"sources":["C:/Users/PC/Desktop/faks/4.god 1.semestar/ISA/ISA Projekat/ISA-projekat/ISA-front/src/Components/Examination/Calendar.js"],"names":["React","Component","Header","TopBar","Axios","Calendar","momentLocalizer","Views","Redirect","ModalDialog","CalendarPage","state","pharmacies","events","appointments","openModalInfo","name","surname","startDateTime","endDateTime","price","pharmacy","pharmacyName","redirect","redirectUrl","id","openModalSuccess","appointmentStatus","hasRole","reqRole","roles","JSON","parse","localStorage","getItem","role","handleModalInfoClose","setState","handleEventClick","appointment","console","log","EntityDTO","patient","undefined","Id","generateEventTitle","mapAppointmentsToEvents","map","start","Date","end","title","allDay","resource","fetchDermatologistCalendar","get","BASE_URL","validateStatus","headers","Authorization","getAuthHeader","then","res","status","data","catch","err","fetchFarmacistCalendar","handlePharmacyChange","event","target","value","handleExamine","handleDidNotShowUp","put","handleModalSuccessClose","componentDidMount","render","marginTop","DAY","localizer","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Header from './Header';\r\nimport TopBar from \"./TopBar\";\r\n//import { BASE_URL } from \"../../constants.js\";\r\nimport Axios from \"axios\";\r\n//import getAuthHeader from \"../../GetHeader\";\r\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar'\r\n//import moment from 'moment'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n//import EventDetailsModal from \"../../components/EventDetailsModal\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ModalDialog from \"../../components/ModalDialog\";\r\n\r\n//const localizer = momentLocalizer(moment)\r\n\r\nclass CalendarPage extends Component {\r\n    state = {\r\n        pharmacies: [],\r\n        events: [],\r\n        appointments: [],\r\n        openModalInfo: false,\r\n        name: \"\",\r\n        surname: \"\",\r\n        startDateTime: \"\",\r\n        endDateTime: \"\",\r\n        price: \"\",\r\n        pharmacy: {},\r\n        pharmacyName : \"\",\r\n        redirect: false,\r\n        redirectUrl: '',\r\n        id: '',\r\n        openModalSuccess: false,\r\n        appointmentStatus: \"\"\r\n    };\r\n\r\n    hasRole = (reqRole) => {\r\n\t\tlet roles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n\t\tif (roles === null) return false;\r\n\r\n\t\tif (reqRole === \"*\") return true;\r\n\r\n\t\tfor (let role of roles) {\r\n\t\t\tif (role === reqRole) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n    handleModalInfoClose = () => {\r\n        this.setState({ openModalInfo: false });\r\n    };\r\n\r\n    handleEventClick = (appointment) => {\r\n        console.log(appointment);\r\n        let name = appointment.EntityDTO.patient == undefined || null ? \"\" : appointment.EntityDTO.patient.EntityDTO.name;\r\n        let surname = appointment.EntityDTO.patient == undefined || null ? \"\" : appointment.EntityDTO.patient.EntityDTO.surname;\r\n\r\n        this.setState({\r\n            name: name,\r\n            surname: surname,\r\n            startDateTime: appointment.EntityDTO.startDateTime,\r\n            endDateTime: appointment.EntityDTO.endDateTime,\r\n            price: appointment.EntityDTO.price,\r\n            openModalInfo: true,\r\n            id: appointment.Id,\r\n            appointmentStatus: appointment.EntityDTO.appointmentStatus\r\n        });\r\n    };\r\n\r\n    generateEventTitle = (appointment) => {\r\n        let name = appointment.EntityDTO.patient == null ? \"\" : appointment.EntityDTO.patient.EntityDTO.name;\r\n        let surname = appointment.EntityDTO.patient == null ? \"\" : appointment.EntityDTO.patient.EntityDTO.surname;\r\n        if (name === \"\" && surname === \"\")\r\n            return \"Free appointment\"\r\n        else\r\n            return name + \" \" + surname;\r\n    };\r\n\r\n    mapAppointmentsToEvents = () => {\r\n        this.setState({ events: this.state.appointments.map(appointment => ({ start: new Date(appointment.EntityDTO.startDateTime), end: new Date(appointment.EntityDTO.endDateTime), title: this.generateEventTitle(appointment), allDay: false, resource: appointment })) });\r\n        console.log(this.state.events);\r\n    };\r\n\r\n    fetchDermatologistCalendar = () => {\r\n        Axios.get(BASE_URL + \"/api/users/dermatologist/pharmacies\", { validateStatus: () => true, headers: { Authorization: getAuthHeader() } })\r\n        .then((res) => {\r\n\r\n            if (res.status === 401) {\r\n                this.setState({\r\n                    redirect: true,\r\n                    redirectUrl: \"/unauthorized\"\r\n                });\r\n            } else {\r\n\r\n                this.setState({ pharmacies: res.data, pharmacy: res.data[0], pharmacyName: res.data[0].EntityDTO.name });\r\n                console.log(res.data);\r\n\r\n                Axios.get(BASE_URL + \"/api/appointment/dermatologist/calendar-for-pharmacy/\" + this.state.pharmacy.Id, { validateStatus: () => true, headers: { Authorization: getAuthHeader() } })\r\n                    .then((res) => {\r\n                        this.setState({ appointments: res.data });\r\n                        console.log(res.data);\r\n                        this.mapAppointmentsToEvents();\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                    });\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    fetchFarmacistCalendar = () => {\r\n        Axios.get(BASE_URL + \"/api/users/pharmacist/pharmacy\", { validateStatus: () => true, headers: { Authorization: getAuthHeader() } })\r\n        .then((res) => {\r\n\r\n            if (res.status === 401) {\r\n                this.setState({\r\n                    redirect: true,\r\n                    redirectUrl: \"/unauthorized\"\r\n                });\r\n            } else {\r\n\r\n                this.setState({ pharmacy: res.data, pharmacyName: res.data.EntityDTO.name });\r\n                console.log(res.data);\r\n\r\n                Axios.get(BASE_URL + \"/api/appointment/pharmacist/calendar/\" + this.state.pharmacy.Id, { validateStatus: () => true, headers: { Authorization: getAuthHeader() } })\r\n                    .then((res) => {\r\n                        this.setState({ appointments: res.data });\r\n                        console.log(res.data);\r\n                        this.mapAppointmentsToEvents();\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                    });\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        if(this.hasRole(\"ROLE_DERMATHOLOGIST\"))\r\n            this.fetchDermatologistCalendar();\r\n        else\r\n            this.fetchFarmacistCalendar();\r\n    }\r\n\r\n    handlePharmacyChange = (event) => {\r\n        this.setState({ pharmacy: event.target.value }, () => {\r\n            Axios.get(BASE_URL + \"/api/appointment/dermatologist/calendar-for-pharmacy/\" + this.state.pharmacy, { validateStatus: () => true, headers: { Authorization: getAuthHeader() } })\r\n            .then((res) => {\r\n                this.setState({ appointments: res.data });\r\n                console.log(res.data);\r\n                this.mapAppointmentsToEvents();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    };\r\n\r\n    handleExamine = () => {\r\n\t\tthis.setState({\r\n\t\t\tredirect: true,\r\n\t\t\tredirectUrl: \"/treatment-report/\" + this.state.id\r\n\t\t});\r\n\t};\r\n\r\n\thandleDidNotShowUp = () => {\r\n\t\tAxios.put(BASE_URL + \"/api/appointment/did-not-show-up\",\r\n\t\t\t{ id: this.state.id },\r\n\t\t\t{ headers: { Authorization: getAuthHeader() } })\r\n\t\t\t.then((res) => {\r\n                this.handleModalInfoClose();\r\n\t\t\t\tif(this.hasRole(\"ROLE_DERMATHOLOGIST\"))\r\n                    this.fetchDermatologistCalendar();\r\n                else\r\n                    this.fetchFarmacistCalendar();\r\n                console.log(res.data);\r\n                this.setState({ openModalSuccess: true});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n    };\r\n    \r\n    handleModalSuccessClose = () => {\r\n\t\tthis.setState({\r\n\t\t\topenModalSuccess: false,\r\n\t\t});\r\n\t};\r\n\r\n    render() {\r\n\r\n        if (this.state.redirect) return <Redirect push to={this.state.redirectUrl} />;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopBar />\r\n                <Header />\r\n                <div className=\"container\" style={{ marginTop: \"10%\" }}>\r\n                    <h4 className=\"text-center mb-5 mt-2 text-uppercase\">Calendar</h4>\r\n                    <div hidden={!this.hasRole(\"ROLE_DERMATHOLOGIST\")}>\r\n                        <h5 className=\"text-left mt-2\">Working calendar for selected pharmacy</h5>\r\n                        <div className=\"mb-5 mt-2\">\r\n                            <select onChange={this.handlePharmacyChange} className=\"form-control\" >\r\n                                {this.state.pharmacies.map((pharmacy) => <option key={pharmacy.Id} value={pharmacy.Id}>Dr {pharmacy.EntityDTO.name}</option>)}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div hidden={!this.hasRole(\"ROLE_PHARMACIST\")}>\r\n                    <h5 className=\"text-left mb-5 mt-2\">{\"Working calendar for \" + this.state.pharmacyName + \" pharmacy\"}</h5>\r\n                    </div>\r\n                    \r\n                    <Calendar\r\n                        selectable\r\n                        onSelectEvent={event => this.handleEventClick(event.resource)}\r\n                        popup\r\n                        defaultView={Views.DAY}\r\n                        localizer={localizer}\r\n                        events={this.state.events}\r\n                        startAccessor=\"start\"\r\n                        endAccessor=\"end\"\r\n                        style={{ height: 500 }}\r\n                    />\r\n                </div>\r\n\r\n                <EventDetailsModal\r\n                    header=\"Appointment information\"\r\n                    show={this.state.openModalInfo}\r\n                    onCloseModal={this.handleModalInfoClose}\r\n                    name={this.state.name}\r\n                    surname={this.state.surname}\r\n                    startDateTime={this.state.startDateTime}\r\n                    endDateTime={this.state.endDateTime}\r\n                    price={this.state.price}\r\n                    handleExamine={this.handleExamine}\r\n                    handleDidNotShowUp={this.handleDidNotShowUp}\r\n                    appointmentStatus={this.state.appointmentStatus}\r\n                />\r\n                <ModalDialog\r\n\t\t\t\t\tshow={this.state.openModalSuccess}\r\n\t\t\t\t\tonCloseModal={this.handleModalSuccessClose}\r\n\t\t\t\t\theader=\"Successfully added penalty to patient\"\r\n\t\t\t\t\ttext=\"You can start examination for another patient.\"\r\n\t\t\t\t/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalendarPage;"]},"metadata":{},"sourceType":"module"}