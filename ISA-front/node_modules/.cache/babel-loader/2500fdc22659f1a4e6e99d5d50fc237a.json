{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stefan\\\\Desktop\\\\ISA-projekat\\\\ISA-projekat\\\\ISA-front\\\\src\\\\Pages\\\\PharmaciesAppointmentStartPage.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport Header from '../Components/Header';\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\";\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\n\nclass PharmaciesAppointmentStartPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDate: new Date(),\n      hours: new Date().getHours(),\n      minutes: new Date().getMinutes()\n    };\n\n    this.hasRole = requestRole => {\n      let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\n      if (currentRoles === null) return false;\n\n      for (let currentRole of currentRoles) {\n        if (currentRole === requestRole) return true;\n      }\n\n      return false;\n    };\n\n    this.handleCloseSuccessfulAlert = () => {\n      this.setState({\n        hiddenSuccessfulAlert: true\n      });\n    };\n\n    this.handleCloseUnsuccessfulAlert = () => {\n      this.setState({\n        hiddenUnsuccessfulAlert: true\n      });\n    };\n\n    this.handleDateChange = date => {\n      this.setState({\n        selectedDate: date\n      });\n    };\n\n    this.handleMinutesChange = event => {\n      if (event.target.value < 0) this.setState({\n        minutes: 0\n      });else if (event.target.value > 59) this.setState({\n        minutes: 59\n      });else this.setState({\n        minutes: event.target.value\n      });\n    };\n\n    this.handleHoursChange = event => {\n      if (event.target.value < 0) this.setState({\n        hours: 0\n      });else if (event.target.value > 23) this.setState({\n        hours: 23\n      });else this.setState({\n        hours: event.target.value\n      });\n    };\n\n    this.CheckAvailabilityAppointment = () => {\n      this.setState({\n        showDateError: \"none\",\n        consultationDate: new Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate(), this.state.hours, this.state.minutes, 0, 0).getTime()\n      });\n      let acceptableDate = new Date().getTime() + 10800000;\n      let selectedDate = new Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate(), this.state.hours, this.state.minutes, 0, 0).getTime();\n      console.log(acceptableDate, selectedDate, selectedDate <= acceptableDate);\n\n      if (!(selectedDate <= acceptableDate)) {\n        console.log(\"njjeee\");\n        Axios.get(API_URL + \"/api/pharmacy/get-pharmacy-by-appointment-time/\" + new Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate(), this.state.hours, this.state.minutes, 0, 0).getTime(), {\n          validateStatus: () => true,\n          headers: {\n            Authorization: GetAuthorisation()\n          }\n        }).then(res => {\n          if (res.status === 401) {\n            this.setState({\n              unauthorizedRedirect: true\n            });\n          } else if (res.status === 200) {\n            this.setState({\n              pharmacies: res.data,\n              hiddenPharmacies: false\n            });\n            console.log(res.data);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        this.setState({\n          showDateError: \"inline\"\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center  mt-3  \",\n          children: \"Please select the desired date for consultations with a pharmacist!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          style: {\n            marginTop: \"5em\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Select date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"form-control\",\n                minDate: new Date(),\n                onChange: date => this.handleDateChange(date),\n                selected: this.state.selectedDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Hours:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"00\",\n                max: \"23\",\n                className: \"form-control\",\n                onChange: this.handleHoursChange,\n                value: this.state.hours,\n                style: {\n                  width: \"12em\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Minutes:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                min: \"00\",\n                max: \"59\",\n                type: \"number\",\n                className: \"form-control\",\n                onChange: this.handleMinutesChange,\n                value: this.state.minutes,\n                style: {\n                  width: \"12em\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  class: \"btn btn-outline-primary btn-lg \",\n                  onClick: () => this.CheckAvailabilityAppointment(),\n                  style: {\n                    marginTop: \"2em\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Check appointment \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PharmaciesAppointmentStartPage;","map":{"version":3,"sources":["C:/Users/stefan/Desktop/ISA-projekat/ISA-projekat/ISA-front/src/Pages/PharmaciesAppointmentStartPage.js"],"names":["React","Component","Axios","Header","GetAuthorisation","DermatologistAppointmentPicture","UnsuccessfulAlert","SuccessfulAlert","NavLink","Redirect","DatePicker","API_URL","PharmaciesAppointmentStartPage","constructor","props","state","selectedDate","Date","hours","getHours","minutes","getMinutes","hasRole","requestRole","currentRoles","JSON","parse","localStorage","getItem","currentRole","handleCloseSuccessfulAlert","setState","hiddenSuccessfulAlert","handleCloseUnsuccessfulAlert","hiddenUnsuccessfulAlert","handleDateChange","date","handleMinutesChange","event","target","value","handleHoursChange","CheckAvailabilityAppointment","showDateError","consultationDate","getFullYear","getMonth","getDate","getTime","acceptableDate","console","log","get","validateStatus","headers","Authorization","then","res","status","unauthorizedRedirect","pharmacies","data","hiddenPharmacies","catch","err","componentDidMount","history","push","render","marginTop","fontSize","width","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass PharmaciesAppointmentStartPage extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        selectedDate: new Date(),\r\n\t\thours: new Date().getHours(),\r\n\t\tminutes: new Date().getMinutes(),\r\n\r\n\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n  \r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n    handleDateChange = (date) => {\r\n\t\tthis.setState({ selectedDate: date });\r\n\t};\r\n\r\n\thandleMinutesChange = (event) => {\r\n\t\tif (event.target.value < 0) this.setState({ minutes: 0 });\r\n        else if (event.target.value > 59) this.setState({ minutes: 59 });\r\n\t\telse this.setState({ minutes: event.target.value });\r\n\t};\r\n\r\n\thandleHoursChange = (event) => {\r\n        if (event.target.value < 0) this.setState({ hours: 0 });\r\n\t\telse if (event.target.value > 23) this.setState({ hours: 23 });\r\n\t\telse this.setState({ hours: event.target.value });\r\n\t};\r\n    \r\n    \r\n    CheckAvailabilityAppointment = () => {\r\n        \r\n\r\n\t\tthis.setState({\r\n\t\t\tshowDateError: \"none\",\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\t\t});\r\n\r\n\t\tlet acceptableDate = new Date().getTime() + 10800000;\r\n\t\tlet selectedDate = new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime();\r\n\r\n\t\tconsole.log(acceptableDate, selectedDate, selectedDate <= acceptableDate);\r\n\t\t\r\n\t     if(!(selectedDate <= acceptableDate)) {\r\n             console.log(\"njjeee\")\r\n\t\t\tAxios.get(\r\n\t\t\t\tAPI_URL +\r\n\t\t\t\t\t\"/api/pharmacy/get-pharmacy-by-appointment-time/\" +\r\n\t\t\t\t\tnew Date(\r\n\t\t\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\t\t\tthis.state.hours,\r\n\t\t\t\t\t\tthis.state.minutes,\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t).getTime(),\r\n\t\t\t\t{ validateStatus: () => true, headers: { Authorization: GetAuthorisation() } }\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\tthis.setState({ unauthorizedRedirect: true });\r\n\t\t\t\t\t} else if (res.status === 200) {\r\n\t\t\t\t\t\tthis.setState({ pharmacies: res.data, hiddenPharmacies: false });\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\t\t}else{\r\n                this.setState({ showDateError: \"inline\" });\r\n        }\r\n\t};\r\n\r\n\r\n   \r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n         <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n\r\n       \r\n\r\n\r\n         <h1  className=\"text-center  mt-3  \" >Please select the desired date for consultations with a pharmacist!</h1>\r\n         \r\n         <div className=\"control-group\" style={{ marginTop: \"5em\" }}>\r\n\t\t\t\t\t\t<div className=\"form-row justify-content-center\">\r\n                            <div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n                                    <b>Select date:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tminDate={new Date()}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => this.handleDateChange(date)}\r\n\t\t\t\t\t\t\t\t\tselected={this.state.selectedDate}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n\t\t\t\t\t\t\t\t\t<b>Hours:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input\r\n                                    type=\"number\"\r\n\t\t\t\t\t\t\t\t\tmin=\"00\"\r\n\t\t\t\t\t\t\t\t\tmax=\"23\"\r\n                                    className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleHoursChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.hours}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"12em\" }}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n                                    <b>Minutes:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tmin=\"00\"\r\n                                    max=\"59\"\r\n                                    type=\"number\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleMinutesChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.minutes}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"12em\" }}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col text-center\">\r\n\t\t\t\t\t\t            <button type=\"button\" class=\"btn btn-outline-primary btn-lg \"\r\n                                        onClick={() => this.CheckAvailabilityAppointment()}\r\n                                        style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n                                        >\r\n                                        <b>Check appointment </b>\r\n\r\n                                     </button>\r\n\r\n                                </div>\r\n                             </div>\r\n                        </div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\r\n          \r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PharmaciesAppointmentStartPage;"]},"metadata":{},"sourceType":"module"}