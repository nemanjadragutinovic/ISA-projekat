{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stefan\\\\Desktop\\\\ISA-projekat\\\\ISA-projekat\\\\ISA-front\\\\src\\\\Pages\\\\FuturePharmaciesConsultationsForPatient.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport Header from '../Components/Header';\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\nimport PharmacistAppointmentPicture from \"../Images/pharmacist.png\";\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport HistoryPharmacistConsultation from \"../Components/Consultations/HistoryPharmacistConsultation\";\nimport FirstGradeModal from \"../Components/Modal/FirstGradeModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\n\nclass FuturePharmaciesConsultationsForPatient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pharmacyId: \"\",\n      appointments: [],\n      hiddenSuccessfulAlert: true,\n      successfulHeader: \"\",\n      successfulMessage: \"\",\n      hiddenUnsuccessfulAlert: true,\n      UnsuccessfulHeader: \"\",\n      UnsuccessfulMessage: \"\",\n      hideFutureButton: true,\n      hideHistoryButton: false,\n      historyConsultations: [],\n      hideFutureConsultations: false,\n      hideHistoryConsultations: true,\n      selectedEmployee: [],\n      employeeId: \"\",\n      employeeGrade: 0,\n      employeeName: \"\",\n      employeeSurname: \"\",\n      showGradeModal: false,\n      showFirstGrade: false,\n      showModifyGrade: false,\n      maxGrade: 5\n    };\n\n    this.hasRole = requestRole => {\n      let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\n      if (currentRoles === null) return false;\n\n      for (let currentRole of currentRoles) {\n        if (currentRole === requestRole) return true;\n      }\n\n      return false;\n    };\n\n    this.handleCloseSuccessfulAlert = () => {\n      this.setState({\n        hiddenSuccessfulAlert: true\n      });\n    };\n\n    this.handleCloseUnsuccessfulAlert = () => {\n      this.setState({\n        hiddenUnsuccessfulAlert: true\n      });\n    };\n\n    this.moveToHistoryConsultation = () => {\n      this.setState({\n        hideFutureButton: false,\n        hideHistoryButton: true,\n        hideFutureConsultations: true,\n        hideHistoryConsultations: false\n      });\n      Axios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets\", {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.props.history.push('/login');\n        } else {\n          this.setState({\n            historyConsultations: res.data\n          });\n          console.log(res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.moveToFutureConsultation = () => {\n      this.setState({\n        hideFutureButton: true,\n        hideHistoryButton: false,\n        hideFutureConsultations: false,\n        hideHistoryConsultations: true\n      });\n      this.componentDidMount();\n    };\n\n    this.handleCancelAppointment = appointmentId => {\n      let appointmentIdObject = {\n        id: appointmentId\n      };\n      Axios.post(API_URL + \"/appointment/pharmacist/cancelAppointment\", appointmentIdObject, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 400) {\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Bad request\",\n            UnsuccessfulMessage: res.data\n          });\n        } else if (res.status === 500) {\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Internal server error\",\n            UnsuccessfulMessage: \"Server error.\"\n          });\n        } else if (res.status === 404) {\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Internal server error\",\n            UnsuccessfulMessage: res.data\n          });\n        } else if (res.status === 200) {\n          console.log(\"Success\");\n          this.setState({\n            hiddenSuccessfulAlert: false,\n            successfulHeader: \"Success\",\n            successfulMessage: \"You have successfully canceled the desired appointment! \",\n            hiddenEditInfo: true\n          });\n          this.refreshAppointments(appointmentId);\n        }\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          hiddenUnsuccessfulAlert: false,\n          UnsuccessfulHeader: \"Error\",\n          UnsuccessfulMessage: \"Something was wrong\"\n        });\n      });\n    };\n\n    this.isAvailableToCanceled = date => {\n      var appointmentDate = new Date(date);\n      appointmentDate.setDate(appointmentDate.getDate() - 1);\n\n      if (appointmentDate <= new Date()) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.handleSortByPriceAscending = () => {\n      console.log(\"sortiranjeee\");\n      var appointmentType = \"CONSULTATION\";\n      Axios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByPriceAscending/\" + appointmentType, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.props.history.push('/login');\n        } else {\n          this.setState({\n            historyConsultations: res.data\n          });\n          console.log(res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleSortByPriceDescending = () => {\n      var appointmentType = \"CONSULTATION\";\n      Axios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByPriceDescending/\" + appointmentType, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.props.history.push('/login');\n        } else {\n          this.setState({\n            historyConsultations: res.data\n          });\n          console.log(res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleSortByDateAscending = () => {\n      console.log(\"sortiranjeee\");\n      var appointmentType = \"CONSULTATION\";\n      Axios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByDateAscending/\" + appointmentType, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.props.history.push('/login');\n        } else {\n          this.setState({\n            historyConsultations: res.data\n          });\n          console.log(res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleSortByDateDescending = () => {\n      var appointmentType = \"CONSULTATION\";\n      Axios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByDateDescending/\" + appointmentType, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.props.history.push('/login');\n        } else {\n          this.setState({\n            historyConsultations: res.data\n          });\n          console.log(res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleSortByDurationAppointmentAscending = () => {\n      var appointmentType = \"CONSULTATION\";\n      Axios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByDurationAscending/\" + appointmentType, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.props.history.push('/login');\n        } else {\n          this.setState({\n            historyConsultations: res.data\n          });\n          console.log(res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleSortByDurationAppointmentDescending = () => {\n      var appointmentType = \"CONSULTATION\";\n      Axios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByDurationDescending/\" + appointmentType, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.props.history.push('/login');\n        } else {\n          this.setState({\n            historyConsultations: res.data\n          });\n          console.log(res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleGetGradeClick = employee => {\n      console.log(employee);\n      Axios.get(API_URL + \"/grade/employee/\" + employee.Id, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.props.history.push('/login');\n        } else if (res.status === 404) {\n          console.log(\"Nema ocenu\");\n          let entityDTO = {\n            showGradeModal: true,\n            showFirstGrade: true,\n            employeeId: employee.EntityDTO.Id,\n            employeeGrade: employee.EntityDTO.grade,\n            employeeName: employee.EntityDTO.name,\n            employeeSurname: employee.EntityDTO.surname\n          };\n          this.setState({\n            showGradeModal: true,\n            showFirstGrade: true,\n            employeeId: employee.Id,\n            employeeGrade: employee.EntityDTO.grade,\n            employeeName: employee.EntityDTO.name,\n            employeeSurname: employee.EntityDTO.surname\n          });\n          console.log(employee.Id);\n          console.log(entityDTO);\n        } else {\n          this.setState({\n            showGradeModal: true,\n            showModifyGrade: true,\n            employeeId: res.data.employee.id,\n            employeeGrade: res.data.grade,\n            employeeName: res.data.employee.name,\n            employeeSurname: res.data.employee.surname\n          });\n          console.log(res.data.grade);\n          console.log(res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.setFirstGrade = grade => {\n      console.log(\"sou\");\n      let entityDTO = {\n        employeeId: this.state.employeeId,\n        grade: grade\n      };\n      console.log(entityDTO);\n      Axios.post(API_URL + \"/grade/employee/createGrade\", entityDTO, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.props.history.push('/login');\n        } else if (res.status === 404) {\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Bad request\",\n            UnsuccessfulMessage: res.data,\n            showGradeModal: false,\n            showFirstGrade: false,\n            showModifyGrade: false\n          });\n        } else if (res.status === 500) {\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Error\",\n            UnsuccessfulMessage: \"internal server error! \",\n            showGradeModal: false,\n            showFirstGrade: false,\n            showModifyGrade: false\n          });\n        } else {\n          this.setState({\n            hiddenSuccessfulAlert: false,\n            successfulHeader: \"Successful\",\n            successfulMessage: \"You successful created grade for employee! \",\n            showGradeModal: false,\n            showFirstGrade: false,\n            showModifyGrade: false\n          });\n          this.moveToHistoryConsultation();\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.setModifyGrade = grade => {\n      console.log(\"sou\");\n      let entityDTO = {\n        employeeId: this.state.employeeId,\n        grade: grade\n      };\n      console.log(entityDTO);\n      Axios.post(API_URL + \"/grade/employee/updateGrade\", entityDTO, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.props.history.push('/login');\n        } else if (res.status === 404) {\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Bad request\",\n            UnsuccessfulMessage: res.data,\n            showGradeModal: false,\n            showFirstGrade: false,\n            showModifyGrade: false\n          });\n        } else if (res.status === 500) {\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Error\",\n            UnsuccessfulMessage: \"internal server error! \",\n            showGradeModal: false,\n            showFirstGrade: false,\n            showModifyGrade: false\n          });\n        } else {\n          this.setState({\n            hiddenSuccessfulAlert: false,\n            successfulHeader: \"Successful\",\n            successfulMessage: \"You successful update grade for employee! \",\n            showGradeModal: false,\n            showFirstGrade: false,\n            showModifyGrade: false\n          });\n          this.moveToHistoryConsultation();\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.closeFirstGradeModal = () => {\n      this.setState({\n        showFirstGrade: false,\n        showModifyGrade: false,\n        showGradeModal: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\n      this.props.history.push('/login');\n    }\n\n    Axios.get(API_URL + \"/appointment/pharmacist/findAllFuturePatientsAppointmets\", {\n      validateStatus: () => true,\n      headers: {\n        Authorization: GetAuthorisation()\n      }\n    }).then(res => {\n      if (res.status === 401) {\n        this.props.history.push('/login');\n      } else {\n        this.setState({\n          appointments: res.data\n        });\n        console.log(res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  refreshAppointments(appointmentId) {\n    let newAppointmentsList = [];\n\n    for (let appointment of this.state.appointments) {\n      if (appointment.Id !== appointmentId) newAppointmentsList.push(appointment);\n    }\n\n    this.setState({\n      appointments: newAppointmentsList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-outline-primary btn-lg\",\n          onClick: () => this.moveToFutureConsultation(),\n          hidden: this.state.hideFutureButton,\n          style: {\n            marginTop: \"2em\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          },\n          children: \"Future consultations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-outline-primary btn-lg\",\n          onClick: () => this.moveToHistoryConsultation(),\n          hidden: this.state.hideHistoryButton,\n          style: {\n            marginTop: \"2em\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          },\n          children: \"History consultations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          hidden: this.state.appointments.length === 0 || this.state.hideFutureConsultations,\n          className: \"text-center  mt-3  \",\n          children: \"Your future pharmacist consultations!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          hidden: this.state.appointments.length !== 0 || this.state.hideFutureConsultations,\n          className: \"text-center  mt-3 text-danger\",\n          children: \"You don't have future pharmacist consultations!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(SuccessfulAlert, {\n          hidden: this.state.hiddenSuccessfulAlert,\n          header: this.state.successfulHeader,\n          message: this.state.successfulMessage,\n          handleCloseAlert: this.handleCloseSuccessfulAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(UnsuccessfulAlert, {\n          hidden: this.state.hiddenUnsuccessfulAlert,\n          header: this.state.UnsuccessfulHeader,\n          message: this.state.UnsuccessfulMessage,\n          handleCloseAlert: this.handleCloseUnsuccessfulAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          hidden: this.state.hideFutureConsultations,\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-hover\",\n            style: {\n              width: \"70%\",\n              marginTop: \"5em\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n                id: appointment.Id,\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  width: \"100px\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: PharmacistAppointmentPicture,\n                    style: {\n                      width: \"85px\",\n                      marginTop: \"15px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 616,\n                    columnNumber: 22\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Date: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 622,\n                      columnNumber: 12\n                    }, this), \" \", new Date(appointment.EntityDTO.startDateTime).toLocaleDateString(\"en-US\", {\n                      day: \"2-digit\",\n                      month: \"2-digit\",\n                      year: \"numeric\"\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 621,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Start time: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 12\n                    }, this), \" \", new Date(appointment.EntityDTO.startDateTime).toLocaleTimeString(\"en-US\", {\n                      hour: \"2-digit\",\n                      minute: \"2-digit\"\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"End time: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 637,\n                      columnNumber: 12\n                    }, this), \" \", new Date(appointment.EntityDTO.endDateTime).toLocaleTimeString(\"en-US\", {\n                      hour: \"2-digit\",\n                      minute: \"2-digit\"\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Price:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 644,\n                      columnNumber: 12\n                    }, this), \" \", appointment.EntityDTO.price, /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"  din\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 46\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Pharmacist: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 651,\n                      columnNumber: 12\n                    }, this), \" \", appointment.EntityDTO.employee.EntityDTO.name + \" \" + appointment.EntityDTO.employee.EntityDTO.surname]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Pharmacist grade: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 656,\n                      columnNumber: 12\n                    }, this), \" \", appointment.EntityDTO.employee.EntityDTO.grade, \" \", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"icon-star\",\n                      style: {\n                        color: \"yellow\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 657,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 42\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-outline-danger\",\n                    style: {\n                      marginTop: \"2em\"\n                    },\n                    hidden: this.isAvailableToCanceled(new Date(appointment.EntityDTO.startDateTime)),\n                    onClick: () => this.handleCancelAppointment(appointment.Id),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 665,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 664,\n                  columnNumber: 10\n                }, this)]\n              }, appointment.Id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 9\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(HistoryPharmacistConsultation, {\n        hideHistoryConsultations: this.state.hideHistoryConsultations,\n        appointments: this.state.historyConsultations,\n        handleSortByPriceAscending: this.handleSortByPriceAscending,\n        handleSortByPriceDescending: this.handleSortByPriceDescending,\n        handleSortByDateAscending: this.handleSortByDateAscending,\n        handleSortByDateDescending: this.handleSortByDateDescending,\n        handleSortByDurationAppointmentAscending: this.handleSortByDurationAppointmentAscending,\n        handleSortByDurationAppointmentDescending: this.handleSortByDurationAppointmentDescending,\n        handleGetGradeClick: this.handleGetGradeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(FirstGradeModal, {\n        show: this.state.showGradeModal,\n        showFirstGrade: this.state.showFirstGrade,\n        showModifyGrade: this.state.showModifyGrade,\n        employeeGrade: this.state.employeeGrade,\n        maxGrade: this.state.maxGrade,\n        employeeName: this.state.employeeName,\n        employeeSurname: this.state.employeeSurname,\n        header: \"Grade\",\n        buttonFirstGradeName: \"Grade\",\n        buttonModifyGradeName: \" Update grade\",\n        setFirstGrade: this.setFirstGrade,\n        setModifyGrade: this.setModifyGrade,\n        onCloseModal: this.closeFirstGradeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FuturePharmaciesConsultationsForPatient;","map":{"version":3,"sources":["C:/Users/stefan/Desktop/ISA-projekat/ISA-projekat/ISA-front/src/Pages/FuturePharmaciesConsultationsForPatient.js"],"names":["React","Component","Axios","Header","GetAuthorisation","PharmacistAppointmentPicture","UnsuccessfulAlert","SuccessfulAlert","NavLink","Redirect","HistoryPharmacistConsultation","FirstGradeModal","API_URL","FuturePharmaciesConsultationsForPatient","constructor","props","state","pharmacyId","appointments","hiddenSuccessfulAlert","successfulHeader","successfulMessage","hiddenUnsuccessfulAlert","UnsuccessfulHeader","UnsuccessfulMessage","hideFutureButton","hideHistoryButton","historyConsultations","hideFutureConsultations","hideHistoryConsultations","selectedEmployee","employeeId","employeeGrade","employeeName","employeeSurname","showGradeModal","showFirstGrade","showModifyGrade","maxGrade","hasRole","requestRole","currentRoles","JSON","parse","localStorage","getItem","currentRole","handleCloseSuccessfulAlert","setState","handleCloseUnsuccessfulAlert","moveToHistoryConsultation","get","validateStatus","headers","Authorization","then","res","status","history","push","data","console","log","catch","err","moveToFutureConsultation","componentDidMount","handleCancelAppointment","appointmentId","appointmentIdObject","id","post","hiddenEditInfo","refreshAppointments","isAvailableToCanceled","date","appointmentDate","Date","setDate","getDate","handleSortByPriceAscending","appointmentType","handleSortByPriceDescending","handleSortByDateAscending","handleSortByDateDescending","handleSortByDurationAppointmentAscending","handleSortByDurationAppointmentDescending","handleGetGradeClick","employee","Id","entityDTO","EntityDTO","grade","name","surname","setFirstGrade","setModifyGrade","closeFirstGradeModal","newAppointmentsList","appointment","render","marginTop","marginLeft","marginRight","length","width","map","cursor","startDateTime","toLocaleDateString","day","month","year","toLocaleTimeString","hour","minute","endDateTime","price","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport PharmacistAppointmentPicture from \"../Images/pharmacist.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\nimport HistoryPharmacistConsultation from \"../Components/Consultations/HistoryPharmacistConsultation\"\r\nimport FirstGradeModal from \"../Components/Modal/FirstGradeModal\";\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass FuturePharmaciesConsultationsForPatient extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        pharmacyId: \"\",\r\n        appointments : [],\r\n        hiddenSuccessfulAlert: true,\r\n        successfulHeader: \"\",\r\n        successfulMessage: \"\",\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n        hideFutureButton : true,\r\n        hideHistoryButton : false,\r\n        historyConsultations : [],\r\n        hideFutureConsultations : false,\r\n        hideHistoryConsultations : true,\r\n\r\n\r\n\t\tselectedEmployee : [],\r\n\t\temployeeId : \"\",\r\n\t\temployeeGrade : 0,\r\n\t\temployeeName : \"\",\r\n\t\temployeeSurname : \"\",\r\n\t\tshowGradeModal: false,\r\n\t\tshowFirstGrade : false,\r\n\t\tshowModifyGrade : false,\r\n\t\tmaxGrade : 5\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n    \r\n    Axios.get(API_URL + \"/appointment/pharmacist/findAllFuturePatientsAppointmets\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ appointments: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\r\n    \r\n \r\n    moveToHistoryConsultation =() => {\r\n\r\n       \r\n\r\n\t\tthis.setState({ hideFutureButton : false,\r\n\t\t\thideHistoryButton : true,\r\n\t\t\thideFutureConsultations : true,\r\n\t\t\thideHistoryConsultations : false,\r\n\r\n\t\t});\r\n\r\n\r\n\r\n        Axios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data});\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n       \r\n    }\r\n\r\n\r\n    moveToFutureConsultation =() => {\r\n\r\n        this.setState({ hideFutureButton : true,\r\n                        hideHistoryButton : false,\r\n                        hideFutureConsultations : false,\r\n                        hideHistoryConsultations : true,\r\n        \r\n        });\r\n\r\n      this.componentDidMount();\r\n\r\n       \r\n    }\r\n\r\n\thandleCancelAppointment = (appointmentId) => {\r\n  \r\n\t\tlet appointmentIdObject = { id: appointmentId};\r\n\t\r\n\t\tAxios.post(API_URL + \"/appointment/pharmacist/cancelAppointment\",appointmentIdObject , {\r\n\t\t\t\tvalidateStatus: () => true,\r\n\t\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t\t})\r\n\t\t  .then((res) => {\r\n\t\t\tif (res.status === 400) {\r\n\t\t\t  this.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t\tUnsuccessfulHeader: \"Bad request\", \r\n\t\t\t\tUnsuccessfulMessage: res.data });\r\n\t\r\n\t\t\t} else if (res.status === 500) {\r\n\t\r\n\t\t\t  this.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\tUnsuccessfulHeader: \"Internal server error\", \r\n\t\t\t\tUnsuccessfulMessage: \"Server error.\" });\r\n\t\r\n\t\t\t} \r\n\t\t\telse if (res.status === 404) {\r\n\t\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t  UnsuccessfulHeader: \"Internal server error\", \r\n\t\t\t\t  UnsuccessfulMessage: res.data });\r\n\t  \r\n\t\t\t} else if (res.status === 200) {\r\n\t\t\t  console.log(\"Success\");\r\n\t\t\t  this.setState({\r\n\t\t\t\thiddenSuccessfulAlert: false,\r\n\t\t\t\tsuccessfulHeader: \"Success\",\r\n\t\t\t\tsuccessfulMessage: \"You have successfully canceled the desired appointment! \",\r\n\t\t\t\thiddenEditInfo: true,\r\n\t\t\t  });\r\n\t\r\n\t\t\t  this.refreshAppointments(appointmentId);\r\n\t\r\n\t\t\t}\r\n\t\t  })\r\n\t\t  .catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false,\r\n\t\t\t  UnsuccessfulHeader: \"Error\", \r\n\t\t\t  UnsuccessfulMessage: \"Something was wrong\" });\r\n\t\t  \r\n\t\t  });\r\n\t\r\n\t\r\n\t\r\n\t  }\r\n\t\r\n\t  refreshAppointments (appointmentId) {\r\n\t\r\n\t\tlet newAppointmentsList= [];\r\n\t\tfor (let appointment of this.state.appointments) {\r\n\t\t  if (appointment.Id !== appointmentId) \r\n\t\t\t  newAppointmentsList.push(appointment)\r\n\t\t}\r\n\t\r\n\t\tthis.setState({\r\n\t\t appointments : newAppointmentsList,\r\n\t\t});\r\n\t\r\n\t  }\r\n\r\n\r\n\t  isAvailableToCanceled =(date) => {\r\n\r\n        var appointmentDate= new Date(date);\r\n        appointmentDate.setDate(appointmentDate.getDate() -1);\r\n\r\n        if(appointmentDate <= new Date()){\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\t\r\n\thandleSortByPriceAscending =() => {\r\n\r\n\t\tconsole.log(\"sortiranjeee\");\r\n\r\n\t\tvar appointmentType= \"CONSULTATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByPriceAscending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n        \r\n    }\r\n\r\n\r\n\thandleSortByPriceDescending =() => {\r\n\r\n\t\tvar appointmentType= \"CONSULTATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByPriceDescending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n        \r\n    }\r\n\r\n\thandleSortByDateAscending =() => {\r\n\r\n\r\n\t\tconsole.log(\"sortiranjeee\");\r\n\t\tvar appointmentType= \"CONSULTATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByDateAscending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n        \r\n    }\r\n\r\n\r\n\thandleSortByDateDescending =() => {\r\n\r\n\t\t\r\n\t\tvar appointmentType= \"CONSULTATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByDateDescending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n        \r\n    }\r\n\r\n\r\n\thandleSortByDurationAppointmentAscending =() => {\r\n\r\n\t\tvar appointmentType= \"CONSULTATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByDurationAscending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n        \r\n    }\r\n\r\n\t\r\n\thandleSortByDurationAppointmentDescending =() => {\r\n\r\n\t\tvar appointmentType= \"CONSULTATION\";\r\n\r\n\t\tAxios.get(API_URL + \"/appointment/pharmacist/findAllHistoryPatientsAppointmets/sortByDurationDescending/\" + appointmentType , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ historyConsultations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n        \r\n    }\r\n\r\n\t\r\n\thandleGetGradeClick = (employee) => {\r\n\t\tconsole.log(employee);\r\n\r\n\r\n\r\n\r\n\t\tAxios.get(API_URL + \"/grade/employee/\" + employee.Id , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else if(res.status === 404){\r\n\r\n\r\n\t\t\t\t\tconsole.log(\"Nema ocenu\");\r\n\r\n\t\t\t\t\tlet entityDTO = {\r\n\t\t\t\t\t\tshowGradeModal : true,\r\n\t\t\t\t\t\t\tshowFirstGrade : true,\t\r\n\t\t\t\t\t\temployeeId : employee.EntityDTO.Id,\r\n\t\t\t\t\t\temployeeGrade : employee.EntityDTO.grade,\r\n\t\t\t\t\t\temployeeName : employee.EntityDTO.name,\r\n\t\t\t\t\t\temployeeSurname : employee.EntityDTO.surname\r\n\t\t\t\t\t};\r\n\r\n\r\n\t\t\t\t\tthis.setState({ showGradeModal : true,\r\n\t\t\t\t\t\t\tshowFirstGrade : true,\t\r\n\t\t\t\t\t\temployeeId : employee.Id,\r\n\t\t\t\t\t\temployeeGrade : employee.EntityDTO.grade,\r\n\t\t\t\t\t\temployeeName : employee.EntityDTO.name,\r\n\t\t\t\t\t\temployeeSurname : employee.EntityDTO.surname});\r\n\r\n\t\t\t\t\t\tconsole.log(employee.Id);\r\n\t\t\t\t\t\tconsole.log(entityDTO);\r\n\r\n\t\t\t\t}else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({ showGradeModal : true,\r\n\t\t\t\t\t\tshowModifyGrade : true,\t\r\n\t\t\t\t\t\temployeeId : res.data.employee.id,\r\n\t\t\t\t\t\temployeeGrade : res.data.grade,\r\n\t\t\t\t\t\temployeeName : res.data.employee.name,\r\n\t\t\t\t\t\temployeeSurname : res.data.employee.surname});\r\n\r\n\t\t\t\t\t\tconsole.log(res.data.grade);\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n\t};\r\n\r\n\r\n\tsetFirstGrade = (grade) => {\r\n\t\t\r\n\t\tconsole.log(\"sou\")\r\n\r\n\t\tlet entityDTO = {\r\n\t\t\temployeeId: this.state.employeeId ,\r\n\t\t\tgrade: grade,\r\n\t\t};\r\n\r\n\t\tconsole.log(entityDTO);\r\n\r\n\t\tAxios.post(API_URL + \"/grade/employee/createGrade\",entityDTO , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else if(res.status === 404){\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Bad request\", UnsuccessfulMessage : res.data,\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\tshowModifyGrade : false});\r\n\r\n\t\t\t\t}else if(res.status === 500){\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Error\", UnsuccessfulMessage : \"internal server error! \",\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t showModifyGrade : false  });\r\n\r\n\t\t\t\t}else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({ hiddenSuccessfulAlert:  false, successfulHeader:   \"Successful\", successfulMessage:  \"You successful created grade for employee! \",\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t showModifyGrade : false   });\r\n\r\n\t\t\t\t\tthis.moveToHistoryConsultation();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t};\r\n\r\n\tsetModifyGrade = (grade) => {\r\n\t\t\r\n\t\tconsole.log(\"sou\")\r\n\r\n\t\tlet entityDTO = {\r\n\t\t\temployeeId: this.state.employeeId ,\r\n\t\t\tgrade: grade,\r\n\t\t};\r\n\r\n\t\tconsole.log(entityDTO);\r\n\r\n\r\n\t\tAxios.post(API_URL + \"/grade/employee/updateGrade\",entityDTO , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else if(res.status === 404){\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Bad request\", UnsuccessfulMessage : res.data,\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\tshowModifyGrade : false});\r\n\r\n\t\t\t\t}else if(res.status === 500){\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, UnsuccessfulHeader : \"Error\", UnsuccessfulMessage : \"internal server error! \",\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t showModifyGrade : false  });\r\n\r\n\t\t\t\t}else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({ hiddenSuccessfulAlert:  false, successfulHeader:   \"Successful\", successfulMessage:  \"You successful update grade for employee! \",\r\n\t\t\t\t\t showGradeModal :false,\r\n\t\t\t\t\t showFirstGrade : false,\r\n\t\t\t\t\t showModifyGrade : false   });\r\n\r\n\t\t\t\t\tthis.moveToHistoryConsultation();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\r\n\r\n\t};\r\n\t\r\n\tcloseFirstGradeModal = () => {\r\n\r\n\t\tthis.setState({ showFirstGrade : false,\r\n\t\t\tshowModifyGrade : false,\r\n\t\t\tshowGradeModal : false});\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n\r\n         <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\r\n         onClick={() => this.moveToFutureConsultation()}\r\n         hidden={this.state.hideFutureButton} \r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n         >\r\n         Future consultations\r\n        </button>\r\n\r\n\r\n        <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\r\n         onClick={() => this.moveToHistoryConsultation()}\r\n         hidden={this.state.hideHistoryButton} \r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n         >\r\n         History consultations\r\n        </button>\r\n\r\n\r\n         <h1 hidden={this.state.appointments.length === 0 || this.state.hideFutureConsultations } className=\"text-center  mt-3  \" >Your future pharmacist consultations!</h1>\r\n         <h1 hidden={this.state.appointments.length !== 0 || this.state.hideFutureConsultations} className=\"text-center  mt-3 text-danger\"  >You don't have future pharmacist consultations!</h1>\r\n\r\n\r\n\r\n         <SuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenSuccessfulAlert}\r\n\t\t\t\theader={this.state.successfulHeader}\r\n\t\t\t\tmessage={this.state.successfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseSuccessfulAlert}    \r\n\t\t/>\r\n\t\t<UnsuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t/>\r\n\r\n        \r\n   \r\n        <div className=\"container\" hidden={this.state.hideFutureConsultations }>\r\n                    \r\n          <table className=\"table table-hover\" style={{ width: \"70%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.appointments.map((appointment) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tkey={appointment.Id}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\r\n                   <td width=\"100px\">  \r\n                     <img  src={PharmacistAppointmentPicture} style={{ width: \"85px\", marginTop: \"15px\" }}></img>                                 \r\n                                    \r\n                    </td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Date: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Start time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.startDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(appointment.EntityDTO.endDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price:</b>{\" \"}\r\n                                         {appointment.EntityDTO.price }\r\n                                             <b>  din</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                  \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Pharmacist: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{appointment.EntityDTO.employee.EntityDTO.name + \" \" + appointment.EntityDTO.employee.EntityDTO.surname}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                         <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Pharmacist grade: </b> {appointment.EntityDTO.employee.EntityDTO.grade} {\" \"} \r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-star\" style={{ color: \"yellow\"}}></i>\r\n                      \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                                    \r\n\t\t\t\t\t\t\t\t\t<td>\r\n                                    <button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n                                            className=\"btn btn-outline-danger\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{  marginTop: \"2em\" }}\r\n\t\t\t\t\t\t\t\t\t\t\thidden={this.isAvailableToCanceled(new Date(appointment.EntityDTO.startDateTime))}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleCancelAppointment(appointment.Id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n                                    </td>\t\t\t\r\n\r\n\r\n\r\n                                    \r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n                </div>\r\n\r\n\r\n\r\n          \r\n        </div>\r\n\r\n\r\n\t\t<HistoryPharmacistConsultation\r\n\r\n\t\t\thideHistoryConsultations={this.state.hideHistoryConsultations}\r\n\t\t\tappointments= {this.state.historyConsultations}\r\n\r\n\t\t\thandleSortByPriceAscending={this.handleSortByPriceAscending}\r\n\t\t\thandleSortByPriceDescending={this.handleSortByPriceDescending}\r\n\t\t\thandleSortByDateAscending={this.handleSortByDateAscending}\r\n\t\t\thandleSortByDateDescending={this.handleSortByDateDescending}\r\n\t\t\thandleSortByDurationAppointmentAscending={this.handleSortByDurationAppointmentAscending}\r\n\t\t\thandleSortByDurationAppointmentDescending={this.handleSortByDurationAppointmentDescending}\r\n\t\t\thandleGetGradeClick={this.handleGetGradeClick}\t\t\t\t\t\t\t\t\r\n\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t<FirstGradeModal \r\n\r\n\t\t\t\tshow={this.state.showGradeModal}\r\n\t\t\t\tshowFirstGrade={this.state.showFirstGrade}\r\n\t\t\t\tshowModifyGrade={this.state.showModifyGrade}\r\n\t\t\t\temployeeGrade={this.state.employeeGrade}\t\t\t\t\t\t\t\r\n\t\t\t\tmaxGrade={this.state.maxGrade}\r\n\t\t\t\temployeeName={this.state.employeeName }\r\n\t\t\t\temployeeSurname={this.state.employeeSurname }\r\n\t\t\t\theader={\"Grade\"}\r\n\t\t\t\tbuttonFirstGradeName={\"Grade\"}\r\n\t\t\t\tbuttonModifyGradeName={\" Update grade\"}\t\t\t\t\t\t\t\t\r\n\t\t\t\tsetFirstGrade={this.setFirstGrade}\t\r\n\t\t\t\tsetModifyGrade={this.setModifyGrade}\r\n\t\t\t\tonCloseModal={this.closeFirstGradeModal}\t\t\t\t\t\t\r\n\r\n\t\t/>\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FuturePharmaciesConsultationsForPatient;"]},"metadata":{},"sourceType":"module"}