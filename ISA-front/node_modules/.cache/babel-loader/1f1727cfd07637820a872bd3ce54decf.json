{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neman\\\\OneDrive\\\\Radna povr\\u0161ina\\\\isa projekat\\\\ISA-projekat\\\\ISA-front\\\\src\\\\Components\\\\adminRegistration\\\\RegisterDrug.js\";\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\nimport Axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterDrug extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      instanceName: \"\",\n      description: \"\",\n      drugCode: \"\",\n      drugKind: \"\",\n      drugFormat: \"\",\n      loyaltyPoints: \"\",\n      quantity: \"\",\n      drugChange: \"\",\n      openModalData: false,\n      drugKinds: [],\n      drugFormats: [],\n      drugs: [],\n      drugReplacements: [],\n      drugReplacementsEntity: [],\n      manufacturers: [],\n      manufacturer: null,\n      ingredients: [],\n      sideEffects: \"\",\n      onReciept: \"\",\n      recommendAmount: \"\",\n      drugIngredient: \"\",\n      selectedManufacturer: null,\n      selectDrugReplacement: null,\n      nameError: \"none\",\n      consulationPriceError: \"none\",\n      openModal: false,\n      coords: [],\n      redirect: false,\n      redirectUrl: ''\n    };\n  }\n\n  componentDidMount() {\n    Axios.get(\"/api/drug/manufacturers\").then(res => {\n      if (res.status === 401) {\n        this.setState({\n          redirect: true,\n          redirectUrl: \"/unauthorized\"\n        });\n      } else {\n        this.setState({\n          manufacturers: res.data,\n          manufacturer: res.data[0]\n        });\n        console.log(res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n    Axios.get(\"/api/drug/drugkind\").then(res => {\n      if (res.status === 401) {\n        this.setState({\n          redirect: true,\n          redirectUrl: \"/unauthorized\"\n        });\n      } else {\n        this.setState({\n          drugKinds: res.data,\n          drugKind: res.data[0].EntityDTO.type\n        });\n        console.log(res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n    Axios.get(\"/api/drug/drugformat\").then(res => {\n      this.setState({\n        drugFormats: res.data,\n        drugFormat: res.data[0].EntityDTO.type\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    Axios.get(\"/api/drug\").then(res => {\n      this.setState({\n        drugs: res.data\n      });\n      console.log(res.data);\n      this.state.drugChange = res.data[0].EntityDTO.drugInstanceName;\n    }).catch(err => {\n      console.log(err);\n    });\n    Axios.get(\"/api/users/sysadmin/auth\", {\n      validateStatus: () => true,\n      headers: {\n        Authorization: GetAuthorisation()\n      }\n    }).then(res => {\n      console.log(res.statusm, \"TEST\");\n\n      if (res.status === 401) {\n        this.setState({\n          redirect: true,\n          redirectUrl: \"/unauthorized\"\n        });\n      } else {\n        console.log(res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(RegisterDrug);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/neman/OneDrive/Radna povrÅ¡ina/isa projekat/ISA-projekat/ISA-front/src/Components/adminRegistration/RegisterDrug.js"],"names":["GetAuthorisation","Axios","React","Component","withRouter","RegisterDrug","state","name","instanceName","description","drugCode","drugKind","drugFormat","loyaltyPoints","quantity","drugChange","openModalData","drugKinds","drugFormats","drugs","drugReplacements","drugReplacementsEntity","manufacturers","manufacturer","ingredients","sideEffects","onReciept","recommendAmount","drugIngredient","selectedManufacturer","selectDrugReplacement","nameError","consulationPriceError","openModal","coords","redirect","redirectUrl","componentDidMount","get","then","res","status","setState","data","console","log","catch","err","EntityDTO","type","drugInstanceName","validateStatus","headers","Authorization","statusm","render"],"mappings":"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","sourcesContent":["import GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nimport Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\n\r\n\r\nclass RegisterDrug extends Component {\r\n\r\n    state = {\r\n\t\tname: \"\",\r\n\t\tinstanceName: \"\",\r\n\t\tdescription: \"\",\r\n\t\tdrugCode: \"\",\r\n\t\tdrugKind: \"\",\r\n\t\tdrugFormat:\"\",\r\n\t\tloyaltyPoints:\"\",\r\n\t\tquantity:\"\",\r\n\t\tdrugChange: \"\",\r\n\t\topenModalData: false,\r\n\t\tdrugKinds: [],\r\n\t\tdrugFormats: [],\r\n\t\tdrugs: [],\r\n\t\tdrugReplacements: [],\r\n\t\tdrugReplacementsEntity: [],\r\n\t\tmanufacturers: [],\r\n\t\tmanufacturer:null,\r\n\t\tingredients: [],\r\n\t\tsideEffects: \"\",\r\n\t\tonReciept: \"\",\r\n\t\trecommendAmount: \"\",\r\n\t\tdrugIngredient: \"\",\r\n\t\tselectedManufacturer: null,\r\n\t\tselectDrugReplacement: null,\r\n\t\tnameError: \"none\",\r\n\t\tconsulationPriceError: \"none\",\r\n\t\topenModal: false,\r\n\t\tcoords: [],\r\n        redirect: false,\r\n        redirectUrl: '',\r\n\t};\r\n\r\n\r\n    componentDidMount() {\r\n\r\n\t\tAxios.get(\"/api/drug/manufacturers\")\r\n\t\t\t.then((res) => {\r\n\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.setState({\r\n                        redirect: true,\r\n                        redirectUrl: \"/unauthorized\"\r\n                    });\r\n                } else {\r\n\t\t\t\tthis.setState({ \r\n\t\t\t\t\tmanufacturers: res.data,\r\n\t\t\t\t\tmanufacturer: res.data[0],\r\n\t\t\t\t });\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\t\tAxios.get(\"/api/drug/drugkind\")\r\n\t\t\t.then((res) => {\r\n\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.setState({\r\n                        redirect: true,\r\n                        redirectUrl: \"/unauthorized\"\r\n                    });\r\n                } else {\r\n\r\n\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\tdrugKinds: res.data ,\r\n\t\t\t\t\t\tdrugKind: res.data[0].EntityDTO.type\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\t\r\n\t\tAxios.get(\"/api/drug/drugformat\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ \r\n\t\t\t\t\tdrugFormats: res.data,\r\n\t\t\t\t\tdrugFormat: res.data[0].EntityDTO.type\r\n\t\t\t\t});\r\n            \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\t\t\r\n\t\tAxios.get(\"/api/drug\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ drugs: res.data });\r\n                console.log(res.data);\t\r\n\t\t\t\tthis.state.drugChange = res.data[0].EntityDTO.drugInstanceName;\r\n            \r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\t\tAxios.get(\"/api/users/sysadmin/auth\", { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\r\n            .then((res) => {\r\n\t\t\t\tconsole.log(res.statusm, \"TEST\")\r\n                if (res.status === 401) {\r\n                    this.setState({\r\n                        redirect: true,\r\n                        redirectUrl: \"/unauthorized\"\r\n                    });\r\n                } else {\r\n                    console.log(res.data);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n\t\t\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                \r\n            </React.Fragment>\r\n\r\n\r\n        );\r\n\r\n\r\n\t}\r\n}\r\n\r\nexport default withRouter(RegisterDrug);"]},"metadata":{},"sourceType":"module"}