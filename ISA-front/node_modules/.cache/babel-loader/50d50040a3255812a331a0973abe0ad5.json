{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stefan\\\\Desktop\\\\ISA-projekat\\\\ISA-projekat\\\\ISA-front\\\\src\\\\Pages\\\\PharmaciesAppointmentStartPage.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport Header from '../Components/Header';\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\";\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport FoundPharmaciesForDateRange from \"../Components/Pharmacies/FoundPharmaciesForDateRange\";\nimport FoundPharmacistForPharmacyForDateRange from \"../Components/Pharmacies/FoundPharmacistForPharmacyForDateRange\";\nimport ReservedConsultationModal from \"../Components/Modal/ReservedConsultationModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\n\nclass PharmaciesAppointmentStartPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      consultationDate: new Date(),\n      selectedDate: new Date(),\n      hours: new Date().getHours(),\n      minutes: new Date().getMinutes(),\n      pharmacies: [],\n      hiddenPharmacies: true,\n      pharmacists: [],\n      hiddenPharmacists: true,\n      hiddenUnsuccessfulAlert: true,\n      UnsuccessfulHeader: \"\",\n      UnsuccessfulMessage: \"\",\n      isPharmaciesEmpty: false,\n      showReservedConsultationModal: false\n    };\n\n    this.hasRole = requestRole => {\n      let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\n      if (currentRoles === null) return false;\n\n      for (let currentRole of currentRoles) {\n        if (currentRole === requestRole) return true;\n      }\n\n      return false;\n    };\n\n    this.handleCloseSuccessfulAlert = () => {\n      this.setState({\n        hiddenSuccessfulAlert: true\n      });\n    };\n\n    this.handleCloseUnsuccessfulAlert = () => {\n      this.setState({\n        hiddenUnsuccessfulAlert: true\n      });\n    };\n\n    this.handleDateChange = date => {\n      this.setState({\n        selectedDate: date\n      });\n    };\n\n    this.handleMinutesChange = event => {\n      if (event.target.value < 0) this.setState({\n        minutes: 0\n      });else if (event.target.value > 59) this.setState({\n        minutes: 59\n      });else this.setState({\n        minutes: event.target.value\n      });\n    };\n\n    this.handleHoursChange = event => {\n      if (event.target.value < 0) this.setState({\n        hours: 0\n      });else if (event.target.value > 23) this.setState({\n        hours: 23\n      });else this.setState({\n        hours: event.target.value\n      });\n    };\n\n    this.CheckAvailabilityAppointment = () => {\n      this.setState({\n        consultationDate: new Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate(), this.state.hours, this.state.minutes, 0, 0).getTime(),\n        hiddenUnsuccessfulAlert: true,\n        UnsuccessfulHeader: \"\",\n        UnsuccessfulMessage: \"\"\n      });\n      let acceptableDate = new Date().getTime() + 3600;\n      let consultationDateSelected = new Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate(), this.state.hours, this.state.minutes, 0, 0).getTime();\n      console.log(\"sok\");\n      Axios.get(API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/\" + consultationDateSelected, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          this.setState({\n            pharmacies: res.data\n          });\n\n          if (this.state.pharmacies.length !== 0) {\n            this.setState({\n              hiddenPharmacies: false,\n              isPharmaciesEmpty: false\n            });\n          } else {\n            this.setState({\n              isPharmaciesEmpty: true\n            });\n          }\n\n          console.log(res.data);\n        }\n\n        if (res.status === 401) {\n          this.props.history.push(\"/login\");\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Internal server error\",\n            UnsuccessfulMessage: res.data\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          hiddenUnsuccessfulAlert: false,\n          UnsuccessfulHeader: \"Error\",\n          UnsuccessfulMessage: \"Some error\"\n        });\n      });\n    };\n\n    this.showPharmacistForPharmacy = pharmacy => {\n      this.setState({\n        consultationDate: new Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate(), this.state.hours, this.state.minutes, 0, 0).getTime()\n      });\n      let consultationDateSelected = new Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate(), this.state.hours, this.state.minutes, 0, 0).getTime();\n      console.log(\"idemooo\");\n      Axios.get(API_URL + \"/users/freePharmacistsForSelectedPharmacyInDataRange/\" + pharmacy.Id + \"/\" + consultationDateSelected, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.props.history.push(\"/login\");\n        } else if (res.status === 200) {\n          console.log(res.data);\n          this.setState({\n            pharmacists: res.data\n          });\n\n          if (this.state.pharmacists.length !== 0) {\n            this.setState({\n              hiddenPharmacies: true,\n              isPharmaciesEmpty: false,\n              hiddenPharmacists: false,\n              isPharmacistsEmpty: false\n            });\n          } else {\n            this.setState({\n              isPharmacistsEmpty: true,\n              hiddenPharmacists: true,\n              hiddenPharmacies: false\n            });\n          }\n        }\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          hiddenUnsuccessfulAlert: false,\n          UnsuccessfulHeader: \"Error\",\n          UnsuccessfulMessage: \"Some error\"\n        });\n      });\n    };\n\n    this.handleClosePharmacistPage = () => {\n      this.setState({\n        hiddenPharmacists: true,\n        hiddenPharmacies: false\n      });\n    };\n\n    this.handleClosePharmaciesPage = () => {\n      this.setState({\n        hiddenPharmacists: true,\n        hiddenPharmacies: true\n      });\n    };\n\n    this.reserveAppointmentForPharmacist = pharmacist => {\n      this.setState({\n        hiddenUnsuccessfulAlert: true,\n        UnsuccessfulHeader: \"\",\n        UnsuccessfulMessage: \"\"\n      });\n      console.log(this.state.selectedDate);\n      let reservationDTO = {\n        pharmacistId: pharmacist.Id,\n        startDate: this.state.consultationDate\n      };\n      Axios.post(API_URL + \"/appointment/reserveConsulationBySelectedPharmacist\", reservationDTO, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.props.history.push(\"/login\");\n        } else if (res.status === 500) {\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Error\",\n            UnsuccessfulMessage: \"Internal server error\"\n          });\n        } else if (res.status === 400) {\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Bad request\",\n            UnsuccessfulMessage: res.data\n          });\n        } else if (res.status === 201) {\n          console.log(\"uspesno zakao termin\");\n          this.setState({\n            showReservedConsultationModal: true\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          hiddenUnsuccessfulAlert: false,\n          UnsuccessfulHeader: \"Error\",\n          UnsuccessfulMessage: \"Some error\"\n        });\n      });\n    };\n\n    this.closeReservedConsultationModal = () => {\n      this.setState({\n        showReservedConsultationModal: false\n      });\n      this.props.history.push(\"/\");\n    };\n  }\n\n  componentDidMount() {\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        hidden: !this.state.hiddenPharmacies || !this.state.hiddenPharmacists,\n        children: [/*#__PURE__*/_jsxDEV(UnsuccessfulAlert, {\n          hidden: this.state.hiddenUnsuccessfulAlert,\n          header: this.state.UnsuccessfulHeader,\n          message: this.state.UnsuccessfulMessage,\n          handleCloseAlert: this.handleCloseUnsuccessfulAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center  mt-3  \",\n          children: \"Please select the desired date for consultations with a pharmacist!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \" text-center  mt-3  text-danger\",\n          hidden: !this.state.isPharmaciesEmpty,\n          children: \"We couldn't find pharmacies with free pharmacists at desired time. Please change date and time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          style: {\n            marginTop: \"5em\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Select date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"form-control\",\n                minDate: new Date(),\n                onChange: date => this.handleDateChange(date),\n                selected: this.state.selectedDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Hours:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"00\",\n                max: \"23\",\n                className: \"form-control\",\n                onChange: this.handleHoursChange,\n                value: this.state.hours,\n                style: {\n                  width: \"12em\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Minutes:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                min: \"00\",\n                max: \"59\",\n                type: \"number\",\n                className: \"form-control\",\n                onChange: this.handleMinutesChange,\n                value: this.state.minutes,\n                style: {\n                  width: \"12em\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  class: \"btn btn-outline-primary btn-lg \",\n                  onClick: () => this.CheckAvailabilityAppointment(),\n                  style: {\n                    marginTop: \"2em\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Check appointment \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(FoundPharmaciesForDateRange, {\n        hiddenPharmacies: this.state.hiddenPharmacies,\n        pharmacies: this.state.pharmacies,\n        showPharmacistForPharmacy: this.showPharmacistForPharmacy,\n        backToSelectedDateRange: this.handleClosePharmaciesPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(FoundPharmacistForPharmacyForDateRange, {\n        hiddenPharmacist: this.state.hiddenPharmacists,\n        pharmacists: this.state.pharmacists,\n        reserveAppointmentForPharmacist: this.reserveAppointmentForPharmacist,\n        backToPharmacies: this.handleClosePharmacistPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ReservedConsultationModal, {\n        show: this.state.showReservedConsultationModal,\n        closeModal: this.closeReservedConsultationModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PharmaciesAppointmentStartPage;","map":{"version":3,"sources":["C:/Users/stefan/Desktop/ISA-projekat/ISA-projekat/ISA-front/src/Pages/PharmaciesAppointmentStartPage.js"],"names":["React","Component","Axios","Header","GetAuthorisation","DermatologistAppointmentPicture","UnsuccessfulAlert","SuccessfulAlert","NavLink","Redirect","DatePicker","FoundPharmaciesForDateRange","FoundPharmacistForPharmacyForDateRange","ReservedConsultationModal","API_URL","PharmaciesAppointmentStartPage","constructor","props","state","consultationDate","Date","selectedDate","hours","getHours","minutes","getMinutes","pharmacies","hiddenPharmacies","pharmacists","hiddenPharmacists","hiddenUnsuccessfulAlert","UnsuccessfulHeader","UnsuccessfulMessage","isPharmaciesEmpty","showReservedConsultationModal","hasRole","requestRole","currentRoles","JSON","parse","localStorage","getItem","currentRole","handleCloseSuccessfulAlert","setState","hiddenSuccessfulAlert","handleCloseUnsuccessfulAlert","handleDateChange","date","handleMinutesChange","event","target","value","handleHoursChange","CheckAvailabilityAppointment","getFullYear","getMonth","getDate","getTime","acceptableDate","consultationDateSelected","console","log","get","validateStatus","headers","Authorization","then","res","status","data","length","history","push","catch","err","showPharmacistForPharmacy","pharmacy","Id","isPharmacistsEmpty","handleClosePharmacistPage","handleClosePharmaciesPage","reserveAppointmentForPharmacist","pharmacist","reservationDTO","pharmacistId","startDate","post","closeReservedConsultationModal","componentDidMount","render","marginTop","fontSize","width","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../Components/Header';\r\nimport GetAuthorisation from \"../Funciton/GetAuthorisation\";\r\nimport DermatologistAppointmentPicture from \"../Images/appointment.png\" ;\r\nimport UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\nimport SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport FoundPharmaciesForDateRange from \"../Components/Pharmacies/FoundPharmaciesForDateRange\"\r\nimport FoundPharmacistForPharmacyForDateRange from \"../Components/Pharmacies/FoundPharmacistForPharmacyForDateRange\"\r\nimport ReservedConsultationModal from \"../Components/Modal/ReservedConsultationModal\"\r\n\r\n\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass PharmaciesAppointmentStartPage extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        \r\n        consultationDate: new Date(),\r\n\t\tselectedDate: new Date(),\r\n\t\thours: new Date().getHours(),\r\n\t\tminutes: new Date().getMinutes(),\r\n        pharmacies: [],\r\n\t\thiddenPharmacies: true,\r\n\t\tpharmacists : [],\r\n\t\thiddenPharmacists: true,\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n\t\tisPharmaciesEmpty : false,\r\n\t\tshowReservedConsultationModal: false\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_PATIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n  \r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n    handleDateChange = (date) => {\r\n\t\tthis.setState({ selectedDate: date });\r\n\t};\r\n\r\n\thandleMinutesChange = (event) => {\r\n\t\tif (event.target.value < 0) this.setState({ minutes: 0 });\r\n        else if (event.target.value > 59) this.setState({ minutes: 59 });\r\n\t\telse this.setState({ minutes: event.target.value });\r\n\t};\r\n\r\n\thandleHoursChange = (event) => {\r\n        if (event.target.value < 0) this.setState({ hours: 0 });\r\n\t\telse if (event.target.value > 23) this.setState({ hours: 23 });\r\n\t\telse this.setState({ hours: event.target.value });\r\n\t};\r\n    \r\n    \r\n    CheckAvailabilityAppointment = () => {\r\n        \r\n\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t});\r\n\r\n\t\tlet acceptableDate = new Date().getTime() + 3600;\r\n\t\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime();\r\n\r\n\t\t\r\n\t    \r\n             console.log(\"sok\");\r\n\t\t\tAxios.get( API_URL + \"/pharmacy/getAllFreePharmacyAppointmetsForSelectedDate/\" + consultationDateSelected  , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() }},\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t if (res.status === 200) {\r\n\t\t\t\t\t\tthis.setState({ pharmacies: res.data });\r\n\t\t\t\t\t\tif(this.state.pharmacies.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: false, isPharmaciesEmpty: false });\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmaciesEmpty: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t if(res.status === 401){\r\n\t\t\t\t\t\t this.props.history.push(\"/login\");\r\n                        this.setState({ hiddenUnsuccessfulAlert: false, \r\n                            UnsuccessfulHeader: \"Internal server error\", \r\n                            UnsuccessfulMessage: res.data });\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n                    this.setState({ hiddenUnsuccessfulAlert: false, \r\n                        UnsuccessfulHeader: \"Error\", \r\n                        UnsuccessfulMessage: \"Some error\" });\r\n                    \r\n\t\t\t\t});\r\n\t\t\r\n\t};\r\n\r\n\r\n   \r\n\r\n\tshowPharmacistForPharmacy = (pharmacy) => {\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\tconsultationDate: new Date(\r\n\t\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\t\tthis.state.hours,\r\n\t\t\t\tthis.state.minutes,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t).getTime(),\r\n\t\t});\r\n\r\n\t\tlet consultationDateSelected= new Date(\r\n\t\t\tthis.state.selectedDate.getFullYear(),\r\n\t\t\tthis.state.selectedDate.getMonth(),\r\n\t\t\tthis.state.selectedDate.getDate(),\r\n\t\t\tthis.state.hours,\r\n\t\t\tthis.state.minutes,\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t).getTime(); \r\n\r\n\t\t\tconsole.log(\"idemooo\")\r\n\t\tAxios.get(\r\n\t\t\tAPI_URL +\r\n\t\t\t\t\"/users/freePharmacistsForSelectedPharmacyInDataRange/\" + pharmacy.Id + \"/\"+ consultationDateSelected,\r\n\t\t\t{ validateStatus: () => true, headers: { Authorization: GetAuthorisation() } }\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\tthis.props.history.push(\"/login\");\r\n\r\n\t\t\t\t} else if (res.status === 200) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\t\tthis.setState({ pharmacists: res.data });\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif(this.state.pharmacists.length!==0){\r\n\t\t\t\t\t\t\tthis.setState({hiddenPharmacies: true, \r\n\t\t\t\t\t\t\t\tisPharmaciesEmpty: false,\r\n\t\t\t\t\t\t\t\t hiddenPharmacists: false,\r\n\t\t\t\t\t\t\t\t isPharmacistsEmpty: false });\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({isPharmacistsEmpty: true,hiddenPharmacists: true, hiddenPharmacies: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\tUnsuccessfulMessage: \"Some error\" });\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n\r\n\t\r\n\thandleClosePharmacistPage = () => {\r\n\t\tthis.setState({ hiddenPharmacists: true, hiddenPharmacies: false});\r\n\t};\r\n\r\n\r\n\thandleClosePharmaciesPage = () => {\r\n\t\tthis.setState({ hiddenPharmacists: true, hiddenPharmacies: true});\r\n\t};\r\n\r\n\r\n\r\n\treserveAppointmentForPharmacist = (pharmacist) => {\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\r\n\t\t\thiddenUnsuccessfulAlert: true,\r\n\t\t\tUnsuccessfulHeader: \"\",\r\n\t\t\tUnsuccessfulMessage: \"\",\r\n\t\t});\r\n\r\n\t\tconsole.log(this.state.selectedDate);\r\n\r\n\r\n\t\tlet reservationDTO = {\r\n\t\t\tpharmacistId: pharmacist.Id,\r\n\t\t\tstartDate: this.state.consultationDate,\r\n\t\t};\r\n\r\n\t\tAxios.post(\r\n\t\t\tAPI_URL + \"/appointment/reserveConsulationBySelectedPharmacist\", reservationDTO ,\r\n\t\t\t{ validateStatus: () => true, headers: { Authorization: GetAuthorisation() } }\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\tthis.props.history.push(\"/login\");\r\n\t\t\t\r\n\t\t\t\t} else if (res.status === 500) {\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\t\tUnsuccessfulMessage: \"Internal server error\" });\r\n\t\t\t\t } else if (res.status === 400) {\r\n\t\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\t\tUnsuccessfulHeader: \"Bad request\", \r\n\t\t\t\t\t\tUnsuccessfulMessage: res.data });\r\n\t\t\t\t } else if (res.status === 201 ){\r\n\t\t\t\t\t\tconsole.log(\"uspesno zakao termin\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState({ showReservedConsultationModal: true });\r\n\t\t\t\t  }\t\r\n\t\t\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ hiddenUnsuccessfulAlert: false, \r\n\t\t\t\t\tUnsuccessfulHeader: \"Error\", \r\n\t\t\t\t\tUnsuccessfulMessage: \"Some error\" });\r\n\t\t\t});\r\n\r\n\r\n\r\n\r\n\r\n\t};\r\n\r\n\tcloseReservedConsultationModal = () => {\r\n\t\tthis.setState({ showReservedConsultationModal: false });\r\n\t\tthis.props.history.push(\"/\");\r\n\t};\r\n\r\n\r\n\t\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n         <Header/>\r\n      \r\n         <div className=\"container\" hidden={!this.state.hiddenPharmacies || !this.state.hiddenPharmacists} >\r\n\r\n\r\n         <UnsuccessfulAlert\r\n\t\t\t\thidden={this.state.hiddenUnsuccessfulAlert}\r\n\t\t\t\theader={this.state.UnsuccessfulHeader}\r\n\t\t\t\tmessage={this.state.UnsuccessfulMessage}\r\n\t\t\t\thandleCloseAlert={this.handleCloseUnsuccessfulAlert}\r\n\t\t/>\r\n       \r\n\r\n\r\n         <h1  className=\"text-center  mt-3  \" >Please select the desired date for consultations with a pharmacist!</h1>\r\n         \r\n\t\t <h5 className=\" text-center  mt-3  text-danger\" hidden={!this.state.isPharmaciesEmpty}>\r\n\t\t\t\t\t\tWe couldn't find pharmacies with free pharmacists at desired time. Please change date and time.\r\n\t\t</h5>\r\n\r\n         <div className=\"control-group\" style={{ marginTop: \"5em\" }}>\r\n\t\t\t\t\t\t<div className=\"form-row justify-content-center\">\r\n                            <div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n                                    <b>Select date:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tminDate={new Date()}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => this.handleDateChange(date)}\r\n\t\t\t\t\t\t\t\t\tselected={this.state.selectedDate}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n\t\t\t\t\t\t\t\t\t<b>Hours:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input\r\n                                    type=\"number\"\r\n\t\t\t\t\t\t\t\t\tmin=\"00\"\r\n\t\t\t\t\t\t\t\t\tmax=\"23\"\r\n                                    className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleHoursChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.hours}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"12em\" }}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<div style={{ fontSize: \"20px\" }}>\r\n                                    <b>Minutes:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tmin=\"00\"\r\n                                    max=\"59\"\r\n                                    type=\"number\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleMinutesChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.minutes}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"12em\" }}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col text-center\">\r\n\t\t\t\t\t\t            <button type=\"button\" class=\"btn btn-outline-primary btn-lg \"\r\n                                        onClick={() => this.CheckAvailabilityAppointment()}\r\n                                        style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n                                        >\r\n                                        <b>Check appointment </b>\r\n\r\n                                     </button>\r\n\r\n                                </div>\r\n                             </div>\r\n                        </div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\r\n          \r\n        </div>\r\n\r\n\r\n\t\t<FoundPharmaciesForDateRange\r\n\r\n\t\t\t\thiddenPharmacies= {this.state.hiddenPharmacies}\r\n\t\t\t\tpharmacies={this.state.pharmacies}\r\n\t\t\t\tshowPharmacistForPharmacy={this.showPharmacistForPharmacy}\r\n\t\t\t\tbackToSelectedDateRange= {this.handleClosePharmaciesPage}\r\n\r\n\t\t/>\r\n\r\n\t   <FoundPharmacistForPharmacyForDateRange\r\n\r\n\t\thiddenPharmacist= {this.state.hiddenPharmacists}\r\n\t\tpharmacists= {this.state.pharmacists}\r\n\t\treserveAppointmentForPharmacist={this.reserveAppointmentForPharmacist}\t\r\n\t\tbackToPharmacies= {this.handleClosePharmacistPage}\r\n\t   />\r\n\r\n\r\n\t\t<ReservedConsultationModal\t\r\n\t\t\t\tshow= {this.state.showReservedConsultationModal}\r\n\t\t\t\tcloseModal= {this.closeReservedConsultationModal}\r\n\r\n\t\t/>\t\r\n\r\n\t\t\r\n\r\n\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PharmaciesAppointmentStartPage;"]},"metadata":{},"sourceType":"module"}